
\data\
ngram 1=97
ngram 2=257

\1-grams:
-1.817016	"	-99
-3.188084	"In	-99
-3.188084	"\n"	-99
-2.534872	"a	-99
-2.210361	&&	-99
-1.378525	(	-99
-1.378525	)	-99
-3.188084	*	-99
-1.790144	+	-99
-3.011993	++	-99
-2.108903	,	-99
-2.790144	-	-99
-1.175247	.	-99
-3.489114	/	-99
-1.932812	0	-99
-2.644016	1	-99
-3.489114	10	-99
-3.489114	1000000000.0	-99
-3.489114	15	-99
-3.188084	2	-99
-3.188084	5	-99
-1.158701	;	-99
-3.188084	<	-99
-0.8160934	</s>
-99	<s>	-99
-99	<unk>
-1.293215	=	-99
-1.997753	==	-99
-3.489114	>	-99
-3.188084	NANOS_PER_SEC	-99
-3.011993	Rectangle	-99
-3.188084	System	-99
-1.756721	VanillaBoilerplate	-99
-3.188084	[	-99
-3.188084	]	-99
-1.489114	a	-99
-3.489114	add	-99
-3.489114	awt	-99
-1.489114	b	-99
-3.011993	base	-99
-2.534872	boolean	-99
-1.455691	c	-99
-2.534872	class	-99
-3.188084	double	-99
-3.011993	else	-99
-2.534872	equals	-99
-3.011993	exp	-99
-3.188084	fact	-99
-3.188084	fib	-99
-3.489114	final	-99
-3.489114	for	-99
-2.534872	getA	-99
-2.534872	getB	-99
-2.534872	getC	-99
-3.188084	go.	-99
-2.887054	i	-99
-3.011993	if	-99
-3.489114	import	-99
-1.36854	int	-99
-3.489114	java	-99
-3.489114	length	-99
-3.011993	list	-99
-3.188084	method	-99
-2.534872	n	-99
-3.489114	new	-99
-3.489114	ohsocreative	-99
-3.188084	out	-99
-2.887054	pos	-99
-3.188084	pow	-99
-3.188084	println	-99
-2.041956	private	-99
-1.392204	public	-99
-2.710963	r1	-99
-3.489114	reallyCreative	-99
-2.409933	result	-99
-1.798918	return	-99
-2.233842	setA	-99
-2.534872	setB	-99
-2.534872	setC	-99
-3.489114	setSize	-99
-3.188084	size	-99
-3.489114	slowfib	-99
-2.710963	static	-99
-2.534872	string	-99
-1.330752	this	-99
-3.489114	time	-99
-2.534872	toString	-99
-1.631782	v	-99
-3.188084	value	-99
-1.89805	void	-99
-3.489114	while	-99
-1.534872	x	-99
-2.233842	y	-99
-2.534872	z	-99
-1.388744	{	-99
-3.489114	||	-99
-1.388744	}	-99

\2-grams:
-0.2096999	" +
-0.7178553	" b
-0.7178553	" c
0	"In method
0	"\n" )
0	"a =
-0.0234811	&& this
-1.278754	&& value
-1.80956	( "In
-0.4384919	( )
-2.11059	( 0
-2.11059	( 10
-0.8553172	( VanillaBoilerplate
-2.11059	( a
-2.11059	( base
-2.11059	( exp
-0.4030195	( int
-1.41162	( n
-2.11059	( pos
-2.11059	) +
-2.11059	) /
-1.265492	) ;
-1.633469	) </s>
-0.04240385	) {
-0.30103	* fact
-0.30103	* pow
-0.4436975	+ "
-1.39794	+ "\n"
-0.7447275	+ a
-0.7447275	+ b
-0.7447275	+ c
-1.69897	+ fib
-1.39794	+ r1
-0.4771213	++ )
-0.1760913	++ ;
-1.380211	, 0
-1.380211	, 15
-1.079181	, 5
-1.380211	, exp
-0.1014576	, int
-0.2218488	- 1
-0.69897	- 2
-0.69897	- b
-2.313867	. Rectangle
-0.4565347	. a
-2.313867	. awt
-0.5145267	. b
-0.5145267	. c
-2.313867	. length
-2.012837	. out
-2.012837	. println
-2.313867	. setSize
0	/ NANOS_PER_SEC
-1.255273	0 )
-1.255273	0 ,
-0.05115252	0 ;
-0.3679768	1 )
-0.3679768	1 ;
-0.845098	1 ||
0	10 ,
0	1000000000.0 ;
0	15 )
0	2 )
-0.30103	5 )
-0.30103	5 ,
-0.004077912	; </s>
-2.029384	; i
-0.30103	< list
-0.30103	< size
-2.673021	<s> Rectangle
-2.371991	<s> System
-1.718778	<s> a
-1.718778	<s> b
-1.718778	<s> c
-2.1959	<s> else
-2.673021	<s> for
-2.1959	<s> if
-2.070961	<s> int
-2.673021	<s> list
-2.673021	<s> pos
-1.225863	<s> private
-0.6011389	<s> public
-2.673021	<s> r1
-1.89487	<s> result
-0.9828248	<s> return
-0.7187784	<s> this
-2.673021	<s> while
-1.718778	<s> {
-0.5726504	<s> }
-0.7645359	= "
-0.6907496	= 0
-1.718778	= 1
-2.1959	= 1000000000.0
-2.1959	= base
-1.241657	= c
-2.1959	= fib
-2.1959	= n
-2.1959	= new
-0.7645359	= v
-0.5426871	= x
-1.241657	= y
-1.190332	== 0
-1.491362	== 1
-1.491362	== 2
-0.05999793	== v
0	> pos
-0.30103	NANOS_PER_SEC ;
-0.30103	NANOS_PER_SEC =
-0.4771213	Rectangle (
-0.4771213	Rectangle ;
-0.4771213	Rectangle r1
0	System .
-0.30103	VanillaBoilerplate (
-0.7781513	VanillaBoilerplate </s>
-0.4771213	VanillaBoilerplate v
-0.30103	[ ]
-0.30103	[ i
-0.30103	] ++
-0.30103	] list
-1.045758	a &&
-1.045758	a +
-2	a -
-0.5686362	a ;
-0.3467875	a =
-1.045758	a ==
0	add (
0	awt .
-1.045758	b &&
-2	b )
-1.045758	b +
-0.5686362	b ;
-0.3467875	b =
-1.045758	b ==
-0.4771213	base *
-0.1760913	base ,
0	boolean equals
-0.30103	c ;
-0.3802112	c =
-1.079181	c ==
0	class VanillaBoilerplate
-0.30103	double NANOS_PER_SEC
-0.30103	double time
0	else </s>
0	equals (
-0.4771213	exp )
-0.4771213	exp -
-0.4771213	exp ==
0	fact (
0	fib (
0	final double
0	for (
0	getA (
0	getB (
0	getC (
0	go. r1
-0.60206	i ++
-0.60206	i <
-0.60206	i =
-0.60206	i ]
0	if (
0	import java
-2.120574	int [
-1.166331	int a
-1.166331	int b
-2.120574	int base
-1.166331	int c
-2.120574	int exp
-2.120574	int fact
-1.166331	int getA
-1.166331	int getB
-1.166331	int getC
-2.120574	int i
-1.819544	int n
-2.120574	int pos
-2.120574	int pow
-1.643453	int result
-2.120574	int size
-2.120574	int slowfib
-2.120574	int value
-0.4673614	int x
-1.166331	int y
-1.166331	int z
0	java .
0	length ;
-0.4771213	list )
-0.4771213	list .
-0.4771213	list [
0	method go.
-0.6532125	n )
-0.9542425	n *
-0.4771213	n -
-0.4771213	n ==
0	new Rectangle
0	ohsocreative (
0	out .
-0.60206	pos )
-0.60206	pos ++
-0.60206	pos <
-0.60206	pos =
0	pow (
0	println (
0	private int
-0.6655462	public VanillaBoilerplate
-1.142668	public boolean
-1.142668	public class
-2.09691	public double
-0.6655462	public int
-1.318759	public static
-1.142668	public string
-0.5287083	public void
-0.4771213	r1 "
-0.4771213	r1 +
-0.7781513	r1 .
-0.7781513	r1 =
0	reallyCreative (
-0.60206	result ;
-0.1249387	result =
-0.7359536	return "a
-1.690196	return (
-1.213075	return result
-0.1338936	return this
0	setA (
0	setB (
0	setC (
0	setSize (
-0.30103	size &&
-0.30103	size ;
0	slowfib (
-0.7781513	static final
-0.30103	static int
-0.4771213	static void
0	string toString
0	this .
0	time (
0	toString (
-0.60206	v )
-0.1249387	v .
-0.30103	value )
-0.30103	value >
-1.591065	void add
-1.591065	void ohsocreative
-1.591065	void reallyCreative
-0.3357921	void setA
-0.6368221	void setB
-0.6368221	void setC
0	while (
-0.39794	x )
-1	x ,
-0.30103	x ;
-0.30103	y ,
-0.30103	y ;
0	z )
0	{ </s>
0	|| n
-0.02848854	} </s>
-2.100371	} import
-1.255273	} public

\end\
