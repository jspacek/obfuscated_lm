
\data\
ngram 1=113

\1-grams:
-2.895422	!=
-2.050324	"
-2.594393	"In
-2.594393	"\n"
-2.895422	"a
-2.196453	&&
-1.327221	(
-1.327221	)
-2.594393	*
-1.895423	+
-2.293363	++
-1.992333	,
-2.196453	-
-1.404061	.
-2.895422	/
-1.781479	0
-2.050324	1
-2.594393	10
-2.895422	1000000000.0
-2.895422	15
-2.594393	2
-2.594393	5
-1.179419	;
-2.418301	<
-0.8126372	</s>
-99	<s>
-99	<unk>
-1.376909	=
-1.992333	==
-2.895422	>
-2.895422	Eight
-2.895422	Five
-2.895422	Four
-2.594393	NANOS_PER_SEC
-2.895422	Nine
-2.418301	Rectangle
-2.895422	Seven
-2.895422	Six
-2.594393	System
-2.895422	Three
-2.895422	Two
-2.117271	VanillaBoilerplate
-2.117271	[
-2.117271	]
-1.816241	a
-2.895422	add
-2.895422	awt
-1.816241	b
-2.418301	base
-2.418301	boolean
-1.816241	c
-2.895422	char
-1.94118	class
-2.594393	double
-2.418301	else
-2.895422	equals
-2.418301	exp
-2.594393	fact
-2.594393	final
-2.895422	for
-2.895422	getA
-2.895422	getB
-2.895422	getC
-2.594393	go.
-2.293363	i
-2.418301	if
-2.895422	import
-1.418301	int
-2.895422	isSquare
-2.895422	java
-2.594393	length
-2.418301	list
-2.418301	mat
-2.594393	method
-1.94118	n
-2.895422	new
-2.895422	null
-2.418301	numRows
-2.895422	ohsocreative
-2.594393	out
-2.293363	pos
-2.594393	pow
-2.594393	println
-2.196453	private
-1.433025	public
-2.117271	r1
-2.895422	reallyCreative
-1.816241	result
-1.895423	return
-2.196453	row
-2.594393	setA
-2.895422	setB
-2.895422	setC
-2.895422	setSize
-2.594393	size
-2.418301	slowfib
-2.293363	square
-2.050324	static
-2.895422	string
-1.691303	this
-2.895422	time
-2.895422	toString
-2.895422	true
-1.992333	v
-2.594393	value
-2.050324	void
-2.594393	while
-1.895423	x
-2.594393	y
-2.895422	z
-1.390273	{
-2.895422	||
-1.390273	}

\end\
