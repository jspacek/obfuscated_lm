
\data\
ngram 1=122
ngram 2=335

\1-grams:
-2.906873	!=	-99
-1.952631	"	-99
-2.906873	"Computer	-99
-2.605844	"In	-99
-2.605844	"\n"	-99
-2.906873	"a	-99
-2.906873	"is	-99
-2.304814	&&	-99
-1.338672	(	-99
-1.338672	)	-99
-2.605844	*	-99
-1.79293	+	-99
-2.429752	++	-99
-1.952631	,	-99
-2.207904	-	-99
-1.401724	.	-99
-2.906873	/	-99
-1.827692	0	-99
-2.061775	1	-99
-2.429752	10	-99
-2.906873	1000000000.0	-99
-2.906873	15	-99
-2.906873	17	-99
-2.605844	2	-99
-2.906873	307	-99
-2.605844	5	-99
-1.166511	;	-99
-2.605844	<	-99
-0.8205137	</s>
-99	<s>	-99
-99	<unk>
-1.32709	=	-99
-2.003783	==	-99
-2.906873	Eight	-99
-2.906873	Five	-99
-2.605844	NANOS_PER_SEC	-99
-2.906873	Nine	-99
-2.906873	One	-99
-2.429752	Rectangle	-99
-2.906873	Science"	-99
-2.906873	Seven	-99
-2.906873	Six	-99
-2.207904	String	-99
-2.605844	System	-99
-2.906873	Three	-99
-2.906873	Two	-99
-2.128722	VanillaBoilerplate	-99
-2.128722	[	-99
-2.128722	]	-99
-1.827692	a	-99
-2.906873	awt	-99
-1.827692	b	-99
-2.429752	base	-99
-2.429752	boolean	-99
-1.827692	c	-99
-2.906873	char	-99
-1.952631	class	-99
-2.906873	creativeMethod	-99
-2.605844	double	-99
-2.429752	else	-99
-2.906873	equals	-99
-2.429752	exp	-99
-2.605844	fact	-99
-2.605844	final	-99
-2.906873	for	-99
-2.906873	fun"	-99
-2.906873	getA	-99
-2.906873	getB	-99
-2.906873	getC	-99
-2.605844	go.	-99
-2.304814	i	-99
-2.429752	if	-99
-2.906873	import	-99
-1.459715	int	-99
-2.906873	isSquare	-99
-2.906873	java	-99
-2.605844	length	-99
-2.429752	list	-99
-2.429752	mat	-99
-2.605844	method	-99
-1.952631	n	-99
-2.906873	new	-99
-2.906873	null	-99
-2.429752	numRows	-99
-2.906873	ohsocreative	-99
-2.605844	out	-99
-2.605844	pow	-99
-2.605844	println	-99
-2.304814	private	-99
-1.444476	public	-99
-2.128722	r1	-99
-2.906873	reallyCreative	-99
-1.827692	result	-99
-1.906874	return	-99
-2.207904	row	-99
-2.605844	s1	-99
-2.429752	s2	-99
-2.906873	s3	-99
-2.605844	s4	-99
-2.906873	s5	-99
-2.605844	setA	-99
-2.906873	setB	-99
-2.906873	setC	-99
-2.906873	setSize	-99
-2.429752	slowfib	-99
-2.304814	square	-99
-2.061775	static	-99
-2.906873	string	-99
-2.906873	substring	-99
-1.702754	this	-99
-2.906873	time	-99
-2.906873	toString	-99
-2.906873	true	-99
-2.003783	v	-99
-2.061775	void	-99
-2.906873	while	-99
-1.827692	x	-99
-2.605844	y	-99
-2.906873	z	-99
-1.415512	{	-99
-2.906873	||	-99
-1.415512	}	-99

\2-grams:
0	!= null
-0.9542425	" "
-0.1760913	" +
-0.9542425	" b
-0.9542425	" c
0	"Computer Science"
0	"In method
0	"\n" )
0	"a =
0	"is fun"
-0.60206	&& (
-0.60206	&& row
-0.30103	&& this
-1.267172	( "In
-0.6651117	( )
-1.568202	( 0
-1.267172	( 10
-1.267172	( VanillaBoilerplate
-1.568202	( a
-1.568202	( base
-1.568202	( char
-1.568202	( exp
-0.5682017	( int
-1.267172	( mat
-0.8692317	( n
-1.568202	( square
-1.568202	) &&
-1.568202	) +
-1.568202	) /
-0.6139592	) ;
-1.09108	) </s>
-0.225779	) {
-0.30103	* fact
-0.30103	* pow
-0.6368221	+ "
-0.8129134	+ "\n"
-1.113943	+ a
-1.113943	+ b
-1.113943	+ c
-0.8129134	+ r1
-1.113943	+ s4
-1.113943	+ slowfib
-1.113943	+ x
-0.4771213	++ )
-0.1760913	++ ;
-0.9542425	, 0
-0.9542425	, 15
-0.9542425	, 17
-0.6532125	, 5
-0.9542425	, exp
-0.4771213	, int
-0.2218488	- 1
-0.69897	- 2
-0.69897	- b
-1.50515	. Rectangle
-0.60206	. a
-1.50515	. awt
-0.6600519	. b
-0.6600519	. c
-1.20412	. length
-1.20412	. out
-1.20412	. println
-1.50515	. setSize
-1.50515	. substring
0	/ NANOS_PER_SEC
-0.7781513	0 )
-0.7781513	0 ,
-0.1760913	0 ;
-0.3679768	1 )
-0.3679768	1 ;
-0.845098	1 ||
-0.1760913	10 ,
-0.4771213	10 ;
0	1000000000.0 ;
0	15 )
0	17 )
0	2 )
0	307 ;
-0.30103	5 )
-0.30103	5 ,
-0.01608682	; </s>
-1.439333	; i
-0.30103	< list
-0.30103	< numRows
-2.08636	<s> Rectangle
-1.38739	<s> String
-1.78533	<s> System
-2.08636	<s> a
-2.08636	<s> b
-2.08636	<s> boolean
-2.08636	<s> c
-1.609239	<s> else
-2.08636	<s> final
-2.08636	<s> for
-1.609239	<s> if
-1.38739	<s> int
-2.08636	<s> list
-1.4843	<s> private
-0.7439371	<s> public
-2.08636	<s> r1
-1.308209	<s> result
-1.08636	<s> return
-2.08636	<s> row
-2.08636	<s> square
-1.08636	<s> this
-2.08636	<s> while
-1.132117	<s> {
-0.5949981	<s> }
-1.102662	= "
-1.579784	= "Computer
-1.579784	= "is
-1.579784	= (
-0.6766936	= 0
-1.102662	= 1
-1.579784	= 10
-1.579784	= 1000000000.0
-1.579784	= 307
-1.579784	= base
-1.579784	= c
-1.579784	= n
-1.579784	= new
-1.579784	= s1
-1.278754	= s2
-1.579784	= slowfib
-1.579784	= true
-1.102662	= v
-0.8808136	= x
-1.579784	= y
-0.60206	== 0
-0.90309	== 1
-0.90309	== 2
-0.90309	== numRows
-0.4259687	== v
0	Eight </s>
0	Five </s>
-0.30103	NANOS_PER_SEC ;
-0.30103	NANOS_PER_SEC =
0	Nine </s>
0	One </s>
-0.4771213	Rectangle (
-0.4771213	Rectangle ;
-0.4771213	Rectangle r1
0	Science" ;
0	Seven </s>
0	Six </s>
-0.69897	String s1
-0.69897	String s2
-0.69897	String s3
-0.69897	String s4
-0.69897	String s5
0	System .
0	Three </s>
0	Two </s>
-0.30103	VanillaBoilerplate (
-0.7781513	VanillaBoilerplate </s>
-0.4771213	VanillaBoilerplate v
-0.30103	[ ]
-0.7781513	[ i
-0.4771213	[ row
-0.7781513	] !=
-0.7781513	] ++
-0.7781513	] .
-0.7781513	] [
-0.7781513	] list
-0.7781513	] mat
-1.079181	a &&
-1.079181	a +
-1.079181	a -
-0.60206	a ;
-0.3802112	a =
-1.079181	a ==
0	awt .
-1.079181	b &&
-1.079181	b )
-1.079181	b +
-0.60206	b ;
-0.3802112	b =
-1.079181	b ==
-0.4771213	base *
-0.1760913	base ,
-0.4771213	boolean equals
-0.4771213	boolean isSquare
-0.4771213	boolean square
-0.30103	c ;
-0.3802112	c =
-1.079181	c ==
0	char [
-0.9542425	class Eight
-0.9542425	class Five
-0.9542425	class Nine
-0.9542425	class One
-0.9542425	class Seven
-0.9542425	class Six
-0.9542425	class Three
-0.9542425	class Two
-0.9542425	class VanillaBoilerplate
0	creativeMethod (
-0.30103	double NANOS_PER_SEC
-0.30103	double time
0	else </s>
0	equals (
-0.4771213	exp )
-0.4771213	exp -
-0.4771213	exp ==
0	fact (
-0.30103	final double
-0.30103	final int
0	for (
0	fun" ;
0	getA (
0	getB (
0	getC (
0	go. r1
-0.60206	i ++
-0.60206	i <
-0.60206	i =
-0.60206	i ]
0	if (
0	import java
-1.447158	int [
-1.447158	int a
-1.447158	int b
-1.447158	int base
-1.447158	int c
-1.447158	int exp
-1.447158	int fact
-1.447158	int getA
-1.447158	int getB
-1.447158	int getC
-1.447158	int i
-1.146128	int n
-1.447158	int numRows
-1.447158	int pow
-0.9700368	int result
-1.447158	int row
-1.447158	int slowfib
-0.6690068	int x
-1.447158	int y
-1.447158	int z
0	isSquare (
0	java .
-0.30103	length ;
-0.30103	length ==
-0.4771213	list )
-0.4771213	list .
-0.4771213	list [
-0.4771213	mat )
-0.1760913	mat [
0	method go.
-0.6532125	n )
-0.9542425	n *
-0.4771213	n -
-0.4771213	n ==
0	new Rectangle
0	null )
-0.1760913	numRows )
-0.4771213	numRows =
0	ohsocreative (
0	out .
0	pow (
0	println (
-0.1249387	private int
-0.60206	private static
-0.9852768	public VanillaBoilerplate
-1.462398	public boolean
-0.5081555	public class
-1.462398	public double
-0.9852768	public int
-0.6842467	public static
-1.462398	public string
-0.763428	public void
-0.4771213	r1 "
-0.4771213	r1 +
-0.7781513	r1 .
-0.7781513	r1 =
0	reallyCreative (
-0.60206	result ;
-0.1249387	result =
-1	return "a
-1	return (
-0.5228788	return result
-1	return square
-0.39794	return this
-0.69897	row ++
-0.69897	row <
-0.69897	row =
-0.39794	row ]
-0.30103	s1 +
-0.30103	s1 =
-0.4771213	s2 +
-0.4771213	s2 .
-0.4771213	s2 =
0	s3 =
-0.30103	s4 ;
-0.30103	s4 =
0	s5 =
0	setA (
0	setB (
0	setC (
0	setSize (
0	slowfib (
-0.60206	square &&
-0.60206	square ;
-0.30103	square =
-0.845098	static boolean
-0.845098	static final
-0.3679768	static int
-0.544068	static void
0	string toString
0	substring (
0	this .
0	time (
0	toString (
0	true ;
-0.60206	v )
-0.1249387	v .
-0.845098	void creativeMethod
-0.845098	void ohsocreative
-0.845098	void reallyCreative
-0.544068	void setA
-0.845098	void setB
-0.845098	void setC
0	while (
-0.4771213	x )
-1.079181	x ,
-0.30103	x ;
-1.079181	x =
-0.30103	y ,
-0.30103	y ;
0	z )
0	{ </s>
0	|| n
-0.1296339	} </s>
-1.491362	} import
-0.6462637	} public

\end\
