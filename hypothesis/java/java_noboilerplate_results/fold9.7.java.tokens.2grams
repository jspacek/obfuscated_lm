
\data\
ngram 1=124
ngram 2=339

\1-grams:
-2.899821	!=	-99
-1.945578	"	-99
-2.899821	"Computer	-99
-2.59879	"In	-99
-2.59879	"\n"	-99
-2.899821	"a	-99
-2.899821	"is	-99
-2.20085	&&	-99
-1.343518	(	-99
-1.343518	)	-99
-2.899821	*	-99
-1.785877	+	-99
-2.29776	++	-99
-2.054723	,	-99
-2.29776	-	-99
-1.39467	.	-99
-2.899821	/	-99
-1.858428	0	-99
-2.20085	1	-99
-2.422699	10	-99
-2.899821	1000000000.0	-99
-2.899821	15	-99
-2.899821	17	-99
-2.59879	2	-99
-2.899821	307	-99
-2.59879	5	-99
-1.167427	;	-99
-2.422699	<	-99
-0.8170351	</s>
-99	<s>	-99
-99	<unk>
-1.343518	=	-99
-2.054723	==	-99
-2.899821	>	-99
-2.899821	Eight	-99
-2.899821	Five	-99
-2.899821	Four	-99
-2.59879	NANOS_PER_SEC	-99
-2.899821	Nine	-99
-2.899821	One	-99
-2.422699	Rectangle	-99
-2.899821	Science"	-99
-2.899821	Six	-99
-2.20085	String	-99
-2.59879	System	-99
-2.899821	Three	-99
-2.899821	Two	-99
-2.121669	VanillaBoilerplate	-99
-2.121669	[	-99
-2.121669	]	-99
-1.820639	a	-99
-2.899821	add	-99
-2.899821	awt	-99
-1.820639	b	-99
-2.422699	boolean	-99
-1.820639	c	-99
-2.899821	char	-99
-1.945578	class	-99
-2.899821	creativeMethod	-99
-2.59879	double	-99
-2.59879	else	-99
-2.899821	equals	-99
-2.59879	fact	-99
-2.59879	final	-99
-2.899821	for	-99
-2.899821	fun"	-99
-2.899821	getA	-99
-2.899821	getB	-99
-2.899821	getC	-99
-2.59879	go.	-99
-2.29776	i	-99
-2.59879	if	-99
-2.899821	import	-99
-1.468457	int	-99
-2.899821	isSquare	-99
-2.899821	java	-99
-2.59879	length	-99
-2.422699	list	-99
-2.422699	mat	-99
-2.59879	method	-99
-1.945578	n	-99
-2.899821	new	-99
-2.899821	null	-99
-2.422699	numRows	-99
-2.899821	ohsocreative	-99
-2.59879	out	-99
-2.29776	pos	-99
-2.59879	println	-99
-2.20085	private	-99
-1.437423	public	-99
-2.121669	r1	-99
-2.899821	reallyCreative	-99
-1.996731	result	-99
-1.945578	return	-99
-2.20085	row	-99
-2.59879	s1	-99
-2.422699	s2	-99
-2.899821	s3	-99
-2.59879	s4	-99
-2.899821	s5	-99
-2.59879	setA	-99
-2.899821	setB	-99
-2.899821	setC	-99
-2.899821	setSize	-99
-2.59879	size	-99
-2.422699	slowfib	-99
-2.29776	square	-99
-2.121669	static	-99
-2.899821	string	-99
-2.899821	substring	-99
-1.695701	this	-99
-2.899821	time	-99
-2.899821	toString	-99
-2.899821	true	-99
-1.996731	v	-99
-2.59879	value	-99
-1.996731	void	-99
-2.59879	while	-99
-1.820639	x	-99
-2.59879	y	-99
-2.899821	z	-99
-1.39467	{	-99
-2.899821	||	-99
-1.39467	}	-99

\2-grams:
0	!= null
-0.9542425	" "
-0.1760913	" +
-0.9542425	" b
-0.9542425	" c
0	"Computer Science"
0	"In method
0	"\n" )
0	"a =
0	"is fun"
-0.69897	&& (
-0.69897	&& row
-0.39794	&& this
-0.69897	&& value
-1.255273	( "In
-0.6532125	( )
-1.556303	( 0
-1.255273	( 10
-1.255273	( VanillaBoilerplate
-1.556303	( a
-1.556303	( char
-0.5563025	( int
-1.255273	( mat
-0.8573325	( n
-1.556303	( pos
-1.556303	( square
-1.556303	) &&
-1.556303	) +
-1.556303	) /
-0.6532125	) ;
-1.255273	) </s>
-0.1945747	) {
0	* fact
-0.6368221	+ "
-0.8129134	+ "\n"
-1.113943	+ a
-1.113943	+ b
-1.113943	+ c
-0.8129134	+ r1
-1.113943	+ s4
-1.113943	+ slowfib
-1.113943	+ x
-0.60206	++ )
-0.1249387	++ ;
-0.845098	, 0
-0.845098	, 15
-0.845098	, 17
-0.544068	, 5
-0.544068	, int
-0.30103	- 1
-0.60206	- 2
-0.60206	- b
-1.50515	. Rectangle
-0.60206	. a
-1.50515	. awt
-0.6600519	. b
-0.6600519	. c
-1.20412	. length
-1.20412	. out
-1.20412	. println
-1.50515	. setSize
-1.50515	. substring
0	/ NANOS_PER_SEC
-1.041393	0 )
-0.7403627	0 ,
-0.1383027	0 ;
-0.39794	1 )
-0.39794	1 ;
-0.69897	1 ||
-0.1760913	10 ,
-0.4771213	10 ;
0	1000000000.0 ;
0	15 )
0	17 )
0	2 )
0	307 ;
-0.30103	5 )
-0.30103	5 ,
-0.01639042	; </s>
-1.431364	; i
-0.4771213	< list
-0.4771213	< numRows
-0.4771213	< size
-2.082785	<s> Rectangle
-1.383815	<s> String
-1.781755	<s> System
-2.082785	<s> a
-2.082785	<s> b
-2.082785	<s> boolean
-2.082785	<s> c
-1.781755	<s> else
-2.082785	<s> final
-2.082785	<s> for
-1.781755	<s> if
-1.383815	<s> int
-2.082785	<s> list
-2.082785	<s> pos
-1.383815	<s> private
-0.7403627	<s> public
-2.082785	<s> r1
-1.480725	<s> result
-1.128543	<s> return
-2.082785	<s> row
-2.082785	<s> square
-1.082785	<s> this
-1.781755	<s> while
-1.128543	<s> {
-0.5776354	<s> }
-1.079181	= "
-1.556303	= "Computer
-1.556303	= "is
-1.556303	= (
-0.6532125	= 0
-1.255273	= 1
-1.556303	= 10
-1.556303	= 1000000000.0
-1.556303	= 307
-1.556303	= c
-1.556303	= n
-1.556303	= new
-1.556303	= s1
-1.255273	= s2
-1.556303	= slowfib
-1.556303	= true
-1.079181	= v
-0.8573325	= x
-1.556303	= y
-0.845098	== 0
-0.845098	== 1
-0.845098	== 2
-0.845098	== numRows
-0.3679768	== v
0	> pos
0	Eight </s>
0	Five </s>
0	Four </s>
-0.30103	NANOS_PER_SEC ;
-0.30103	NANOS_PER_SEC =
0	Nine </s>
0	One </s>
-0.4771213	Rectangle (
-0.4771213	Rectangle ;
-0.4771213	Rectangle r1
0	Science" ;
0	Six </s>
-0.69897	String s1
-0.69897	String s2
-0.69897	String s3
-0.69897	String s4
-0.69897	String s5
0	System .
0	Three </s>
0	Two </s>
-0.30103	VanillaBoilerplate (
-0.7781513	VanillaBoilerplate </s>
-0.4771213	VanillaBoilerplate v
-0.30103	[ ]
-0.7781513	[ i
-0.4771213	[ row
-0.7781513	] !=
-0.7781513	] ++
-0.7781513	] .
-0.7781513	] [
-0.7781513	] list
-0.7781513	] mat
-1.079181	a &&
-1.079181	a +
-1.079181	a -
-0.60206	a ;
-0.3802112	a =
-1.079181	a ==
0	add (
0	awt .
-1.079181	b &&
-1.079181	b )
-1.079181	b +
-0.60206	b ;
-0.3802112	b =
-1.079181	b ==
-0.4771213	boolean equals
-0.4771213	boolean isSquare
-0.4771213	boolean square
-0.30103	c ;
-0.3802112	c =
-1.079181	c ==
0	char [
-0.9542425	class Eight
-0.9542425	class Five
-0.9542425	class Four
-0.9542425	class Nine
-0.9542425	class One
-0.9542425	class Six
-0.9542425	class Three
-0.9542425	class Two
-0.9542425	class VanillaBoilerplate
0	creativeMethod (
-0.30103	double NANOS_PER_SEC
-0.30103	double time
0	else </s>
0	equals (
0	fact (
-0.30103	final double
-0.30103	final int
0	for (
0	fun" ;
0	getA (
0	getB (
0	getC (
0	go. r1
-0.60206	i ++
-0.60206	i <
-0.60206	i =
-0.60206	i ]
0	if (
0	import java
-1.431364	int [
-1.431364	int a
-1.431364	int b
-1.431364	int c
-1.431364	int fact
-1.431364	int getA
-1.431364	int getB
-1.431364	int getC
-1.431364	int i
-1.130334	int n
-1.431364	int numRows
-1.431364	int pos
-1.130334	int result
-1.431364	int row
-1.431364	int size
-1.431364	int slowfib
-1.431364	int value
-0.6532125	int x
-1.431364	int y
-1.431364	int z
0	isSquare (
0	java .
-0.30103	length ;
-0.30103	length ==
-0.4771213	list )
-0.4771213	list .
-0.4771213	list [
-0.4771213	mat )
-0.1760913	mat [
0	method go.
-0.6532125	n )
-0.9542425	n *
-0.4771213	n -
-0.4771213	n ==
0	new Rectangle
0	null )
-0.1760913	numRows )
-0.4771213	numRows =
0	ohsocreative (
0	out .
-0.60206	pos )
-0.60206	pos ++
-0.60206	pos <
-0.60206	pos =
0	println (
-0.09691001	private int
-0.69897	private static
-0.9852768	public VanillaBoilerplate
-1.462398	public boolean
-0.5081555	public class
-1.462398	public double
-0.9852768	public int
-0.763428	public static
-1.462398	public string
-0.6842467	public void
-0.4771213	r1 "
-0.4771213	r1 +
-0.7781513	r1 .
-0.7781513	r1 =
0	reallyCreative (
-0.60206	result ;
-0.1249387	result =
-0.9542425	return "a
-0.9542425	return (
-0.6532125	return result
-0.9542425	return square
-0.3521825	return this
-0.69897	row ++
-0.69897	row <
-0.69897	row =
-0.39794	row ]
-0.30103	s1 +
-0.30103	s1 =
-0.4771213	s2 +
-0.4771213	s2 .
-0.4771213	s2 =
0	s3 =
-0.30103	s4 ;
-0.30103	s4 =
0	s5 =
0	setA (
0	setB (
0	setC (
0	setSize (
-0.30103	size &&
-0.30103	size ;
0	slowfib (
-0.60206	square &&
-0.60206	square ;
-0.30103	square =
-0.7781513	static boolean
-0.7781513	static final
-0.4771213	static int
-0.4771213	static void
0	string toString
0	substring (
0	this .
0	time (
0	toString (
0	true ;
-0.60206	v )
-0.1249387	v .
-0.30103	value )
-0.30103	value >
-0.90309	void add
-0.90309	void creativeMethod
-0.90309	void ohsocreative
-0.90309	void reallyCreative
-0.60206	void setA
-0.90309	void setB
-0.90309	void setC
0	while (
-0.4771213	x )
-1.079181	x ,
-0.30103	x ;
-1.079181	x =
-0.30103	y ,
-0.30103	y ;
0	z )
0	{ </s>
0	|| n
-0.1249387	} </s>
-1.50515	} import
-0.6600519	} public

\end\
