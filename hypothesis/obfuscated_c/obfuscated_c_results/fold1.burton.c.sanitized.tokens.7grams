
\data\
ngram 1=937
ngram 2=4907
ngram 3=2074
ngram 4=1322
ngram 5=851
ngram 6=602
ngram 7=452

\1-grams:
-2.419396	!	-99
-2.93128	!=	-99
-2.769912	"	-99
-4.23231	"!:E%;!ea!!!WqE0z!f/y}!%!!Qi6!uzt!n}?]!bl!ak!SetR<"	-99
-4.23231	"!pv!;!Hm%Ro4"	-99
-3.53334	""	-99
-3.755189	"#"	-99
-4.23231	"%."	-99
-4.23231	"%c"	-99
-3.93128	"%d	-99
-4.23231	"%d,%dd%d\n"	-99
-4.23231	"%d\n"	-99
-4.23231	"%da%d,%d\n"	-99
-4.23231	"%da%d\n"	-99
-4.23231	"%dd%d\n"	-99
-4.23231	"%f,%f,"	-99
-3.53334	"%s"	-99
-4.23231	"('A)"	-99
-3.93128	"('A`)"	-99
-4.23231	"(A`)"	-99
-4.23231	"(O**"	-99
-4.23231	")"	-99
-4.23231	");"	-99
-4.23231	"*"	-99
-4.23231	"*_[512],**p=_,**d,b,q;for(b=0;b"	-99
-4.23231	"*p=#b,P[9999],*d=P,*e[]="	-99
-4.23231	"++<512;p=_+q)_[q"	-99
-4.23231	"-"	-99
-4.23231	"/"	-99
-4.23231	"/*;;	-99
-4.23231	"11\x80"	-99
-4.23231	"258EAFA5-"	-99
-4.23231	"8!@dP,!!o+fb"	-99
-4.23231	"::::::::::::?_::::\"::.::::@:::'::-::::::::;!:):::::,:::::"	-99
-3.755189	";"	-99
-4.23231	";;"	-99
-4.23231	";Gam"	-99
-4.23231	";GlockQ18"	-99
-4.23231	";Heca"	-99
-4.23231	";Time:Q"	-99
-4.23231	";^Q<d|8=o;]Q<dj8<Pk8<c]'?;QQdi8?P'Q)d8<9`8?c;Qdh8=P']Q<`c8>PQ9_8"	-99
-4.23231	"<	-99
-4.23231	"<;iQ=/*do<;dQ=ook8?boc;aQ=odr8>oc;_Q<ox8>oc"	-99
-4.23231	"<o_Q<o_QBdo`QQ';`Q=9`]8=bobQ_o_Q<o]8=';bQC(88cQ`bcgQ>oP']8<;cQ>98)^Q?''oc`Q>"	-99
-4.23231	"=(p-_+1)*9%512]=(O*)p;"	-99
-3.755189	">	-99
-4.23231	">b;og8=''`Q<`b8?'QQ9_8?c;dPe8dQa8<P]Q<``8=;'f8>QQ`]8?ocQQ_8=''_Q`8aQ"	-99
-4.23231	"?guhljL!^P%	-99
-4.23231	"@CADBEHI"	-99
-4.23231	"C:"	-99
-4.23231	"CYOUQWIN!]Q=;of8BQQ)88bc]QA98P'Qo]8>oQQ_8CP;QQ98b`_8@P8(Q`]'^Q=`']QB)88"	-99
-4.23231	"E914-47DA-95CA-C5AB0DC85B"	-99
-4.23231	"HTTP/1.1	-99
-3.63025	"Q"	-99
-4.23231	"Q(j"	-99
-4.23231	"Q(jam"	-99
-4.23231	"Zj$x!~V!n&g8!cK!	-99
-4.23231	"\",\"%s\",\"%s\"},	-99
-4.23231	"\40main(){O"	-99
-4.23231	"\n"	-99
-4.23231	"\n\n\n"	-99
-4.23231	"\xe2%c%c\r\n"	-99
-4.23231	"a"	-99
-4.23231	"bQQ]`8J;QQ`88bc99bd(`8iQ@''QQo^8E'`8c;QQ'Q``8?QQ`'kQ<o]8B9PQQ`';_Q<`_8<cbQ"	-99
-3.93128	"d"	-99
-4.23231	"e.6!r!%l6G!n~^<i=%pEwL%P!'<!FQt%u	-99
-4.23231	"e:|	-99
-4.23231	"eQII:"	-99
-4.23231	"eQover."	-99
-4.23231	"etu"	-99
-4.23231	"f\n"	-99
-4.23231	"fl!"	-99
-4.23231	"hello	-99
-4.23231	"laugh"	-99
-4.23231	"m"	-99
-4.23231	"me"	-99
-4.23231	"med);"	-99
-4.23231	"n:}nkD!Q!kN"	-99
-4.23231	"o("	-99
-4.23231	"oc']Q]8<;cQ>`8bbQA``QQ''`Q?88P;dQ=`)nQ?*/;;"	-99
-4.23231	"oid	-99
-3.63025	"r"	-99
-4.23231	"rn+0;}\n"	-99
-4.23231	"t"	-99
-4.23231	"throw	-99
-4.23231	"usage:	-99
-4.23231	"{;}"	-99
-4.23231	"{\"%s\",	-99
-4.23231	"|~0y'vWtA@:LcO9d}y.!uL!Gd+ml(<+Ds!J"	-99
-2.160428	%	-99
-3.755189	%=	-99
-4.23231	%d\n"	-99
-4.23231	%s	-99
-4.23231	%u/%u	-99
-2.164124	&	-99
-2.406235	&&	-99
-3.190917	'	-99
-4.23231	'(	-99
-3.53334	','	-99
-3.93128	'128'	-99
-4.23231	'2O	-99
-4.23231	'2d'	-99
-4.23231	'7M{N^kh	-99
-4.23231	'='	-99
-4.23231	'Q]	-99
-3.93128	'\n'	-99
-2.72716	'_'	-99
-4.23231	'_3a	-99
-4.23231	'a'	-99
-4.23231	'b5sc!e"	-99
-4.23231	'c'	-99
-4.23231	'd'	-99
-4.23231	'h(Q]0h#	-99
-4.23231	'lQ	-99
-4.23231	'nSM8	-99
-4.23231	'width:256px;height:256px'	-99
-4.23231	'ws'	-99
-4.23231	'|'	-99
-1.114707	(	-99
-1.101333	)	-99
-1.563924	*	-99
-2.579097	*=	-99
-4.23231	*m,!*m?H:"	-99
-1.841375	+	-99
-2.263827	++	-99
-4.23231	+99*!	-99
-2.215276	+=	-99
-1.174644	,	-99
-4.23231	,101	-99
-1.829189	-	-99
-2.755189	--	-99
-2.664108	-=	-99
-2.351496	->	-99
-2.186987	.	-99
-3.755189	...	-99
-4.23231	.0	-99
-3.755189	.05	-99
-3.755189	.1	-99
-4.23231	.27	-99
-3.755189	.5	-99
-2.28292	/	-99
-3.53334	/=	-99
-1.866822	0	-99
-3.755189	0.5	-99
-4.23231	0.7	-99
-4.23231	01	-99
-4.23231	02	-99
-4.23231	024	-99
-4.23231	03	-99
-4.23231	040	-99
-4.23231	061	-99
-4.23231	075	-99
-4.23231	0d:`184>b)^15)OM	-99
-3.93128	0u	-99
-4.23231	0x1	-99
-4.23231	0x3f0	-99
-4.23231	0x67452301	-99
-4.23231	0x820008202625a0	-99
-4.23231	0x98BADCFE	-99
-4.23231	0xEFCDAB89	-99
-4.23231	0xf	-99
-4.23231	0xfc0	-99
-4.23231	0xfe0	-99
-4.23231	0xff00ff00ff	-99
-4.23231	0xffff	-99
-1.969859	1	-99
-4.23231	1.159922023e9	-99
-3.93128	1.3	-99
-3.93128	1.5	-99
-4.23231	1.6937441874215991e190	-99
-3.153129	10	-99
-4.23231	1008	-99
-4.23231	101	-99
-3.755189	1023	-99
-4.23231	1024	-99
-4.23231	1024.	-99
-4.23231	105	-99
-3.755189	11	-99
-4.23231	1103515245	-99
-4.23231	112	-99
-4.23231	1152	-99
-3.23231	12	-99
-4.23231	12359778	-99
-4.23231	12365733	-99
-4.23231	124	-99
-4.23231	127	-99
-3.63025	128	-99
-4.23231	128L	-99
-3.93128	13	-99
-4.23231	13000	-99
-4.23231	138	-99
-3.454159	14	-99
-4.23231	14202379	-99
-3.93128	14695981039346656037ULL	-99
-3.387212	15	-99
-4.23231	1500	-99
-4.23231	158	-99
-2.93128	16	-99
-4.23231	1600	-99
-3.755189	16711935	-99
-4.23231	16774143	-99
-3.93128	16u	-99
-3.755189	17	-99
-4.23231	176	-99
-3.53334	18	-99
-4.23231	19	-99
-4.23231	1912	-99
-4.23231	19205553	-99
-4.23231	193	-99
-4.23231	1933008	-99
-4.23231	194	-99
-4.23231	1954	-99
-4.23231	196	-99
-4.23231	197	-99
-4.23231	198	-99
-3.93128	1LL	-99
-4.23231	1l	-99
-3.93128	1u	-99
-2.149524	2	-99
-3.93128	2.	-99
-4.23231	2.271681097355226e15	-99
-3.32922	20	-99
-4.23231	204	-99
-4.23231	205	-99
-3.93128	21	-99
-3.93128	22	-99
-3.93128	23	-99
-4.23231	234	-99
-3.32922	24	-99
-4.23231	25	-99
-4.23231	250	-99
-3.387212	255	-99
-3.63025	256	-99
-4.23231	256L	-99
-4.23231	257	-99
-4.23231	258063	-99
-3.93128	26	-99
-4.23231	27	-99
-4.23231	275	-99
-4.23231	276	-99
-4.23231	28	-99
-4.23231	287	-99
-4.23231	2L	-99
-4.23231	2l	-99
-2.334683	3	-99
-4.23231	3'	-99
-4.23231	3.135045272e9	-99
-4.23231	3.9999e5	-99
-3.387212	30	-99
-4.23231	304	-99
-4.23231	308438	-99
-3.63025	31	-99
-2.817337	32	-99
-3.93128	32768	-99
-4.23231	3285377520	-99
-3.93128	33	-99
-3.93128	333	-99
-4.23231	3352537	-99
-3.755189	34	-99
-3.93128	35	-99
-4.23231	36	-99
-3.93128	37	-99
-3.93128	38	-99
-4.23231	384	-99
-4.23231	39	-99
-4.23231	3920	-99
-2.351496	4	-99
-4.23231	4.023233417e9	-99
-4.23231	4.294967296e9	-99
-4.23231	4.5	-99
-4.23231	4.503599627370496e15	-99
-4.23231	4.522871578970112e217	-99
-4.23231	4.6727004911171048e-153	-99
-3.454159	40	-99
-4.23231	4092	-99
-3.93128	41	-99
-4.23231	41088	-99
-3.93128	4190208	-99
-4.23231	4194304	-99
-3.53334	42	-99
-4.23231	44	-99
-3.93128	45	-99
-4.23231	48	-99
-4.23231	480	-99
-4.23231	488848	-99
-4.23231	4L	-99
-3.93128	4u	-99
-2.676007	5	-99
-4.23231	50	-99
-4.23231	5000	-99
-4.23231	504	-99
-4.23231	508	-99
-4.23231	51	-99
-3.63025	512	-99
-4.23231	512L	-99
-4.23231	516	-99
-3.93128	5200	-99
-4.23231	5298487	-99
-4.23231	55	-99
-3.755189	56	-99
-4.23231	57	-99
-4.23231	58	-99
-3.93128	59	-99
-4.23231	5toG57j/3"	-99
-2.63025	6	-99
-3.32922	60	-99
-4.23231	60.	-99
-4.23231	61	-99
-3.93128	62	-99
-3.63025	63	-99
-4.23231	63504	-99
-3.153129	64	-99
-4.23231	64u	-99
-4.23231	65280	-99
-4.23231	65307	-99
-3.93128	65536	-99
-4.23231	65544	-99
-4.23231	667	-99
-4.23231	67	-99
-4.23231	69	-99
-4.23231	6990400	-99
-2.713796	7	-99
-4.23231	7.5	-99
-4.23231	7.90055321525613e115	-99
-4.23231	70	-99
-3.93128	74	-99
-4.23231	75	-99
-4.23231	76	-99
-3.63025	768	-99
-3.93128	77	-99
-3.63025	79	-99
-2.499916	8	-99
-4.23231	8.44396048e8	-99
-3.086182	80	-99
-4.23231	8000	-99
-3.755189	81	-99
-4.23231	82	-99
-4.23231	84	-99
-3.755189	85	-99
-3.93128	86400	-99
-4.23231	88	-99
-4.23231	881	-99
-4.23231	89	-99
-4.23231	8u	-99
-2.83437	9	-99
-3.93128	90	-99
-4.23231	91	-99
-3.63025	92	-99
-4.23231	93	-99
-4.23231	96	-99
-3.755189	97	-99
-4.23231	98	-99
-4.23231	9858122	-99
-3.93128	99	-99
-4.23231	9999	-99
-4.23231	99999	-99
-2.215276	:	-99
-4.23231	:23h)QN<'	-99
-1.249135	;	-99
-4.23231	;b'	-99
-2.156763	<	-99
-1.227559	</s>
-2.579097	<<	-99
-3.387212	<=	-99
-4.23231	<P~6"	-99
-99	<s>	-99
-99	<unk>
-1.413424	=	-99
-2.641245	==	-99
-2.351496	>	-99
-3.454159	>=	-99
-2.609061	>>	-99
-3.93128	>>=	-99
-2.297812	?	-99
-4.23231	?"	-99
-2.769912	A	-99
-4.23231	Acce	-99
-4.23231	Alan	-99
-2.652526	B	-99
-4.23231	BUFSIZ	-99
-2.664108	C	-99
-3.93128	COLS	-99
-3.02819	D	-99
-4.23231	DefaultGC	-99
-4.23231	DefaultVisual	-99
-4.23231	Display	-99
-2.800946	E	-99
-4.23231	E0	-99
-3.93128	E3	-99
-3.190917	EOF	-99
-4.23231	ETIANMSURWDKGOHVF:L:PJBXCYZQ::54:3:::2&:+::::16=/:::(:7:::8:90"	-99
-4.23231	EX	-99
-2.652526	F	-99
-3.93128	F0	-99
-3.93128	F1	-99
-4.23231	F2	-99
-3.53334	FILE	-99
-4.23231	FILENAME_MAX	-99
-4.23231	FV	-99
-3.93128	F_	-99
-2.817337	G	-99
-2.499916	H	-99
-4.23231	HP	-99
-4.23231	HY	-99
-4.23231	H_1	-99
-2.551069	I	-99
-2.93128	J	-99
-2.53334	K	-99
-4.23231	KrgR'8@c]!%-q9V.3fa[E8X%dY'w!#H	-99
-2.254586	L	-99
-3.755189	LINES	-99
-4.23231	LP	-99
-4.23231	L_tmpnam	-99
-2.800946	M	-99
-4.23231	M8q;k'	-99
-4.23231	MJ	-99
-4.23231	MK6lM	-99
-4.23231	McPc	-99
-4.23231	MkQN	-99
-2.609061	N	-99
-4.23231	N4	-99
-4.23231	N8b	-99
-4.23231	N9	-99
-4.23231	N9b	-99
-3.755189	NULL	-99
-4.23231	NUO	-99
-4.23231	N_1'	-99
-4.23231	N_7vN	-99
-2.313232	O	-99
-3.118366	O0	-99
-3.387212	O1	-99
-3.387212	O2	-99
-3.454159	O3	-99
-4.23231	O3NF	-99
-3.53334	O4	-99
-3.454159	O5	-99
-3.63025	O6	-99
-3.63025	O7	-99
-3.755189	O8	-99
-3.755189	O9	-99
-4.23231	OMQ	-99
-4.23231	OMaMch	-99
-4.23231	OMp	-99
-4.23231	ON8r	-99
-3.153129	OO	-99
-4.23231	O^ln	-99
-3.278067	O_	-99
-3.63025	O_o	-99
-4.23231	OaaD	-99
-4.23231	Ok	-99
-4.23231	On	-99
-4.23231	OsR	-99
-2.817337	P	-99
-2.273268	Q	-99
-3.153129	Q0	-99
-3.454159	Q1	-99
-3.387212	Q2	-99
-3.454159	Q3	-99
-3.63025	Q4	-99
-3.63025	Q5	-99
-3.63025	Q6	-99
-3.63025	Q7	-99
-3.755189	Q8	-99
-3.93128	Q9	-99
-4.23231	QH	-99
-4.23231	QL	-99
-3.153129	QO	-99
-3.278067	QQ	-99
-3.93128	QR	-99
-3.93128	QS	-99
-3.454159	Q_	-99
-4.23231	Qr	-99
-2.345819	R	-99
-4.23231	R8	-99
-4.23231	RAFT	-99
-4.23231	RGB	-99
-4.23231	RI4	-99
-4.23231	RM	-99
-4.23231	RMPmSk	-99
-4.23231	RP	-99
-4.23231	RlMG	-99
-4.23231	RmM	-99
-4.23231	RmPQ	-99
-4.23231	RootWindow	-99
-3.32922	S	-99
-4.23231	SDL_AudioSpec	-99
-4.23231	SDL_BlitSurface	-99
-4.23231	SDL_CreateRGBSurface	-99
-4.23231	SDL_Delay	-99
-4.23231	SDL_Event	-99
-4.23231	SDL_FillRect	-99
-4.23231	SDL_Flip	-99
-4.23231	SDL_Init	-99
-4.23231	SDL_LoadWAV	-99
-4.23231	SDL_MixAudio	-99
-4.23231	SDL_OpenAudio	-99
-4.23231	SDL_PauseAudio	-99
-4.23231	SDL_PollEvent	-99
-4.23231	SDL_Rect	-99
-4.23231	SDL_SetVideoMode	-99
-4.23231	SDL_Surface	-99
-3.93128	SEEK_SET	-99
-4.23231	SNH	-99
-4.23231	SOPm	-99
-4.23231	SPEED	-99
-4.23231	Sec	-99
-4.23231	SlM90	-99
-4.23231	So	-99
-2.769912	T	-99
-4.23231	TIMESTEP	-99
-4.23231	TIOCGWINSZ	-99
-4.23231	TMP_MAX	-99
-4.23231	TmS	-99
-4.23231	TmSt	-99
-4.23231	Turing	-99
-4.23231	Type	-99
-2.91009	U	-99
-4.23231	UV_DROP	-99
-4.23231	Uint8Array	-99
-4.23231	Upgrade	-99
-3.056219	V	-99
-2.598841	W	-99
-3.93128	WebSocket	-99
-4.23231	Window	-99
-2.508034	X	-99
-4.23231	XCheckWindowEvent	-99
-4.23231	XCreateImage	-99
-4.23231	XCreateSimpleWindow	-99
-4.23231	XEvent	-99
-4.23231	XImage	-99
-4.23231	XLookupKeysym	-99
-4.23231	XMapWindow	-99
-4.23231	XOpenDisplay	-99
-4.23231	XPutImage	-99
-4.23231	XSelectInput	-99
-2.664108	Y	-99
-3.001861	Z	-99
-1.800946	[	-99
-4.23231	[-d]	-99
-4.23231	\""	-99
-1.765442	]	-99
-2.688242	^	-99
-3.63025	^=	-99
-1.51798	_	-99
-4.23231	_){putchar(_);}O"	-99
-3.278067	_0	-99
-4.23231	_8	-99
-4.23231	_KK3	-99
-3.23231	_O	-99
-3.23231	_Q	-99
-4.23231	_Zadat57	-99
-2.374977	__	-99
-4.23231	__LINE__	-99
-3.93128	__STDC_VERSION__	-99
-3.93128	__STDC__	-99
-4.23231	__TIME__	-99
-4.23231	__VA_ARGS__	-99
-3.755189	___	-99
-2.93128	____	-99
-3.93128	_a	-99
-3.93128	_f	-99
-4.23231	_h	-99
-4.23231	_o	-99
-4.23231	_t	-99
-4.23231	_z	-99
-2.297812	a	-99
-3.93128	a_	-99
-3.93128	abs	-99
-4.23231	ageX	-99
-3.387212	ala	-99
-2.700831	and	-99
-3.93128	ar	-99
-3.53334	arg	-99
-3.63025	argh	-99
-3.118366	asn	-99
-3.755189	asp	-99
-3.63025	asx	-99
-3.93128	au	-99
-4.23231	ay	-99
-2.128506	b	-99
-4.23231	b1g	-99
-4.23231	b4	-99
-4.23231	b5g	-99
-3.53334	bA	-99
-3.63025	bB	-99
-3.63025	bC	-99
-3.755189	bD	-99
-3.53334	bE	-99
-4.23231	b\nq(%s)\n"	-99
-3.755189	ba	-99
-3.454159	bb	-99
-3.53334	bc	-99
-3.755189	bd	-99
-3.32922	be	-99
-3.153129	bf	-99
-3.63025	bg	-99
-3.63025	bh	-99
-4.23231	bh'	-99
-3.93128	bi	-99
-4.23231	binary	-99
-3.755189	bj	-99
-3.63025	bk	-99
-3.755189	bl	-99
-3.93128	bm	-99
-3.93128	bn	-99
-3.93128	bo	-99
-3.32922	bp	-99
-3.93128	bq	-99
-3.93128	br	-99
-3.190917	break	-99
-3.755189	bs	-99
-3.454159	bt	-99
-3.454159	bu	-99
-3.63025	buf	-99
-3.93128	bv	-99
-4.23231	bw	-99
-3.93128	bx	-99
-3.454159	by	-99
-3.53334	bz	-99
-2.508034	c	-99
-3.93128	c8	-99
-4.23231	c9	-99
-4.23231	cN	-99
-4.23231	c_X	-99
-4.23231	c_kah%0d9`b'	-99
-3.755189	calloc	-99
-4.23231	case	-99
-4.23231	cb	-99
-4.23231	ch	-99
-2.800946	char	-99
-4.23231	ckQaOrON	-99
-4.23231	close	-99
-2.889887	const	-99
-4.23231	continue	-99
-3.755189	cos	-99
-4.23231	cq	-99
-4.23231	crea	-99
-4.23231	curs_set	-99
-3.454159	cys	-99
-2.175405	d	-99
-4.23231	d2	-99
-4.23231	d77sNOsd	-99
-3.63025	d8	-99
-4.23231	d8ak	-99
-4.23231	dA	-99
-4.23231	dB	-99
-4.23231	dC	-99
-4.23231	d_C	-99
-4.23231	dat	-99
-4.23231	data	-99
-4.23231	default	-99
-4.23231	defined	-99
-3.53334	do	-99
-4.23231	double	-99
-3.93128	dstr	-99
-4.23231	dup	-99
-3.93128	dup2	-99
-2.297812	e	-99
-4.23231	eep	-99
-2.769912	efine	-99
-2.977037	else	-99
-4.23231	elta_u	-99
-4.23231	elta_v	-99
-4.23231	epne	-99
-4.23231	er	-99
-3.53334	err	-99
-4.23231	errx	-99
-3.53334	exit	-99
-3.755189	exp	-99
-3.755189	extern	-99
-2.44698	f	-99
-4.23231	f3	-99
-4.23231	fabs	-99
-4.23231	fclose	-99
-4.23231	fgetc	-99
-4.23231	fgets	-99
-4.23231	file1	-99
-4.23231	file2"	-99
-4.23231	flash	-99
-3.387212	float	-99
-4.23231	float_	-99
-4.23231	flu	-99
-3.755189	fopen	-99
-2.363078	for	-99
-4.23231	fputc	-99
-3.755189	fread	-99
-3.454159	free	-99
-4.23231	fscanf	-99
-3.93128	fseek	-99
-4.23231	function	-99
-3.63025	fw	-99
-2.179231	g	-99
-4.23231	getC	-99
-4.23231	getch	-99
-3.755189	getchar	-99
-4.23231	getopt	-99
-3.02819	gln	-99
-3.23231	glu	-99
-3.93128	glx	-99
-3.454159	gly	-99
-4.23231	go	-99
-4.23231	goofy	-99
-2.399801	h	-99
-4.23231	halting	-99
-4.23231	height	-99
-3.387212	his	-99
-4.23231	ho	-99
-4.23231	href	-99
-1.986797	i	-99
-2.381052	if	-99
-3.53334	ile	-99
-4.23231	in	-99
-4.23231	initscr	-99
-2.468882	int	-99
-4.23231	int_	-99
-4.23231	intw	-99
-4.23231	ioctl	-99
-4.23231	ipt	-99
-2.340215	j	-99
-4.23231	jQ	-99
-4.23231	j_la	-99
-4.23231	j_laaaN	-99
-2.363078	k	-99
-4.23231	k8b	-99
-4.23231	k9	-99
-4.23231	kP8	-99
-4.23231	k_	-99
-4.23231	kccMcOP	-99
-4.23231	kckQ	-99
-4.23231	kd	-99
-4.23231	ket	-99
-3.93128	key	-99
-4.23231	keysym	-99
-4.23231	kf	-99
-4.23231	kg	-99
-2.318496	l	-99
-3.93128	lM	-99
-4.23231	lNRmO_loa8	-99
-4.23231	lQ	-99
-4.23231	lQoOa	-99
-4.23231	l_	-99
-4.23231	le	-99
-4.23231	lea	-99
-3.63025	leu	-99
-4.23231	lf	-99
-4.23231	location	-99
-2.953556	long	-99
-4.23231	lpeoqempepneu	-99
-4.23231	lrand48	-99
-3.93128	lu	-99
-4.23231	luN	-99
-4.23231	luelue	-99
-3.755189	lv	-99
-4.23231	lwg	-99
-3.278067	lys	-99
-2.476435	m	-99
-3.93128	mR	-99
-4.23231	mR8	-99
-4.23231	mRMmO	-99
-4.23231	mRh	-99
-3.93128	mS	-99
-4.23231	mageData	-99
-2.977037	main	-99
-3.93128	malloc	-99
-4.23231	memset	-99
-3.278067	met	-99
-4.23231	mkM	-99
-4.23231	mq9l8b	-99
-4.23231	mva	-99
-4.23231	mvaddstr	-99
-3.93128	mvinch	-99
-4.23231	mvinsch	-99
-2.175405	n	-99
-4.23231	nR	-99
-4.23231	nRmUd	-99
-3.93128	ndif	-99
-3.93128	new	-99
-4.23231	nk	-99
-2.236675	not	-99
-4.23231	np	-99
-2.092431	o	-99
-4.23231	o(O	-99
-4.23231	oM	-99
-4.23231	oNS	-99
-4.23231	ocket	-99
-4.23231	oec	-99
-3.93128	of	-99
-4.23231	offsetLeft	-99
-4.23231	offsetTop	-99
-4.23231	og	-99
-4.23231	on	-99
-4.23231	onmousemove	-99
-4.23231	ontext	-99
-3.278067	op	-99
-4.23231	open	-99
-3.454159	optind	-99
-2.287827	p	-99
-4.23231	pOpM866OsRlm	-99
-4.23231	pQaM8m	-99
-4.23231	pRM7O	-99
-4.23231	pageY	-99
-4.23231	peoqemtemw	-99
-3.63025	phe	-99
-4.23231	pixels	-99
-3.755189	pow	-99
-4.23231	pread	-99
-4.23231	prin	-99
-3.153129	printf	-99
-3.53334	pro	-99
-4.23231	pt	-99
-4.23231	ptj9	-99
-4.23231	pu	-99
-4.23231	putImageData	-99
-3.387212	putchar	-99
-3.387212	puts	-99
-4.23231	px	-99
-3.93128	pyl	-99
-2.588857	q	-99
-4.23231	qN	-99
-4.23231	qQ	-99
-2.588857	r	-99
-3.755189	rQ	-99
-4.23231	rR	-99
-3.93128	rand	-99
-4.23231	re	-99
-4.23231	rea	-99
-4.23231	read	-99
-3.93128	realloc	-99
-4.23231	refresh	-99
-2.852099	return	-99
-3.93128	rewind	-99
-4.23231	round	-99
-4.23231	rror	-99
-2.42613	s	-99
-4.23231	sM	-99
-3.93128	sN	-99
-4.23231	sTaa	-99
-4.23231	s_4	-99
-4.23231	scanf	-99
-4.23231	scr	-99
-4.23231	script	-99
-3.278067	sec	-99
-4.23231	send	-99
-3.190917	ser	-99
-4.23231	set	-99
-4.23231	shi	-99
-4.23231	short	-99
-3.93128	si	-99
-4.23231	signal	-99
-3.93128	sin	-99
-4.23231	size_t	-99
-3.118366	sizeof	-99
-4.23231	slice	-99
-4.23231	slltwzh	-99
-4.23231	sprintf	-99
-4.23231	sqrt	-99
-3.454159	static	-99
-3.93128	stdin	-99
-4.23231	stdout	-99
-4.23231	strcmp	-99
-3.93128	strlen	-99
-4.23231	strrchr	-99
-4.23231	strtol	-99
-3.454159	struct	-99
-4.23231	style	-99
-4.23231	subs	-99
-4.23231	switch	-99
-4.23231	sym	-99
-3.53334	sym_	-99
-2.491947	t	-99
-4.23231	tQ	-99
-4.23231	tYv	-99
-4.23231	tape	-99
-4.23231	tch	-99
-4.23231	teI	-99
-4.23231	tf	-99
-4.23231	tgANs	-99
-3.32922	thr	-99
-4.23231	timeout	-99
-3.63025	tla	-99
-4.23231	tmpfile	-99
-4.23231	to	-99
-4.23231	tr	-99
-3.23231	trp	-99
-4.23231	turnY_	-99
-4.23231	typ	-99
-3.93128	type	-99
-3.118366	typedef	-99
-3.23231	tyr	-99
-2.292791	u	-99
-4.23231	uU	-99
-4.23231	ub	-99
-3.93128	union	-99
-3.153129	unk	-99
-3.278067	unsigned	-99
-4.23231	up"	-99
-4.23231	upgrade	-99
-4.23231	usl	-99
-4.23231	usleep	-99
-4.23231	utchar	-99
-2.53334	v	-99
-4.23231	vOwwRor	-99
-4.23231	vQ	-99
-4.23231	va_arg	-99
-4.23231	va_end	-99
-4.23231	va_list	-99
-4.23231	va_start	-99
-4.23231	vad	-99
-2.785152	val	-99
-2.953556	void	-99
-4.23231	voidw	-99
-4.23231	volatile	-99
-4.23231	vpr	-99
-2.393461	w	-99
-4.23231	webso	-99
-2.889887	while	-99
-4.23231	width	-99
-4.23231	window	-99
-4.23231	wnS	-99
-4.23231	world!"	-99
-3.755189	write	-99
-2.334683	x	-99
-4.23231	xa6	-99
-4.23231	xkey	-99
-3.93128	xle	-99
-2.579097	xor	-99
-4.23231	xv	-99
-2.302891	y	-99
-4.23231	yN	-99
-2.491947	z	-99
-3.93128	ze	-99
-1.887918	{	-99
-2.652526	|	-99
-4.23231	|=	-99
-2.93128	||	-99
-1.89585	}	-99
-3.118366	~	-99

\2-grams:
-0.7715207	! !	-0.4837519
-0.6368221	! (	-0.05647949
-1.812913	! )
-1.511883	! *
-1.812913	! --
-1.335792	! </s>
-1.812913	! H
-1.034762	! O	-0.7164057
-1.511883	! O9	0
-1.812913	! P
-1.812913	! Q
-1.812913	! Q0
-1.812913	! Q2
-1.335792	! QO	-0.3521825
-1.812913	! _0
-1.511883	! b
-1.812913	! k
-1.812913	! l
-1.511883	! n
-1.812913	! o
-1.812913	! printf
-1.812913	! strcmp
-1.511883	! t
-1.812913	! u
-1.335792	! v	-0.5658479
-1.30103	!= '
-1.30103	!= -
-1.30103	!= 0
-1.30103	!= 98
-1.30103	!= B
-1	!= EOF	-0.2138799
-1.30103	!= NULL
-1.30103	!= __
-1	!= b	-0.4302224
-1.30103	!= bk
-1	!= gln	-0.3143939
-1	!= h	-0.4641563
-1.30103	!= mvinch
-1.30103	!= sizeof
-1.30103	!= trp
-1.30103	!= u
-0.559308	" "
-1.462398	" "%d
-1.462398	" %d\n"
-1.462398	" %u/%u
-0.860338	" )	-0.5900091
-0.860338	" ,	-0.2979769
-1.462398	" ,101
-1.462398	" </s>
-1.462398	" ETIANMSURWDKGOHVF:L:PJBXCYZQ::54:3:::2&:+::::16=/:::(:7:::8:90"
-1.462398	" Type
-1.462398	" c
-1.462398	" ipt
-1.462398	" ket
-1.462398	" mageData
-1.462398	" ontext
-1.462398	" teI
0	"!:E%;!ea!!!WqE0z!f/y}!%!!Qi6!uzt!n}?]!bl!ak!SetR<" </s>
0	"!pv!;!Hm%Ro4" "n:}nkD!Q!kN"
-0.69897	"" "@CADBEHI"
-0.69897	"" :
-0.2218488	"" </s>
0	"#" )	-0.5531503
0	"%." "f\n"
0	"%c" ,
0	"%d "
0	"%d,%dd%d\n" ,
0	"%d\n" ,
0	"%da%d,%d\n" ,
0	"%da%d\n" ,
0	"%dd%d\n" ,
0	"%f,%f," ,
-0.69897	"%s" "\",\"%s\",\"%s\"},
-0.09691001	"%s" ,	-0.2979769
0	"('A)" ,
-0.30103	"('A`)" </s>
-0.30103	"('A`)" }
0	"(A`)" ,
0	"(O**" </s>
0	")" )
0	");" )
0	"*" ""
0	"*_[512],**p=_,**d,b,q;for(b=0;b" "++<512;p=_+q)_[q"
0	"*p=#b,P[9999],*d=P,*e[]=" "{\"%s\",
0	"++<512;p=_+q)_[q" </s>
0	"-" ,
0	"/" )
0	"/*;; "
0	"11\x80" [
0	"258EAFA5-" "E914-47DA-95CA-C5AB0DC85B"
0	"8!@dP,!!o+fb" </s>
0	"::::::::::::?_::::\"::.::::@:::'::-::::::::;!:):::::,:::::" ;
-0.4771213	";" )
-0.4771213	";" :
-0.4771213	";" </s>
0	";;" )
0	";Gam" "eQover."
0	";GlockQ18" "C:"
0	";Heca" "t"
0	";Time:Q" )
0	";^Q<d|8=o;]Q<dj8<Pk8<c]'?;QQdi8?P'Q)d8<9`8?c;Qdh8=P']Q<`c8>PQ9_8" </s>
0	"< "
0	"<;iQ=/*do<;dQ=ook8?boc;aQ=odr8>oc;_Q<ox8>oc" </s>
0	"<o_Q<o_QBdo`QQ';`Q=9`]8=bobQ_o_Q<o]8=';bQC(88cQ`bcgQ>oP']8<;cQ>98)^Q?''oc`Q>" </s>
0	"=(p-_+1)*9%512]=(O*)p;" )
0	"> "	-0.4126633
0	">b;og8=''`Q<`b8?'QQ9_8?c;dPe8dQa8<P]Q<``8=;'f8>QQ`]8?ocQQ_8=''_Q`8aQ" </s>
0	"?guhljL!^P% ?"
0	"@CADBEHI" )
0	"C:" "Q"
0	"CYOUQWIN!]Q=;of8BQQ)88bc]QA98P'Qo]8>oQQ_8CP;QQ98b`_8@P8(Q`]'^Q=`']QB)88" </s>
0	"E914-47DA-95CA-C5AB0DC85B" "11\x80"
0	"HTTP/1.1 "
0	"Q" )	-0.4930991
0	"Q(j" "a"
0	"Q(jam" </s>
0	"Zj$x!~V!n&g8!cK! KrgR'8@c]!%-q9V.3fa[E8X%dY'w!#H
0	"\",\"%s\",\"%s\"}, b\nq(%s)\n"
0	"\40main(){O" ""
0	"\n" )
0	"\n\n\n" </s>
0	"\xe2%c%c\r\n" O_
0	"a" "m"
0	"bQQ]`8J;QQ`88bc99bd(`8iQ@''QQo^8E'`8c;QQ'Q``8?QQ`'kQ<o]8B9PQQ`';_Q<`_8<cbQ" </s>
-0.30103	"d" ")"
-0.30103	"d" )
0	"e.6!r!%l6G!n~^<i=%pEwL%P!'<!FQt%u 5toG57j/3"
0	"e:| 'b5sc!e"
0	"eQII:" "Q"
0	"eQover." </s>
0	"etu" "rn+0;}\n"
0	"f\n" ,
0	"fl!" [
0	"hello world!"
0	"laugh" )
0	"m" "me"
0	"me" "d"
0	"med);" )
0	"n:}nkD!Q!kN" </s>
0	"o(" )
0	"oc']Q]8<;cQ>`8bbQA``QQ''`Q?88P;dQ=`)nQ?*/;;" ;
0	"oid o(O
-0.1249387	"r" )	-0.4282115
-0.60206	"r" </s>
0	"rn+0;}\n" )
0	"t" "eQII:"
0	"throw up"
0	"usage: %s
0	"{;}" :
0	"{\"%s\", \""
0	"|~0y'vWtA@:LcO9d}y.!uL!Gd+ml(<+Ds!J" </s>
-1.770852	% %
-2.071882	% &
-1.594761	% (	-0.4697715
-2.071882	% -
-2.071882	% .27
-2.071882	% /
-2.071882	% 03
-2.071882	% 1500
-1.770852	% 16
-2.071882	% 176
-2.071882	% 198
-0.9927008	% 2	-0.6910011
-1.226784	% 3	-0.6550411
-2.071882	% 32
-2.071882	% 384
-1.293731	% 4	-0.01955354
-1.594761	% 5
-2.071882	% 512
-2.071882	% 6
-1.469822	% 64
-2.071882	% 7
-2.071882	% 768
-1.594761	% 8
-2.071882	% 86400
-2.071882	% 93
-2.071882	% :
-1.372912	% </s>
-1.770852	% >
-2.071882	% I
-1.770852	% M
-2.071882	% N
-2.071882	% N4
-2.071882	% N8b
-2.071882	% N9b
-1.770852	% O
-2.071882	% O3
-2.071882	% O4
-1.226784	% Q	-0.7611179
-1.770852	% QQ
-2.071882	% Qr
-2.071882	% R
-2.071882	% ]
-2.071882	% ^
-1.770852	% _	-0.3891319
-1.770852	% __	0.1249388
-2.071882	% _h
-2.071882	% c9
-2.071882	% d8
-2.071882	% dA
-2.071882	% dB
-2.071882	% dC
-1.372912	% g
-2.071882	% lNRmO_loa8
-2.071882	% mR
-2.071882	% mRMmO
-2.071882	% mRh
-2.071882	% mS
-2.071882	% n
-2.071882	% q
-2.071882	% rQ
-2.071882	% s
-2.071882	% strlen
-2.071882	% w
-1.770852	% {
-0.4771213	%= 1
-0.4771213	%= 64
-0.4771213	%= 8
0	%d\n" ,
0	%s [-d]
0	%u/%u "
-2.068186	& !
-2.068186	& %
-1.767156	& (
-1.466126	& *	-0.5945396
-2.068186	& --
-2.068186	& 0
-2.068186	& 0x3f0
-2.068186	& 0xf
-2.068186	& 0xfe0
-2.068186	& 0xff00ff00ff
-1.290035	& 1	-0.2029318
-2.068186	& 1008
-1.591065	& 1023	0
-2.068186	& 12
-2.068186	& 128
-2.068186	& 14
-1.369216	& 15	-0.154902
-1.767156	& 16
-1.767156	& 16711935
-2.068186	& 16774143
-1.290035	& 3	-0.6048
-2.068186	& 31
-2.068186	& 32
-2.068186	& 4
-2.068186	& 4092
-1.767156	& 4190208	0
-2.068186	& 6
-1.466126	& 63	0
-2.068186	& 64
-2.068186	& 65280
-2.068186	& 7
-2.068186	& 8
-2.068186	& 9
-2.068186	& ;
-2.068186	& <
-1.466126	& </s>
-2.068186	& B
-2.068186	& C
-2.068186	& L
-1.767156	& M
-1.767156	& N
-2.068186	& O
-1.767156	& OO
-1.767156	& Q
-2.068186	& S
-2.068186	& T
-2.068186	& TmS
-2.068186	& ^
-1.591065	& _	-0.4754412
-1.767156	& arg	0.2218488
-2.068186	& asn
-2.068186	& bE
-2.068186	& bn
-2.068186	& bo
-2.068186	& bv
-1.767156	& c
-2.068186	& d
-2.068186	& e
-1.767156	& glu	-0.1760913
-2.068186	& h
-2.068186	& i
-2.068186	& k
-2.068186	& kccMcOP
-2.068186	& kckQ
-1.591065	& not	-0.5749078
-2.068186	& o
-2.068186	& p
-2.068186	& pRM7O
-2.068186	& r
-1.767156	& tyr	-0.3222193
-2.068186	& u
-2.068186	& v
-2.068186	& w
-1.767156	& x
-2.068186	& y
-0.9229848	&& !	-0.3612434
-0.4836521	&& (	-0.2105573
-1.826075	&& *
-1.826075	&& 0
-1.826075	&& 101
-1.826075	&& 258063
-1.826075	&& 34
-1.826075	&& </s>
-1.826075	&& A
-1.826075	&& B
-1.826075	&& F
-1.826075	&& R
-1.826075	&& Z
-1.826075	&& _
-1.826075	&& _0
-1.348954	&& a	-0.4457128
-1.826075	&& b
-1.826075	&& bf
-1.826075	&& bg
-1.826075	&& d
-1.826075	&& fscanf
-1.826075	&& g
-1.826075	&& h
-1.826075	&& j
-1.826075	&& n
-1.525045	&& o	-0.394147
-1.826075	&& q
-1.826075	&& read
-1.224015	&& s	-0.2872417
-1.826075	&& v
-1.826075	&& x
-1.525045	&& y	-0.4561874
-0.4393327	' '	-0.2138798
-1.041393	' )
-0.7403627	' </s>
-1.041393	' M8q;k'
-1.041393	' Q
-1.041393	' nR
-1.041393	' ||
0	'( 0d:`184>b)^15)OM
-0.69897	',' )
-0.09691001	',' ,	-0.6974462
-0.30103	'128' height
-0.30103	'128' style
0	'2O 3'
0	'2d' )
0	'7M{N^kh '
0	'=' )
0	'Q] bh'
0	'\n' )
-0.7269987	'_' )	-0.2741988
-0.09017663	'_' ,	-1.40536
0	'_3a N_1'
0	'a' ,
0	'b5sc!e" </s>
0	'c' width
0	'd' :
0	'h(Q]0h# c_kah%0d9`b'
0	'lQ O^ln
0	'nSM8 '
0	'width:256px;height:256px' </s>
0	'ws' +
0	'|' :
-1.971475	( !	-0.1602145
-3.117603	( "
-3.117603	( ""
-2.640481	( "#"	0
-3.117603	( "%."
-3.117603	( "%c"
-3.117603	( "%d,%dd%d\n"
-3.117603	( "%d\n"
-3.117603	( "%da%d,%d\n"
-3.117603	( "%da%d\n"
-3.117603	( "%dd%d\n"
-3.117603	( "%s"
-3.117603	( "(O**"
-3.117603	( ");"
-3.117603	( "*"
-3.117603	( "-"
-3.117603	( "/*;;
-2.816573	( ";"
-3.117603	( ";Heca"
-3.117603	( ";Time:Q"
-3.117603	( "<
-3.117603	( ">
-3.117603	( "HTTP/1.1
-2.816573	( "Q"	0
-3.117603	( "\n"
-3.117603	( "hello
-3.117603	( "laugh"
-3.117603	( "o("
-3.117603	( "r"
-3.117603	( "throw
-2.515543	( %
-2.117603	( &	-0.2742368
-3.117603	( '
-3.117603	( ','
-3.117603	( '2d'
-2.272505	( '_'	-0.1760913
-3.117603	( 'ws'
-1.339451	( (	-0.2780149
-1.060698	( )	-0.8124191
-1.686239	( *	-0.3639507
-3.117603	( ++
-2.816573	( ,	-0.4729178
-2.272505	( -
-3.117603	( .05
-2.816573	( .5
-2.816573	( /
-1.755875	( 0	-1.025624
-3.117603	( 075
-1.719663	( 1	-0.6360913
-3.117603	( 10
-3.117603	( 105
-2.816573	( 12
-3.117603	( 13
-2.816573	( 16	-0.4065402
-3.117603	( 1912
-3.117603	( 1LL
-1.838849	( 2	-0.6109415
-3.117603	( 22
-3.117603	( 24
-3.117603	( 255
-3.117603	( 256L
-3.117603	( 2l
-2.003659	( 3	-0.4019528
-3.117603	( 30
-2.816573	( 32
-3.117603	( 34
-3.117603	( 38
-2.117603	( 4	-0.4902542
-3.117603	( 40
-2.816573	( 41	0
-2.816573	( 42	0.2218488
-3.117603	( 45
-2.418633	( 5	-0.5642715
-3.117603	( 59
-2.816573	( 6
-2.816573	( 60
-2.816573	( 64	-0.2430381
-3.117603	( 67
-3.117603	( 7
-3.117603	( 70
-2.640481	( 8	-0.4522977
-2.339452	( 9
-3.117603	( 97
-3.117603	( 99999
-1.887154	( ;	-0.9081393
-1.755875	( </s>
-2.640481	( =	-0.4751397
-2.272505	( A	-0.1096987
-2.418633	( B	-0.2653145
-1.887154	( C	-0.2150892
-3.117603	( D
-2.640481	( E	-0.2762064
-2.117603	( F	-0.3410351
-2.816573	( FILE	0
-3.117603	( F_
-2.515543	( G	-0.2382392
-2.214513	( H
-2.418633	( I	-0.6511973
-2.816573	( J
-2.117603	( K	-0.146128
-1.454845	( L	-0.9025182
-3.117603	( LINES
-2.418633	( M	-0.3283041
-2.418633	( N	-0.455932
-1.86233	( O	-0.3775871
-3.117603	( O0
-2.515543	( O2	-0.1549019
-3.117603	( O3
-3.117603	( O4
-2.816573	( O5
-3.117603	( O6
-2.816573	( OO
-2.640481	( O_o	0
-2.640481	( P	-0.4045706
-1.887154	( Q	-0.4175355
-2.640481	( Q0	-0.3521825
-2.816573	( Q1
-3.117603	( Q2
-3.117603	( Q5
-3.117603	( Q6
-2.640481	( QO	-0.4259688
-3.117603	( QQ
-2.16336	( R	-0.3968105
-3.117603	( RAFT
-2.272505	( T	-0.6711408
-2.515543	( U	-0.4906941
-2.816573	( V
-2.214513	( W	-0.4157495
-1.670445	( X	-0.4632448
-3.117603	( XCheckWindowEvent
-3.117603	( XMapWindow
-2.515543	( Y	-0.2643072
-2.515543	( Z
-3.117603	( ^
-1.242541	( _	-0.757548
-2.418633	( _O	-0.1249387
-2.816573	( _Q
-2.418633	( __
-3.117603	( __LINE__
-3.117603	( __STDC_VERSION__
-1.941511	( a	-0.1523696
-2.816573	( ala	-0.3309932
-1.77518	( and	-0.9094301
-3.117603	( ar
-2.640481	( argh	-0.1760913
-2.515543	( asn	0.1139433
-2.816573	( asp	0
-3.117603	( asx
-2.16336	( b	-0.3945069
-3.117603	( be
-2.816573	( bk	-0.1760913
-3.117603	( br
-2.816573	( bu
-2.816573	( buf
-3.117603	( by
-2.214513	( c	-0.1030934
-3.117603	( cN
-3.117603	( cb
-2.272505	( char	-0.3168243
-2.640481	( const	-0.4357286
-3.117603	( cos
-3.117603	( curs_set
-2.515543	( cys	-0.2218488
-2.16336	( d
-3.117603	( dup2
-2.214513	( e	-0.3427286
-3.117603	( elta_u
-3.117603	( elta_v
-1.816573	( f	-0.6296435
-3.117603	( float_
-3.117603	( flu
-1.913483	( g	-0.3878306
-3.117603	( gln
-3.117603	( glu
-2.07621	( h	-0.6560417
-1.515543	( i	-0.3059373
-2.640481	( ile
-2.038421	( int	-0.0939045
-3.117603	( int_
-1.816573	( j	-0.4881166
-1.887154	( k	-0.6399707
-2.038421	( l	-0.09112135
-3.117603	( lQ
-3.117603	( lQoOa
-3.117603	( luN
-2.816573	( lys
-2.117603	( m	-0.5558789
-3.117603	( memset
-2.418633	( met	-0.4259687
-1.737391	( n	-0.3474401
-1.816573	( not	-0.9600525
-2.07621	( o	-0.5107522
-2.117603	( p	-0.341824
-3.117603	( pread
-3.117603	( prin
-3.117603	( printf
-3.117603	( pro
-2.816573	( puts	0.3679768
-2.418633	( q	-0.1911799
-3.117603	( qQ
-2.515543	( r
-3.117603	( rR
-2.640481	( s
-2.816573	( sec	-0.2218488
-2.214513	( ser	-0.3899711
-3.117603	( short
-2.816573	( sizeof	0.3357921
-3.117603	( stdout
-2.515543	( sym_	0
-2.117603	( t	-0.1346985
-3.117603	( tQ
-3.117603	( tch
-3.117603	( tla
-3.117603	( to
-2.272505	( u	-0.3035188
-3.117603	( uU
-3.117603	( ub
-3.117603	( usl
-2.339452	( v
-3.117603	( va_arg
-3.117603	( val
-2.816573	( void
-1.971475	( w	-0.5461611
-2.16336	( x	-0.0266522
-2.214513	( xor	-0.5286311
-2.003659	( y	-0.2259171
-2.418633	( z	-0.4900863
-2.816573	( ze	0
-3.117603	( {
-3.117603	( }
-3.117603	( ~
-2.432007	) !=	-0.1760913
-3.130977	) "\xe2%c%c\r\n"
-1.926857	) %	-0.3923093
-2.285879	) &
-2.017033	) &&	-0.1629298
-1.406701	) (	-0.3479638
-0.9726142	) )	-0.5574433
-1.222492	) *	-0.4216705
-2.352825	) *=	-0.7600873
-1.586909	) +	-0.3133475
-2.227887	) +=	-0.2617202
-1.153253	) ,	-0.2810585
-1.788554	) -	-0.3786348
-2.432007	) -=
-2.829947	) .	-0.4446355
-3.130977	) .0
-1.926857	) /	-0.2689704
-3.130977	) 0
-3.130977	) 0u
-2.829947	) 16u	0
-2.829947	) 1u
-3.130977	) 21
-3.130977	) 64u
-3.130977	) 8u
-2.051795	) :	-0.4238757
-0.6538554	) ;	-0.3268098
-2.352825	) <	-0.1687302
-1.206697	) </s>
-2.352825	) <<	-0.1249387
-2.528917	) =	-0.2710197
-3.130977	) ==
-2.285879	) >	-0.1947334
-2.829947	) >=
-2.528917	) >>	-0.4839607
-2.089584	) ?	-0.2208376
-3.130977	) B
-2.829947	) E3	0
-2.829947	) F	-0.4024876
-3.130977	) F0
-3.130977	) F1
-2.051795	) G	-0.6184504
-2.432007	) J	-0.4771213
-3.130977	) K
-2.653855	) L	-0.1428503
-3.130977	) O
-3.130977	) O5
-2.528917	) O_	0.2552725
-3.130977	) P
-3.130977	) Q
-2.829947	) QR	0
-3.130977	) QS
-3.130977	) Q_
-3.130977	) R
-3.130977	) U
-3.130977	) W
-3.130977	) X
-3.130977	) Y
-2.352825	) [	-0.161368
-1.449735	) ]	-0.8297973
-2.829947	) ^
-2.089584	) _	-0.6023743
-2.829947	) __	0.1249388
-3.130977	) ___
-1.875704	) ____	0.04575753
-3.130977	) _f
-2.829947	) a
-2.829947	) asx
-2.829947	) b
-2.829947	) bd	0
-2.653855	) break	0.4393327
-3.130977	) bt
-3.130977	) by
-2.829947	) c
-3.130977	) continue
-2.829947	) d
-2.829947	) d8
-2.829947	) e	-0.4176841
-3.130977	) err
-2.653855	) exit	0
-2.089584	) for	0.1879905
-3.130977	) g
-3.130977	) glx
-2.829947	) h
-2.653855	) i
-2.352825	) if	0.7051303
-2.829947	) int
-3.130977	) k
-2.653855	) l	-0.455402
-3.130977	) lys
-3.130977	) m
-3.130977	) n
-2.829947	) not
-3.130977	) o
-3.130977	) printf
-3.130977	) putchar
-3.130977	) q
-2.528917	) r	-0.2016453
-2.653855	) s	-0.3336991
-3.130977	) scanf
-3.130977	) sec
-3.130977	) t
-2.653855	) tyr
-2.829947	) u	-0.2934769
-2.653855	) w	-0.4874868
-2.653855	) z
-0.9187891	) {	-0.1210527
-2.285879	) |	-0.1256524
-2.528917	) ||	-0.4471581
-2.829947	) ~
-1.890235	* !	-0.0621479
-0.9962881	* (	-0.1929844
-1.714143	* )
-1.714143	* *	-0.1054005
-2.668386	* +
-2.191265	* ++	-0.4676797
-2.668386	* ,
-2.668386	* .1
-2.668386	* .5
-2.367356	* 0
-2.668386	* 1
-2.668386	* 1.6937441874215991e190
-2.066326	* 10	-0.2218487
-2.668386	* 11
-2.668386	* 1103515245
-2.668386	* 12
-2.066326	* 16	-0.2304489
-2.668386	* 17
-2.668386	* 193
-1.626993	* 2	-0.01659925
-2.668386	* 23
-1.969416	* 3	-0.1934534
-2.668386	* 32
-2.668386	* 39
-1.522258	* 4	-0.2430381
-2.668386	* 4.522871578970112e217
-2.668386	* 4.6727004911171048e-153
-2.367356	* 42
-2.668386	* 51
-2.668386	* 512L
-2.668386	* 5298487
-2.668386	* 6
-2.367356	* 7
-2.668386	* 7.90055321525613e115
-2.367356	* 768	-0.1760913
-2.191265	* 8
-1.668386	* 80	-0.455932
-2.668386	* 81
-2.668386	* 85
-2.668386	* 881
-2.191265	* 9
-2.668386	* 92
-1.492295	* </s>
-2.668386	* A
-2.668386	* B
-2.066326	* C	-0.5931663
-2.191265	* E
-2.668386	* H
-1.969416	* I	-0.6154239
-2.191265	* K	-0.5465427
-2.066326	* L	-0.2628256
-2.668386	* L_tmpnam
-2.367356	* N
-2.191265	* O	-0.4153757
-1.969416	* O0	-0.5392692
-2.367356	* O3
-2.668386	* O4
-2.367356	* O6
-1.626993	* Q	-0.3455927
-2.668386	* Q0
-2.668386	* Q1
-2.668386	* Q2
-2.066326	* Q3	-0.1249387
-2.668386	* Q5
-2.668386	* Q7
-2.668386	* Q9
-2.668386	* QO
-2.367356	* QQ	-0.30103
-2.367356	* R
-2.668386	* S
-2.668386	* T
-2.668386	* U
-2.668386	* V
-2.367356	* W
-1.765296	* X	0.008272544
-1.969416	* Y	-0.1977151
-2.668386	* ]
-1.389632	* _	-0.5740871
-2.066326	* _0
-2.668386	* _O
-2.367356	* __	0.1249388
-2.668386	* ___
-2.191265	* a	-0.4176841
-1.765296	* b	-0.2541311
-2.668386	* bD
-2.668386	* ba
-2.191265	* bb	-0.30103
-2.668386	* be
-2.668386	* br
-2.668386	* bx
-2.066326	* c	-0.2757241
-2.668386	* c_X
-1.969416	* const	-0.6118199
-1.714143	* d	-0.1191864
-1.765296	* e	-0.06550154
-2.367356	* f
-1.714143	* g	-0.5543765
-2.066326	* i
-2.191265	* j
-2.191265	* k	-0.3932194
-2.367356	* l
-2.367356	* m
-1.890235	* n	-0.6802877
-1.969416	* not	-0.4667628
-1.237022	* o	-0.7734048
-1.253413	* p	-0.2364075
-2.668386	* printf
-1.823288	* q	-0.4446834
-2.191265	* r	-0.4247332
-1.626993	* s	-0.1160263
-2.668386	* sin
-2.191265	* sizeof
-2.668386	* t
-2.367356	* tyr
-1.714143	* u	-0.1608513
-2.066326	* y	-0.535964
-2.367356	* z
-1.653213	*= !
-1.352183	*= (
-1.352183	*= -	-0.4064392
-1.653213	*= 0
-1.653213	*= 0.7
-1.653213	*= 02
-1.176091	*= 1	-0.4347783
-1.653213	*= 256
-1.653213	*= C
-1.653213	*= I
-0.8750613	*= Q	-0.7433891
-1.352183	*= Y	-0.4002812
-1.653213	*= _
-0.7501225	*= g	-0.8554066
-0.6532125	*= o	-0.9733956
-1.352183	*= s	-0.4490925
-1.653213	*= t
-1.653213	*= u
0	*m,!*m?H:" upgrade
-2.089905	+ !
-2.390935	+ "fl!"
-0.8594562	+ (	-0.3655125
-1.691965	+ )	-0.6424441
-1.788875	+ *
-2.390935	+ ,
-1.913814	+ 0
-2.390935	+ 0.5
-0.9759617	+ 1	-0.6223443
-2.390935	+ 1.5
-2.390935	+ 11
-2.390935	+ 12
-2.390935	+ 128L
-2.390935	+ 138
-2.089905	+ 16
-2.390935	+ 18
-2.390935	+ 19205553
-1.390935	+ 2	-0.2182446
-2.390935	+ 20
-2.390935	+ 287
-2.390935	+ 2L
-1.612784	+ 3	-0.2027434
-2.390935	+ 32
-2.089905	+ 4	-0.3205836
-2.390935	+ 4.5
-2.390935	+ 42
-2.390935	+ 44
-2.390935	+ 4L
-2.390935	+ 5
-2.089905	+ 512
-2.390935	+ 58
-2.390935	+ 6
-2.390935	+ 667
-2.089905	+ 7
-2.390935	+ 74
-2.390935	+ 79
-2.089905	+ 8
-2.390935	+ 84
-2.390935	+ 86400
-2.390935	+ 99
-1.436693	+ </s>
-2.390935	+ A
-2.089905	+ B	-0.3744589
-2.390935	+ C
-2.390935	+ E
-2.390935	+ EOF
-1.913814	+ F
-1.913814	+ H
-2.390935	+ J
-1.913814	+ N	-0.4259688
-2.390935	+ O4
-2.390935	+ P
-2.390935	+ Q
-2.390935	+ Q0
-2.390935	+ Q5
-2.390935	+ R
-2.390935	+ T
-2.390935	+ TMP_MAX
-2.390935	+ V
-2.390935	+ X
-2.390935	+ Y
-1.612784	+ _	-0.7377635
-2.390935	+ _Q
-1.913814	+ __	0
-2.089905	+ __STDC__
-2.089905	+ a
-2.390935	+ abs
-2.390935	+ asn
-2.390935	+ cos
-1.913814	+ d	-0.4288166
-2.390935	+ e
-1.913814	+ g	-0.4654355
-1.311754	+ i	-0.714482
-2.390935	+ j
-2.390935	+ k
-1.913814	+ l
-2.390935	+ location
-1.913814	+ m
-1.691965	+ n	-0.1983677
-1.612784	+ o
-2.089905	+ p
-2.390935	+ q
-1.612784	+ s	-0.7428233
-2.390935	+ sTaa
-1.913814	+ t	-0.4610344
-1.913814	+ u	-0.3827001
-2.390935	+ unk
-2.390935	+ v
-2.390935	+ wnS
-1.788875	+ x	-0.1515909
-2.390935	+ y
-1.913814	+ z	-0.5606673
-1.366423	++ %	-0.672411
-1.968483	++ &
-0.6897293	++ )	-0.1557684
-1.968483	++ *
-1.123385	++ ,	-0.3579749
-1.667453	++ -
-1.968483	++ /
-0.9270903	++ ;	-0.07525092
-1.190332	++ <
-1.491362	++ </s>
-1.968483	++ <=
-1.366423	++ =	-0.5913856
-1.968483	++ ==
-1.190332	++ ]	-0.6101367
-1.667453	++ c
-1.968483	++ g
-1.491362	++ i	-0.5740313
-1.968483	++ ile
-1.968483	++ j
-1.968483	++ l
-1.968483	++ leu
-1.968483	++ n
-1.491362	++ not	-0.2449141
-1.667453	++ s	-0.3336991
-1.968483	++ s_4
-1.667453	++ tla	-0.1760913
-1.968483	++ u
-1.190332	++ xor	-0.7716691
0	+99*! *m,!*m?H:"
-1.414973	+= !	-0.2805083
-2.017033	+= 'a'
-0.9756407	+= (	-0.3192911
-2.017033	+= .05
-2.017033	+= .1
-2.017033	+= 0.5
-1.539912	+= 1	-0.4021909
-2.017033	+= 1.5
-2.017033	+= 16
-2.017033	+= 194
-1.539912	+= 2	-0.3288344
-2.017033	+= 21
-2.017033	+= 4
-2.017033	+= 4u
-2.017033	+= 5
-2.017033	+= 7
-2.017033	+= A
-1.716003	+= E	-0.3881802
-1.716003	+= F	-0.4414057
-1.414973	+= H	-0.6000447
-2.017033	+= K
-2.017033	+= M
-1.414973	+= O1
-2.017033	+= O8
-2.017033	+= Q
-1.716003	+= U
-2.017033	+= UV_DROP
-1.716003	+= V	-0.30103
-1.539912	+= Y	-0.4403985
-2.017033	+= _
-1.716003	+= be	-0.05115253
-1.716003	+= bf	-0.30103
-2.017033	+= bt
-1.539912	+= d	-0.4288166
-1.716003	+= e	-0.4118545
-1.414973	+= g	-0.202194
-2.017033	+= h
-1.318063	+= i	-0.6266436
-1.318063	+= l	-0.3292242
-1.062791	+= o	-0.4410459
-2.017033	+= p
-2.017033	+= printf
-2.017033	+= r
-2.017033	+= s
-1.716003	+= u
-1.716003	+= v
-1.539912	+= w	-0.5556026
-3.057666	, !
-3.057666	, "
-2.580545	, "%s"	0.09691
-3.057666	, "('A)"
-3.057666	, "('A`)"
-3.057666	, "(A`)"
-2.756636	, ">	0
-3.057666	, "d"
-2.580545	, "r"	0
-3.057666	, "usage:
-2.057666	, &
-2.455606	, ','	0.09691
-1.659726	, '_'	0
-1.756636	, (	-0.2107769
-2.016273	, )	-0.372814
-1.580545	, *	-0.2379491
-3.057666	, ++
-2.580545	, ,
-2.756636	, -
-2.580545	, ...	0
-1.36747	, 0	-1.377786
-3.057666	, 0x98BADCFE
-3.057666	, 0xEFCDAB89
-1.756636	, 1	-1.121364
-3.057666	, 1.3
-3.057666	, 128
-2.580545	, 16	-0.4471581
-2.154576	, 2	-0.2776818
-3.057666	, 24
-3.057666	, 256
-2.358696	, 3	-0.1934534
-3.057666	, 3.9999e5
-3.057666	, 30
-3.057666	, 308438
-2.580545	, 32	-0.4045706
-3.057666	, 3285377520
-3.057666	, 5
-2.756636	, 6	-0.366423
-3.057666	, 60
-3.057666	, 65544
-2.756636	, 8
-3.057666	, 85
-3.057666	, 9
-3.057666	, <
-1.36747	, </s>
-2.756636	, =	-0.4758012
-2.455606	, A	-0.2188432
-2.154576	, B	-0.7894324
-2.279515	, C	-0.1130395
-2.756636	, D
-3.057666	, DefaultGC
-3.057666	, DefaultVisual
-2.455606	, E	-0.2120889
-3.057666	, EOF
-2.279515	, F	-0.4024876
-3.057666	, F_
-2.756636	, G	-0.3409015
-2.358696	, H	-0.5793601
-2.358696	, I	-0.5859305
-2.580545	, J
-1.943723	, K	-0.8920946
-2.358696	, L	-0.3444957
-2.580545	, M
-2.016273	, N	-0.4595361
-1.911538	, O	-0.298932
-2.279515	, O0	-0.4301247
-3.057666	, O1
-2.756636	, O2
-3.057666	, O3
-3.057666	, O4
-2.756636	, O5
-3.057666	, O6
-3.057666	, O7
-3.057666	, O8
-3.057666	, O9
-2.756636	, OO
-2.580545	, P
-1.978485	, Q	-0.0683082
-2.455606	, Q0	-0.4648868
-2.756636	, Q1
-2.580545	, Q2	-0.3309932
-3.057666	, Q3
-2.580545	, Q4
-3.057666	, Q5
-2.756636	, Q6
-3.057666	, Q7
-3.057666	, Q8
-3.057666	, Q9
-2.580545	, QO	-0.39794
-3.057666	, QQ
-3.057666	, QS
-1.434417	, R	-1.161951
-3.057666	, RootWindow
-2.580545	, S
-2.756636	, SEEK_SET	0
-2.279515	, T	-0.4126633
-3.057666	, TIOCGWINSZ
-2.455606	, U	-0.455932
-2.756636	, V
-2.212568	, W	-0.4420785
-2.756636	, X
-2.580545	, Y	-0.4403985
-0.6545456	, _	-1.797713
-3.057666	, _0
-2.580545	, _O	-0.3802113
-2.580545	, _Q	-0.3802113
-1.978485	, __	-0.3679767
-3.057666	, __VA_ARGS__
-2.103424	, a	-0.8363534
-3.057666	, a_
-3.057666	, ar
-3.057666	, arg
-2.756636	, au	0
-2.103424	, b	-0.256979
-2.756636	, bA
-2.756636	, bB
-2.756636	, bC
-2.756636	, bD
-3.057666	, bb
-3.057666	, be
-2.756636	, bf	-0.30103
-3.057666	, bg
-3.057666	, bi
-3.057666	, bo
-3.057666	, bq
-3.057666	, bt
-3.057666	, bu
-3.057666	, bv
-2.756636	, bz
-2.358696	, c	-0.1696707
-3.057666	, c8
-3.057666	, ch
-2.279515	, char	-0.2588323
-2.455606	, const	-0.4357286
-1.881575	, d	-0.4147535
-3.057666	, do
-2.756636	, dstr	0
-3.057666	, dup
-2.016273	, e	-0.5540522
-3.057666	, eep
-2.279515	, f	-0.6932366
-3.057666	, fopen
-3.057666	, fw
-2.212568	, g	-0.6951095
-2.756636	, gln	-0.3143939
-2.580545	, glu	-0.1760913
-3.057666	, go
-2.212568	, h	-0.5108997
-3.057666	, halting
-3.057666	, ho
-1.595268	, i	-0.804222
-2.756636	, int
-3.057666	, intw
-3.057666	, ioctl
-2.057666	, j	-0.7099653
-2.154576	, k	-0.5181581
-2.057666	, l	-0.5560081
-3.057666	, le
-3.057666	, lea
-2.756636	, lu
-2.756636	, lv
-3.057666	, lys
-2.057666	, m	-0.7626389
-1.827217	, n	-0.1455153
-3.057666	, np
-1.881575	, o	-0.6845722
-3.057666	, oec
-2.756636	, of	0
-3.057666	, op
-1.978485	, p	-0.8067963
-3.057666	, pow
-3.057666	, pu
-2.756636	, q
-2.279515	, r	-0.2596373
-3.057666	, rand
-2.212568	, s	-0.2002861
-3.057666	, shi
-2.756636	, si	0
-2.455606	, sizeof	0.1139433
-3.057666	, sprintf
-3.057666	, stdin
-3.057666	, strlen
-3.057666	, sym_
-1.827217	, t	-0.4443288
-3.057666	, tape
-1.853546	, u	-0.7117586
-3.057666	, unk
-3.057666	, usleep
-2.212568	, v	-0.08062649
-3.057666	, vad
-3.057666	, val
-3.057666	, vpr
-2.103424	, w	-0.09766468
-3.057666	, write
-1.943723	, x	-0.3826476
-2.154576	, y	-0.5359639
-2.455606	, z
-3.057666	, ~
0	,101 +99*!
-2.102091	- &
-1.323939	- (	-0.2119985
-2.403121	- )
-2.102091	- *
-2.403121	- .05
-2.403121	- 0.5
-0.8233369	- 1	-0.1776705
-2.403121	- 1.3
-2.403121	- 12
-2.403121	- 128
-2.403121	- 14202379
-2.403121	- 158
-2.403121	- 16
-2.403121	- 19
-2.403121	- 1933008
-1.624969	- 2	-0.3338551
-2.403121	- 205
-2.403121	- 22
-2.403121	- 24
-2.403121	- 257
-1.500031	- 3	-0.1717943
-2.403121	- 30
-2.403121	- 304
-1.925999	- 32	-0.4423592
-2.102091	- 33	0
-2.403121	- 35
-2.403121	- 37
-2.403121	- 4
-2.403121	- 488848
-2.403121	- 4u
-2.403121	- 5
-2.403121	- 508
-2.403121	- 59
-1.704151	- 6	-0.1879905
-2.403121	- 60
-2.403121	- 64
-1.925999	- 7
-2.403121	- 7.5
-2.102091	- 8
-2.403121	- 89
-1.801061	- 9	-0.1583625
-2.102091	- 90
-1.558022	- </s>
-2.403121	- A
-2.403121	- Acce
-2.102091	- E
-1.925999	- EOF
-2.403121	- F
-1.801061	- H
-1.925999	- I	-0.3869447
-2.403121	- L
-2.403121	- M
-2.403121	- O1
-2.403121	- O7
-2.102091	- OO	-0.39794
-2.403121	- P
-2.102091	- Q
-2.403121	- Q0
-2.403121	- QO
-2.403121	- R
-2.102091	- V
-1.925999	- W	-0.4457128
-2.403121	- WebSocket
-2.403121	- X
-2.403121	- Y
-1.925999	- _	-0.5616723
-2.403121	- _O
-2.403121	- _Q
-1.403121	- __	-0.3467875
-2.102091	- a
-2.102091	- asn	0.3357921
-2.403121	- b
-1.925999	- c
-1.801061	- d	-0.6332912
-2.403121	- d8
-2.403121	- dup2
-2.403121	- e
-2.403121	- f
-1.925999	- g	-0.3782853
-1.925999	- h
-1.500031	- i	-0.2623432
-1.801061	- j	-0.2839966
-1.801061	- k	-0.2830566
-2.403121	- key
-2.403121	- l
-2.102091	- m
-1.558022	- n	-0.3153933
-1.925999	- o	-0.4410459
-1.801061	- p	-0.2859662
-2.403121	- q
-2.403121	- r
-2.102091	- u	-0.3827001
-1.704151	- unk	-0.1760913
-1.704151	- v	-0.60206
-1.925999	- x	-0.405569
-1.704151	- ~
-1.477121	-- &&
-0.5228788	-- )	-0.2956566
-1.176091	-- ,	-0.3683569
-1.477121	-- 1954
-0.69897	-- ;
-1.477121	-- </s>
-1.176091	-- >
-1.477121	-- H
-1.176091	-- O
-1.477121	-- g
-1.477121	-- j
-1.477121	-- s
-1.477121	-- val
-1.477121	-- xor
-1.09108	-= (
-1.568202	-= 061
-1.568202	-= 2
-1.568202	-= 4
-1.568202	-= 80
-1.568202	-= D
-1.568202	-= F
-1.09108	-= H	-0.5031347
-1.568202	-= V
-1.568202	-= W
-1.568202	-= b
-1.267172	-= be	-0.05115253
-1.267172	-= bf	-0.30103
-1.09108	-= d	-0.4288166
-1.568202	-= e
-0.9661418	-= g	-0.5618188
-1.568202	-= h
-1.568202	-= i
-0.9661418	-= l	-0.6302542
-1.568202	-= r
-1.568202	-= u
-1.267172	-= w	-0.4306639
-1.880814	-> </s>
-1.278754	-> a	-0.2177899
-0.8016323	-> b	-0.4982562
-1.880814	-> c
-0.7346855	-> j	-0.4581535
-1.035716	-> n	-0.7326757
-1.278754	-> not
-1.278754	-> op	-0.1918855
-1.880814	-> pixels
-1.403692	-> val
-0.8394209	-> x	-0.3198568
-0.8394209	-> y	-0.3907273
-1.403692	-> z
-2.045323	. &
-2.045323	. /
-1.744293	. </s>
-2.045323	. ]
-1.142233	. _	-0.2007533
-2.045323	. binary
-1.568202	. c	-0.3760947
-2.045323	. crea
-2.045323	. dat
-2.045323	. data
-1.443263	. e	-0.2357633
-2.045323	. getC
-2.045323	. href
-2.045323	. key
-2.045323	. keysym
-0.4890205	. not	-0.6470271
-2.045323	. offsetLeft
-2.045323	. offsetTop
-2.045323	. onmousemove
-1.346353	. p	-0.2118645
-2.045323	. pageY
-2.045323	. putImageData
-1.443263	. q	-0.5179154
-2.045323	. send
-2.045323	. set
-2.045323	. slice
-2.045323	. subs
-2.045323	. sym
-2.045323	. type
-0.841203	. val	-0.2340832
-2.045323	. xkey
-1.045323	. y	-0.177791
-0.1760913	... )	-0.4213264
-0.4771213	... </s>
0	.0 (
-0.4771213	.05 )
-0.4771213	.05 ;
-0.4771213	.05 </s>
-0.1760913	.1 )
-0.4771213	.1 :
0	.27 s
-0.4771213	.5 *
-0.4771213	.5 -
-0.4771213	.5 </s>
-1.94939	/ &
-1.104292	/ (
-1.94939	/ )
-1.94939	/ +
-1.94939	/ -
-1.94939	/ 1024.
-1.94939	/ 12
-0.6941175	/ 2	-0.3674638
-1.64836	/ 2.	0
-1.94939	/ 20
-1.94939	/ 24
-1.94939	/ 26
-1.472269	/ 3
-1.94939	/ 32768
-1.0463	/ 4	-0.3513351
-1.34733	/ 5	-0.08715016
-1.94939	/ 504
-1.94939	/ 6
-1.94939	/ 60
-1.94939	/ 60.
-1.94939	/ 768
-1.34733	/ 8	-0.5031347
-1.94939	/ 85
-1.94939	/ 88
-1.64836	/ I
-1.94939	/ M
-1.94939	/ O
-1.94939	/ O3
-1.472269	/ Q	-0.3931412
-1.94939	/ QQ
-1.94939	/ RI4
-1.94939	/ RM
-1.94939	/ SlM90
-1.64836	/ _	-0.4367335
-1.94939	/ fabs
-1.94939	/ g
-1.94939	/ j
-1.94939	/ k
-1.64836	/ lM
-1.64836	/ n
-1.64836	/ p
-1.94939	/ scr
-1.94939	/ w
-0.69897	/= ++
-0.39794	/= 2
-0.69897	/= H
-0.69897	/= l
-1.888367	0 &&
-2.365488	0 (
-0.5730963	0 )	-0.5921093
-2.064458	0 +
-0.6251253	0 ,	-0.2890779
-1.110215	0 :	-0.1739983
-0.6251253	0 ;	-0.1176547
-1.462398	0 <	-0.1892709
-2.064458	0 </s>
-2.365488	0 ==
-2.064458	0 >
-1.411245	0 ?	-0.1224064
-1.411245	0 ]	-0.184168
-2.365488	0 _t
-2.365488	0 m
-2.365488	0 ||
-2.064458	0 }
-0.4771213	0.5 *
-0.1760913	0.5 ;
0	0.7 ;
0	01 ]
0	02 </s>
0	024 )
0	03 ;
0	040 )
0	061 *
0	075 )
0	0d:`184>b)^15)OM :23h)QN<'
-0.30103	0u ,
-0.30103	0u ;
0	0x1 !=
0	0x3f0 )
0	0x67452301 ,
0	0x820008202625a0 ;
0	0x98BADCFE </s>
0	0xEFCDAB89 ,
0	0xf |
0	0xfc0 ||
0	0xfe0 ^
0	0xff00ff00ff ;
0	0xffff )
-1.78533	1 &	-0.4581534
-1.660391	1 &&	-0.1281677
-0.6942494	1 )	-0.1569246
-2.262451	1 *
-1.660391	1 +
-0.8645111	1 ,	-0.1778623
-1.032002	1 -	-0.171542
-2.262451	1 4
-1.563481	1 :	-0.1290947
-0.8000531	1 ;	-0.04428326
-2.262451	1 </s>
-1.308209	1 <<	-0.08940042
-1.961421	1 ==	-0.4542584
-1.78533	1 ?
-2.262451	1 A
-1.78533	1 [
-0.7710894	1 ]	-0.370847
-2.262451	1 ^
-2.262451	1 cq
-1.961421	1 |
-1.78533	1 }	-0.4628808
0	1.159922023e9 ,
-0.30103	1.3 ,
-0.30103	1.3 </s>
0	1.5 ;
0	1.6937441874215991e190 ;
-0.60206	10 )
-1.079181	10 *
-0.7781513	10 +	-0.4663974
-0.7781513	10 ,
-1.079181	10 /
-0.7781513	10 ;
-1.079181	10 }
0	1008 )
0	101 ==
-0.4771213	1023 )
-0.1760913	1023 |	-0.4288166
0	1024 /
0	1024. ;
0	105 <
-0.1760913	11 )
-0.4771213	11 ;
0	1103515245 &
0	112 ,
0	1152 +
-1	12 &
-0.69897	12 )
-1	12 +
-0.69897	12 -
-0.69897	12 </s>
-0.69897	12 >
0	12359778 ;
0	12365733 -
0	124 -
0	127 ;
-0.60206	128 &&
-0.30103	128 )	-0.3681603
-0.60206	128 ,
0	128L +
-0.30103	13 ,
-0.30103	13 ?
0	13000 ;
0	138 )
-0.1760913	14 &
-0.7781513	14 ]
-0.7781513	14 ^
0	14202379 *
0	14695981039346656037ULL ;	-0.2350978
-0.544068	15 )	-0.4751896
-0.3679768	15 ,
-0.845098	15 ;
-0.845098	15 |
0	1500 ?
0	158 )
-1.30103	16 &&
-0.5228788	16 )	-0.192069
-0.8239087	16 *
-1.30103	16 +
-0.8239087	16 ,
-1.30103	16 /
-0.8239087	16 ;	-0.2350978
-1.30103	16 </s>
-1.30103	16 >
0	1600 &&
-0.1760913	16711935 ;	-0.4684579
-0.4771213	16711935 |
0	16774143 ;
0	16u )
-0.1760913	17 +
-0.4771213	17 ]
0	176 /
-0.69897	18 )
-0.69897	18 ,
-0.69897	18 </s>
-0.69897	18 ?
-0.69897	18 ]
0	19 )
0	1912 --
0	19205553 ;
0	193 +
0	1933008 </s>
0	194 ,
0	1954 )
0	196 -
0	197 )
0	198 ;
-0.30103	1LL +
-0.30103	1LL <<
0	1l N
-0.30103	1u )
-0.30103	1u ,
-1.781755	2 %
-1.605664	2 &
-2.082785	2 (
-0.5387173	2 )	-0.1851684
-0.8786654	2 *	-0.1421154
-1.304634	2 +	-0.1275788
-0.8275129	2 ,	-0.2229122
-2.082785	2 -
-0.968842	2 ;	0.0993008
-1.781755	2 </s>
-1.304634	2 ?
-2.082785	2 MJ
-0.968842	2 ]	-0.1655897
-2.082785	2 _KK3
-1.781755	2 ||
-2.082785	2 }
0	2. )	-0.471951
0	2.271681097355226e15 ,
-0.90309	20 %
-0.60206	20 )
-0.90309	20 *
-0.60206	20 </s>
-0.60206	20 ?
0	204 ]
0	205 )
-0.30103	21 -
-0.30103	21 ]
-0.30103	22 )
-0.30103	22 *
0	23 ;
0	234 ;
-0.60206	24 )
-0.90309	24 ,
-0.90309	24 ;
-0.60206	24 </s>
-0.90309	24 O3NF
-0.90309	24 ]
0	25 ;
0	250 ,
-0.845098	255 )
-0.845098	255 ,
-0.845098	255 -
-0.845098	255 :
-0.544068	255 ;
-0.845098	255 ?
-0.30103	256 ,
-0.60206	256 -
-0.60206	256 ;
0	256L +
0	257 ,
0	258063 &
-0.30103	26 ,
-0.30103	26 ]
0	27 )
0	275 )
0	276 )
0	28 &
0	287 )
0	2L )
0	2l NUO
-1.596597	3 &
-1.897627	3 (
-0.6188735	3 )	-0.1036249
-0.9433846	3 *	-0.09876996
-1.198657	3 +	-0.6697627
-1.052529	3 ,	-0.03736371
-1.198657	3 -	-0.2043345
-1.897627	3 4
-1.596597	3 :
-1.052529	3 ;
-1.897627	3 </s>
-1.897627	3 ?
-1.897627	3 A
-1.897627	3 B
-0.6935071	3 ]	-0.3198838
-1.897627	3 _z
0	3' Q
0	3.135045272e9 ,
0	3.9999e5 )
-0.845098	30 &&
-0.845098	30 *
-0.845098	30 +
-0.544068	30 ;
-0.845098	30 ?
-0.845098	30 ]
0	304 -
0	308438 *
-0.60206	31 )
-0.1249387	31 ;
-0.5118834	32 )	-0.1572725
-0.9378521	32 +	-0.412522
-0.8129134	32 ,
-1.414973	32 -
-0.7160034	32 ;	0.02017473
-1.113943	32 <<	-0.4036923
-1.113943	32 ]	-0.425227
-1.414973	32 |
-0.30103	32768 )
-0.30103	32768 ,
0	3285377520 }
0	33 )
-0.30103	333 *
-0.30103	333 ;
0	3352537 *
-0.4771213	34 <
-0.4771213	34 </s>
-0.4771213	34 m
-0.30103	35 )
-0.30103	35 -
0	36 -
-0.30103	37 +
-0.30103	37 ;
-0.30103	38 )
-0.30103	38 *
0	384 )
0	39 ;
0	3920 )
-1.880814	4 &
-1.880814	4 &&
-0.5190858	4 )	-0.373766
-0.9777236	4 *	-0.09901733
-1.278754	4 +	-0.5535476
-1.035716	4 ,
-1.102662	4 -
-1.880814	4 :
-1.102662	4 ;
-1.880814	4 <
-1.880814	4 </s>
-1.880814	4 ?
-1.880814	4 SNH
-0.8016323	4 ]	-0.3994197
-1.403692	4 |
0	4.023233417e9 ,
0	4.294967296e9 ,
0	4.5 )
0	4.503599627370496e15 ,
0	4.522871578970112e217 ;
0	4.6727004911171048e-153 ;
-0.07918125	40 )	-0.1128878
-0.7781513	40 ;
0	4092 ^
0	41 )	-0.3681603
0	41088 ,
0	4190208 |
0	4194304 </s>
-0.09691001	42 )	-0.192069
-0.69897	42 ;
0	44 +
0	45 )
0	48 ;
0	480 ,
0	488848 *
0	4L +
-0.30103	4u )
-0.30103	4u ;
-1.556303	5 %
-1.255273	5 &&
-0.4101745	5 )	-0.4673213
-1.255273	5 *
-1.255273	5 ,
-1.556303	5 -
-1.556303	5 ;
-1.556303	5 </s>
-1.079181	5 ?
-1.556303	5 OMaMch
-0.6532125	5 ]	-0.02168308
0	50 ;
0	5000 +
0	504 *
0	508 ]
0	51 )
-0.60206	512 *
-0.60206	512 +
-0.60206	512 ;
-0.60206	512 </s>
0	512L )
0	516 ]
-0.30103	5200 ;
-0.30103	5200 ]
0	5298487 :
0	55 ?
-0.4771213	56 )
-0.1760913	56 ;	-0.4394148
0	57 ;
0	58 >
-0.30103	59 ;
-0.30103	59 ==
0	5toG57j/3" </s>
-1.30103	6 %
-1.30103	6 &
-1.60206	6 &&
-0.6478175	6 )	-0.3333638
-1.124939	6 *	-0.4714932
-1.124939	6 ,	-0.4932957
-1.60206	6 -
-1.60206	6 /
-1.60206	6 :
-1.124939	6 ;
-1.60206	6 <
-1.30103	6 </s>
-1.60206	6 >
-1.30103	6 ?
-1.60206	6 N
-1.60206	6 O
-1	6 ]	-0.2491357
-1.60206	6 sN
-1.60206	6 yN
-0.20412	60 )	-0.2889791
-0.60206	60 *	-0.4309494
-0.90309	60 /
0	60. /
0	61 :
-0.30103	62 ;
-0.30103	62 ?
-0.30103	63 )	-0.4699962
-0.60206	63 ,
-0.60206	63 <<
0	63504 ;
-1.079181	64 &
-0.7781513	64 )
-1.079181	64 *
-0.3802112	64 ,
-1.079181	64 :
-1.079181	64 ;
-1.079181	64 </s>
0	64u )
0	65280 )
0	65307 ;
-0.30103	65536 ;
-0.30103	65536 ]
0	65544 >
0	667 ,
0	67 *
0	69 j
0	6990400 ;
-1.518514	7 &
-1.518514	7 &&
-0.819544	7 )	-0.2166785
-1.217484	7 *
-0.916454	7 ,
-1.518514	7 -
-1.518514	7 7
-1.518514	7 :
-1.217484	7 ;
-1.518514	7 <
-1.217484	7 </s>
-1.518514	7 ?
-1.041393	7 O
-1.518514	7 OMQ
-1.518514	7 ON8r
-0.819544	7 ]	-0.1699545
-1.518514	7 sN
0	7.5 )
0	7.90055321525613e115 ;
0	70 )
-0.30103	74 )
-0.30103	74 </s>
0	75 ?
0	76 )
-0.60206	768 ;
-0.60206	768 </s>
-0.30103	768 ]
-0.30103	77 ;
-0.30103	77 O
-0.60206	79 )
-0.60206	79 ;
-0.60206	79 ]
-0.60206	79 b
-1.255273	8 &
-1.732394	8 &&
-0.6910011	8 )	-0.1539501
-1.255273	8 +
-0.6184504	8 ,	-0.1354585
-1.431364	8 :
-0.9542425	8 ;	-0.2319335
-1.732394	8 <
-1.431364	8 >>	-0.4449366
-1.431364	8 ?
-1.130334	8 ]
-1.732394	8 _a
-1.732394	8 b
-1.732394	8 j
-1.732394	8 k9
-1.431364	8 |	-0.4536402
0	8.44396048e8 ,
-1.146128	80 )
-0.146128	80 +	-0.9801326
-1.146128	80 ,
-1.146128	80 ;
-1.146128	80 ]
0	8000 </s>
-0.4771213	81 )
-0.4771213	81 -
-0.4771213	81 /
0	82 ;
0	84 )
-0.4771213	85 *
-0.4771213	85 +
-0.4771213	85 <<
-0.30103	86400 )
-0.30103	86400 -
0	88 )
0	881 ,
0	89 ?
0	8u +
-1.09691	9 %
-0.552842	9 )	-0.2162069
-1.09691	9 *
-1.39794	9 +
-1.09691	9 ,
-1.09691	9 -
-1.09691	9 ;	-0.4684579
-1.39794	9 <<
-1.09691	9 ?
-1.39794	9 g
-1.39794	9 j_la
-1.39794	9 j_laaaN
-1.39794	9 slltwzh
-0.30103	90 )
-0.30103	90 ;
0	91 )
-0.60206	92 &&
-0.60206	92 )
-0.60206	92 +
-0.60206	92 ;
0	93 ,
0	96 ^
-0.4771213	97 +
-0.1760913	97 ]
0	98 +
0	9858122 :
0	99 ]	-0.3738656
0	9999 ]
0	99999 )
-2.017033	: ""
-2.017033	: "Q(j"
-2.017033	: "Q(jam"
-1.539912	: %
-1.716003	: &
-2.017033	: '='
-0.8409421	: (	-0.2117952
-1.716003	: *
-2.017033	: -
-0.7160034	: 0	-0.4126631
-1.539912	: 1
-2.017033	: 12365733
-2.017033	: 2
-2.017033	: 24
-2.017033	: 32
-2.017033	: 3352537
-2.017033	: 5
-1.716003	: 6
-2.017033	: 65536
-2.017033	: 69
-2.017033	: 79
-2.017033	: :
-1.171935	: </s>
-2.017033	: >
-2.017033	: B
-2.017033	: EOF
-2.017033	: N
-2.017033	: O
-2.017033	: R
-1.539912	: _	-0.4217564
-2.017033	: _Zadat57
-2.017033	: a
-1.716003	: b
-1.716003	: c
-1.716003	: d
-2.017033	: fopen
-2.017033	: g
-1.539912	: gln	-0.30103
-2.017033	: i
-2.017033	: k8b
-1.716003	: m
-2.017033	: main
-2.017033	: n
-2.017033	: p
-2.017033	: putchar
-2.017033	: q
-2.017033	: u
-1.716003	: v
-2.017033	: webso
0	:23h)QN<' /
-2.983175	; %
-2.983175	; &
-2.983175	; '(
-2.284205	; (
-1.704422	; )	-0.390815
-2.080085	; *	-0.1145642
-2.028933	; ++	-0.9557962
-2.983175	; --
-2.983175	; 0
-2.028933	; ;	-0.2198578
-0.3693332	; </s>
-2.983175	; A
-2.983175	; B
-2.506054	; D
-2.983175	; E
-2.682145	; F	-0.4024876
-2.381115	; G	-0.4658403
-2.506054	; H	-0.5228788
-2.506054	; I	-0.4890205
-2.983175	; J
-2.080085	; K	-0.2253093
-2.284205	; L	-0.6706364
-2.983175	; M
-2.983175	; N
-2.381115	; O
-2.080085	; P	-0.6342447
-2.983175	; Q_
-2.983175	; R
-2.983175	; SDL_BlitSurface
-2.983175	; SDL_Delay
-2.983175	; SDL_Event
-2.983175	; SDL_FillRect
-2.983175	; SDL_Flip
-2.983175	; SDL_Init
-2.983175	; SDL_LoadWAV
-2.983175	; SDL_MixAudio
-2.983175	; SDL_OpenAudio
-2.983175	; SDL_PauseAudio
-2.983175	; T
-2.983175	; V
-2.284205	; W	-0.5064107
-2.983175	; Window
-2.682145	; X	-0.4518154
-2.983175	; XEvent
-2.983175	; XImage
-2.983175	; XSelectInput
-2.682145	; Y	-0.4140695
-2.028933	; _	-0.5152242
-2.983175	; __
-2.983175	; ___
-1.807084	; a	-0.3350145
-1.506054	; b	-0.1887931
-2.983175	; bA
-2.983175	; ba
-2.983175	; bc
-2.506054	; bh	0.1249388
-2.983175	; bj
-2.983175	; break
-2.983175	; bz
-2.381115	; c
-2.381115	; char	-0.01579428
-1.837047	; d	-0.3247516
-2.381115	; e
-2.682145	; else
-2.983175	; extern
-2.381115	; f	-0.5491239
-2.983175	; fgets
-2.381115	; float
-1.491813	; for	0
-2.983175	; fread
-2.983175	; free
-2.284205	; g	-0.3822881
-2.983175	; h
-2.028933	; i	-0.2650324
-1.869232	; if	0.436285
-2.080085	; int	-0.2096998
-2.138077	; j	-0.0669468
-1.903994	; k	-0.4731909
-2.381115	; l	-0.5333442
-2.381115	; long	-0.1684044
-2.205024	; m	-0.2263964
-2.682145	; main	0.7781513
-2.983175	; mvaddstr
-2.983175	; mvinsch
-1.941782	; n	-0.4941383
-1.941782	; o	-0.860555
-2.284205	; p	-0.1694607
-2.983175	; putchar
-2.682145	; q	-0.4247332
-2.205024	; r	-0.3521825
-2.983175	; refresh
-2.080085	; return	-0.1249387
-2.381115	; s	-0.4586379
-2.983175	; struct
-2.205024	; t	-0.20412
-2.983175	; typedef
-1.941782	; u	-0.7739713
-2.983175	; union
-2.381115	; v
-2.983175	; va_end
-2.983175	; va_start
-2.506054	; void	-0.3744589
-1.869232	; w	-0.5055432
-2.381115	; while	0
-2.205024	; x	-0.6934375
-2.205024	; xor	-0.7829501
-2.284205	; y	-0.6549122
-1.704422	; z	-0.5236677
-2.682145	; {
-2.983175	; |
-1.080085	; }	-0.1025294
0	;b' %
-1.473487	< %
-2.075547	< (
-2.075547	< *
-2.075547	< /
-0.9963657	< 0	-0.9205191
-2.075547	< 11
-2.075547	< 127
-2.075547	< 13
-1.774517	< 14	0
-2.075547	< 16
-1.774517	< 18
-1.473487	< 2	-0.5192747
-1.774517	< 20	-0.3521825
-1.598426	< 3
-2.075547	< 30
-2.075547	< 32
-2.075547	< 4
-1.774517	< 5
-2.075547	< 5200
-2.075547	< 57
-1.598426	< 6
-1.774517	< 60	-0.05115253
-2.075547	< 61
-1.774517	< 62
-2.075547	< 7
-2.075547	< 74
-2.075547	< 75
-2.075547	< 77
-1.774517	< 79
-2.075547	< 80
-2.075547	< 82
-2.075547	< 91
-2.075547	< 92
-2.075547	< :
-1.376577	< </s>
-1.774517	< A	-0.3369426
-2.075547	< B
-2.075547	< L
-2.075547	< M
-2.075547	< O
-2.075547	< Q
-2.075547	< SPEED
-2.075547	< U
-2.075547	< W
-1.774517	< _	-0.4367335
-1.598426	< a	-0.4457128
-2.075547	< abs
-2.075547	< asn
-1.598426	< b
-2.075547	< b4
-1.774517	< d
-2.075547	< f
-2.075547	< h
-1.473487	< i
-2.075547	< j
-2.075547	< kP8
-2.075547	< l
-1.774517	< m
-1.598426	< n
-1.297396	< not	-0.6128908
-2.075547	< p
-2.075547	< script
-1.473487	< v
-1.774517	< x
-2.075547	< y
-0.9542425	<< (
-1.176091	<< 1	-0.379023
-1.653213	<< 14
-1.653213	<< 15
-1.352183	<< 18
-1.653213	<< 23
-1.653213	<< 24
-1.653213	<< 30
-1.176091	<< 32	-0.3843672
-1.176091	<< 4	-0.3205836
-1.653213	<< 40
-1.653213	<< 5
-1.352183	<< 56	0
-1.352183	<< 6	-0.443263
-1.653213	<< 60
-1.653213	<< 7
-0.8081145	<< 8	-0.4027389
-1.653213	<< </s>
-1.653213	<< Q_
-1.653213	<< a
-1.653213	<< i
-1.176091	<< l	-0.455402
-1.653213	<< n
-1.653213	<< unk
-0.845098	<= 24
-0.845098	<= L
-0.845098	<= Q
-0.845098	<= k
-0.845098	<= m
-0.845098	<= optind
-0.845098	<= q
0	<P~6" </s>
-2.703721	<s> !
-3.004751	<s> !=
-2.703721	<s> "
-3.004751	<s> "!:E%;!ea!!!WqE0z!f/y}!%!!Qi6!uzt!n}?]!bl!ak!SetR<"
-3.004751	<s> "!pv!;!Hm%Ro4"
-3.004751	<s> "%d
-3.004751	<s> "%f,%f,"
-3.004751	<s> "*_[512],**p=_,**d,b,q;for(b=0;b"
-3.004751	<s> "*p=#b,P[9999],*d=P,*e[]="
-3.004751	<s> "/"
-3.004751	<s> "258EAFA5-"
-3.004751	<s> "::::::::::::?_::::\"::.::::@:::'::-::::::::;!:):::::,:::::"
-3.004751	<s> ";;"
-3.004751	<s> ";Gam"
-3.004751	<s> ";GlockQ18"
-3.004751	<s> ";^Q<d|8=o;]Q<dj8<Pk8<c]'?;QQdi8?P'Q)d8<9`8?c;Qdh8=P']Q<`c8>PQ9_8"
-3.004751	<s> "<o_Q<o_QBdo`QQ';`Q=9`]8=bobQ_o_Q<o]8=';bQC(88cQ`bcgQ>oP']8<;cQ>98)^Q?''oc`Q>"
-3.004751	<s> "=(p-_+1)*9%512]=(O*)p;"
-3.004751	<s> ">b;og8=''`Q<`b8?'QQ9_8?c;dPe8dQa8<P]Q<``8=;'f8>QQ`]8?ocQQ_8=''_Q`8aQ"
-3.004751	<s> "?guhljL!^P%
-3.004751	<s> "CYOUQWIN!]Q=;of8BQQ)88bc]QA98P'Qo]8>oQQ_8CP;QQ98b`_8@P8(Q`]'^Q=`']QB)88"
-3.004751	<s> "Zj$x!~V!n&g8!cK!
-3.004751	<s> "bQQ]`8J;QQ`88bc99bd(`8iQ@''QQo^8E'`8c;QQ'Q``8?QQ`'kQ<o]8B9PQQ`';_Q<`_8<cbQ"
-3.004751	<s> "e.6!r!%l6G!n~^<i=%pEwL%P!'<!FQt%u
-3.004751	<s> "e:|
-3.004751	<s> "etu"
-3.004751	<s> "med);"
-3.004751	<s> "oc']Q]8<;cQ>`8bbQA``QQ''`Q?88P;dQ=`)nQ?*/;;"
-3.004751	<s> "oid
-2.2266	<s> %
-2.703721	<s> &
-3.004751	<s> '7M{N^kh
-3.004751	<s> 'c'
-1.513389	<s> (	-0.03073166
-1.606811	<s> )	-0.153454
-2.305781	<s> *
-2.703721	<s> +
-2.004751	<s> ++	-0.2770297
-2.703721	<s> +=
-1.682532	<s> ,	-0.05241834
-2.050509	<s> -	-0.09519004
-2.402691	<s> --
-3.004751	<s> -=
-2.52763	<s> .
-2.52763	<s> /
-2.305781	<s> 0	-0.2804253
-3.004751	<s> 0xffff
-2.52763	<s> 1
-3.004751	<s> 10
-3.004751	<s> 1152
-3.004751	<s> 128
-3.004751	<s> 15
-3.004751	<s> 16
-3.004751	<s> 16711935
-2.402691	<s> 2	-0.1527431
-3.004751	<s> 25
-3.004751	<s> 333
-2.703721	<s> 4
-3.004751	<s> 45
-3.004751	<s> 5
-3.004751	<s> 6
-3.004751	<s> 63504
-3.004751	<s> 64
-3.004751	<s> 65307
-2.402691	<s> 7
-2.52763	<s> 8
-3.004751	<s> 81
-3.004751	<s> 92
-3.004751	<s> 96
-2.402691	<s> :	-0.2333867
-1.92557	<s> ;	-0.128927
-2.703721	<s> <<
-2.004751	<s> =
-2.703721	<s> >
-2.402691	<s> >>
-3.004751	<s> ?
-2.305781	<s> A	-0.139662
-3.004751	<s> Alan
-3.004751	<s> B
-2.52763	<s> C
-3.004751	<s> COLS
-2.703721	<s> D	-0.3869447
-2.101661	<s> E	-0.4011452
-2.52763	<s> F	-0.4024876
-2.52763	<s> FILE	0
-3.004751	<s> G
-2.2266	<s> H	-0.7269987
-3.004751	<s> I
-3.004751	<s> J
-2.2266	<s> K	-0.2552725
-2.2266	<s> L
-2.159653	<s> M	-0.1734021
-3.004751	<s> MkQN
-2.52763	<s> N	-0.30103
-2.703721	<s> O
-3.004751	<s> O1
-3.004751	<s> O2
-3.004751	<s> O7
-3.004751	<s> O8
-3.004751	<s> O_
-3.004751	<s> On
-2.402691	<s> P	-0.3332147
-2.402691	<s> Q	-0.2662679
-3.004751	<s> Q1
-3.004751	<s> Q2
-3.004751	<s> Q3
-3.004751	<s> QO
-2.52763	<s> R
-3.004751	<s> S
-3.004751	<s> SDL_PollEvent
-3.004751	<s> SDL_Surface
-2.2266	<s> T
-2.402691	<s> U	-0.1829307
-3.004751	<s> Upgrade
-2.703721	<s> V	-0.3424227
-2.52763	<s> W	-0.3303194
-2.52763	<s> X
-3.004751	<s> XPutImage
-1.92557	<s> Y	-0.6078895
-2.159653	<s> Z	-0.2514712
-2.52763	<s> [
-2.52763	<s> ]	-0.4268942
-2.101661	<s> _	-0.6993052
-3.004751	<s> _0
-2.703721	<s> __	0.1249388
-2.703721	<s> ____	0.8239088
-3.004751	<s> _f
-1.963359	<s> a	-0.2901641
-3.004751	<s> ageX
-2.703721	<s> ala
-2.402691	<s> and	-0.2747011
-2.52763	<s> asn	0.2108533
-2.050509	<s> b	-0.4147102
-3.004751	<s> bB
-3.004751	<s> bC
-3.004751	<s> be
-3.004751	<s> bl
-3.004751	<s> bn
-2.2266	<s> break	0.1962947
-3.004751	<s> bt
-2.703721	<s> bu
-3.004751	<s> by
-2.703721	<s> c
-3.004751	<s> c8
-3.004751	<s> case
-2.52763	<s> char	0.1091445
-2.050509	<s> const	-0.4247332
-1.858623	<s> d	-1.016813
-3.004751	<s> default
-2.402691	<s> do	0
-3.004751	<s> double
-1.703721	<s> e	-0.5126595
-1.542353	<s> efine
-2.703721	<s> else	-0.3679768
-3.004751	<s> er
-2.402691	<s> err	0
-3.004751	<s> errx
-2.703721	<s> exit	0
-2.52763	<s> f
-1.703721	<s> for	-0.05504751
-3.004751	<s> fputc
-2.305781	<s> free	0
-2.703721	<s> fseek	0
-3.004751	<s> fw
-1.589778	<s> g	-1.248386
-2.402691	<s> gly	0
-2.004751	<s> h	-0.1527678
-1.606811	<s> i	-0.9586073
-1.391967	<s> if	-0.07302094
-1.682532	<s> int	-0.1194586
-2.305781	<s> j	-0.6642079
-2.402691	<s> k
-1.963359	<s> l	-0.2481528
-3.004751	<s> lf
-2.52763	<s> long
-2.52763	<s> lys
-2.52763	<s> m
-3.004751	<s> mR8
-2.402691	<s> main	0.5563025
-2.52763	<s> met	-0.3679768
-3.004751	<s> mva
-2.402691	<s> n
-2.703721	<s> ndif	0
-3.004751	<s> new
-2.050509	<s> not	-0.7119349
-1.725998	<s> o	-0.8792372
-3.004751	<s> oM
-3.004751	<s> ocket
-3.004751	<s> on
-2.703721	<s> op	-0.30103
-3.004751	<s> open
-3.004751	<s> optind
-2.2266	<s> p	-0.3777366
-2.703721	<s> phe	0
-2.2266	<s> printf	0
-3.004751	<s> pt
-2.703721	<s> putchar	0
-2.703721	<s> puts	0.3679768
-2.52763	<s> q
-2.402691	<s> r
-3.004751	<s> rQ
-3.004751	<s> rea
-1.92557	<s> return	-0.04575749
-2.703721	<s> rewind	0
-3.004751	<s> rror
-1.92557	<s> s	-0.8640658
-2.402691	<s> sec	-0.3467875
-3.004751	<s> signal
-3.004751	<s> sin
-2.305781	<s> static	0.07918125
-3.004751	<s> stdin
-3.004751	<s> switch
-2.305781	<s> t	-0.5713912
-3.004751	<s> tf
-2.305781	<s> thr	-0.09691003
-3.004751	<s> tr
-3.004751	<s> type
-2.004751	<s> typedef	-0.01099539
-2.703721	<s> tyr	-0.2552725
-2.159653	<s> u	-0.05939364
-2.159653	<s> unsigned	-0.06694677
-3.004751	<s> v
-2.703721	<s> val
-2.305781	<s> void	-0.3233064
-3.004751	<s> volatile
-2.004751	<s> w	-0.3372422
-1.92557	<s> while	0
-2.703721	<s> x
-1.92557	<s> y	-0.3538823
-2.2266	<s> z	-0.7279847
-1.82866	<s> {	-0.676797
-1.085673	<s> }	-0.5189493
-2.517855	= !
-2.818885	= "
-2.818885	= "<;iQ=/*do<;dQ=ook8?boc;aQ=odr8>oc;_Q<ox8>oc"
-2.818885	= "\n\n\n"
-2.216825	= &	-0.6800022
-2.517855	= '128'
-2.818885	= 'width:256px;height:256px'
-1.175433	= (	-0.2926345
-2.517855	= )	-0.4764783
-1.614765	= *	-0.8442985
-2.341764	= ,	-0.47636
-1.517855	= -	-0.3170387
-2.818885	= --
-2.818885	= .1
-0.9496537	= 0	-1.132821
-2.818885	= 040
-2.818885	= 0u
-2.818885	= 0x1
-2.818885	= 0x820008202625a0
-1.457158	= 1	-0.811084
-2.818885	= 1.159922023e9
-2.119915	= 10	-0.1426675
-2.818885	= 1024
-2.818885	= 112
-2.818885	= 12
-2.818885	= 12359778
-2.818885	= 13000
-2.517855	= 14695981039346656037ULL	0
-2.818885	= 16
-2.818885	= 17
-2.818885	= 196
-2.818885	= 1LL
-2.341764	= 2	-0.4277596
-2.818885	= 2.271681097355226e15
-2.818885	= 234
-2.818885	= 250
-2.341764	= 255
-2.818885	= 256
-2.818885	= 26
-2.040734	= 3	-0.6934375
-2.818885	= 3.135045272e9
-2.818885	= 30
-2.341764	= 32
-2.818885	= 32768
-2.818885	= 333
-2.818885	= 34
-2.818885	= 37
-2.119915	= 4	-0.6966782
-2.818885	= 4.023233417e9
-2.818885	= 4.294967296e9
-2.818885	= 4.503599627370496e15
-2.818885	= 40
-2.818885	= 41088
-2.818885	= 48
-2.818885	= 480
-2.517855	= 5	-0.4522977
-2.818885	= 50
-2.818885	= 5000
-2.818885	= 512
-2.216825	= 6	-0.2671717
-2.818885	= 64
-2.818885	= 6990400
-2.040734	= 7	-0.1199753
-2.341764	= 8	-0.3575113
-2.818885	= 8.44396048e8
-2.818885	= 80
-2.818885	= 9
-1.672757	= </s>
-2.517855	= A
-2.216825	= B	-0.1983676
-2.341764	= C
-2.818885	= COLS
-2.517855	= D	-0.3521825
-2.818885	= E
-2.216825	= F	-0.2263964
-2.216825	= H
-2.119915	= I	-0.3699113
-2.818885	= J
-2.040734	= K	-0.5415792
-2.216825	= L	-0.2578048
-2.818885	= LINES
-2.119915	= N	-0.2218488
-1.864643	= O	-0.421366
-2.818885	= O0
-2.818885	= O5
-2.341764	= OO	-0.39794
-2.517855	= O_	0.4771213
-2.818885	= O_o
-2.818885	= P
-1.818885	= Q	-0.5528419
-2.818885	= Q7
-2.818885	= Q8
-2.341764	= Q_	0
-2.341764	= R	-0.4357286
-2.818885	= SDL_CreateRGBSurface
-2.818885	= SDL_SetVideoMode
-2.517855	= T
-2.818885	= TIMESTEP
-2.818885	= U
-2.341764	= W
-2.818885	= X
-2.818885	= XCreateImage
-2.818885	= XCreateSimpleWindow
-2.818885	= XLookupKeysym
-2.818885	= XOpenDisplay
-2.818885	= Y
-2.517855	= Z	-0.4227636
-1.864643	= _	-0.8662531
-2.818885	= _0
-2.517855	= _Q
-2.341764	= __	-0.4648868
-2.818885	= __TIME__
-2.119915	= a	-0.173841
-1.915795	= b	-0.3555887
-2.818885	= b5g
-2.517855	= bA
-2.818885	= bB
-2.818885	= bC
-2.517855	= bE	-0.07918125
-2.818885	= ba
-2.818885	= bb
-2.818885	= bf
-2.818885	= bl
-2.818885	= bm
-1.973787	= bp	0
-2.818885	= bs
-2.818885	= buf
-2.818885	= bx
-2.818885	= by
-2.517855	= bz
-1.973787	= c
-2.341764	= calloc	0
-2.818885	= cos
-1.915795	= d	-0.3467875
-1.672757	= e	-0.6007957
-2.517855	= exp	0
-1.777493	= f	-0.6362741
-2.818885	= fgetc
-2.818885	= fopen
-2.517855	= fread	0
-2.818885	= function
-2.341764	= g	-0.5618188
-2.818885	= getch
-2.341764	= getchar	0
-2.818885	= getopt
-2.216825	= gln	-0.39794
-1.864643	= h	-0.5688916
-2.517855	= his
-1.915795	= i	-0.251417
-2.517855	= j
-2.216825	= k
-2.341764	= l
-2.818885	= lv
-2.040734	= m	-0.1444923
-2.818885	= main
-2.517855	= malloc	0
-1.973787	= n	-0.2031665
-2.818885	= new
-2.818885	= nk
-2.341764	= not	-0.3698528
-1.777493	= o	-0.3881801
-2.818885	= op
-2.119915	= p	-0.3285186
-2.517855	= pow	0
-2.818885	= pyl
-2.216825	= q	-0.5713912
-2.216825	= r
-2.818885	= rand
-2.517855	= realloc	0
-2.818885	= round
-2.517855	= s
-2.341764	= sizeof	0.2108533
-2.818885	= sqrt
-2.818885	= strrchr
-2.216825	= t	-0.2766706
-2.818885	= tmpfile
-1.915795	= trp	-0.3802113
-1.864643	= u	-0.2934769
-2.517855	= unk	-0.39794
-1.973787	= v	-0.1775365
-2.818885	= w
-2.818885	= window
-1.818885	= x	-0.2607354
-2.818885	= xle
-1.864643	= y	-0.3111303
-2.341764	= z	-0.4357286
-1.864643	= {
-1.290035	== '\n'	0
-1.290035	== *
-1.591065	== -
-1.591065	== 0
-1.591065	== 1
-1.591065	== 10
-1.591065	== 2
-1.591065	== 27
-1.591065	== 275
-1.591065	== 276
-1.290035	== 3
-1.591065	== 32
-1.591065	== 35
-1.591065	== 4
-1.290035	== 5	-0.2632414
-1.591065	== 6
-1.591065	== 8
-1.591065	== 81
-1.591065	== 9
-1.591065	== B
-1.290035	== D
-1.290035	== NULL	0
-1.591065	== arg
-1.290035	== b	-0.4561029
-1.591065	== cys
-1.591065	== gln
-1.591065	== h
-1.290035	== n
-1.591065	== not
-1.591065	== r
-1.591065	== u
-1.278754	> (
-1.880814	> ->
-0.9777236	> 0	-0.2779647
-1.880814	> 1
-1.880814	> 12
-1.880814	> 1600
-1.880814	> 197
-1.181844	> 2	-0.4612827
-1.880814	> 20
-1.880814	> 255
-1.880814	> 3
-1.880814	> 30
-1.880814	> 31
-1.880814	> 32
-1.579784	> 4
-1.278754	> 5	-0.2632414
-1.880814	> 55
-1.403692	> 6
-1.880814	> 64
-1.579784	> 7
-1.880814	> 76
-1.579784	> 9
-1.880814	> 92
-1.880814	> ;
-1.880814	> <
-1.579784	> </s>
-1.880814	> B
-1.880814	> BUFSIZ
-1.880814	> F
-1.880814	> H
-1.880814	> I
-1.880814	> Q0
-1.579784	> QQ	-0.30103
-1.278754	> _	-0.2606422
-1.880814	> a
-1.880814	> bs
-1.880814	> char
-1.880814	> d_C
-1.880814	> e
-1.880814	> glu
-1.880814	> h
-1.579784	> i
-1.880814	> l
-1.880814	> lrand48
-1.880814	> q
-1.880814	> t
-1.880814	> v
-1.880814	> x
-0.7781513	>= (
-0.4771213	>= 0
-0.7781513	>= 2
-0.7781513	>= LINES
-0.7781513	>= Q
-1.146128	>> (
-1.623249	>> ++
-1.623249	>> 12
-1.322219	>> 14	0
-1.146128	>> 2	-0.3288344
-1.623249	>> 20
-1.623249	>> 28
-1.623249	>> 3
-1.322219	>> 31	0.1249388
-1.322219	>> 32	-0.4423591
-1.623249	>> 38
-1.322219	>> 4
-1.146128	>> 40	0.1760913
-1.623249	>> 5
-1.623249	>> 56
-1.322219	>> 6
-0.6232493	>> 8	-0.4717261
-1.623249	>> </s>
-1.623249	>> lys
-1.623249	>> n
-1.322219	>> unk	-0.1760913
-0.30103	>>= 4
-0.30103	>>= 7
-1.934498	? !
-1.934498	? ""
-1.934498	? ";"
-1.934498	? "{;}"
-1.934498	? &
-1.934498	? '
-1.934498	? '|'
-1.235528	? (
-1.332438	? *
-1.633469	? ++
-1.934498	? -
-0.9344984	? 0	-1.006318
-1.457377	? 1	-0.5900289
-1.934498	? 124
-1.934498	? 1l
-1.934498	? 255
-1.934498	? 256
-1.633469	? 3
-1.633469	? 8	-0.4607309
-1.934498	? 9858122
-1.934498	? </s>
-1.934498	? F
-1.934498	? FILENAME_MAX
-1.934498	? H
-1.934498	? H_1
-1.633469	? I	-0.4586379
-1.633469	? L	-0.4389169
-1.633469	? O
-1.934498	? RGB
-1.633469	? T	-0.3369426
-1.934498	? a
-1.934498	? d
-1.934498	? e
-1.633469	? g
-1.457377	? glu	-0.4471581
-1.457377	? i	-0.4721578
-1.457377	? k
-1.457377	? n
-1.633469	? o	-0.394147
-1.457377	? p	-0.3777366
-1.934498	? putchar
-1.934498	? q
-1.934498	? s
-1.934498	? t
-1.633469	? u
-1.934498	? v
-1.934498	? x
-1.934498	? ~
0	?" "8!@dP,!!o+fb"
-0.860338	A )
-1.462398	A +
-1.462398	A +=
-0.763428	A ,
-0.559308	A ->	-0.772399
-1.161368	A ;	-0.2350978
-0.763428	A =
-1.462398	A J
-1.462398	A L
-1.462398	A R
0	Acce </s>
0	Alan Turing
-0.5797836	B &	-0.07404713
-1.579784	B &&
-0.8808136	B )	-0.5489053
-1.278754	B ,
-0.6766936	B ->	-0.772399
-1.278754	B ;	-0.2350978
-1.102662	B =
-1.579784	B J
-1.579784	B L
-0.8808136	B R	-0.303841
0	BUFSIZ )
-1.267172	C &
-0.8692317	C )	-0.2889791
-1.09108	C *	-0.4733773
-1.267172	C +
-1.568202	C +=
-0.9661418	C ,
-1.267172	C -
-1.267172	C /	-0.4362163
-1.568202	C :
-1.267172	C ;
-1.568202	C <
-1.267172	C =
-1.267172	C ==
-0.9661418	C >
-1.568202	C J
-1.568202	C R
-1.568202	C [
-1.568202	C ^
-0.30103	COLS -
-0.30103	COLS /
-1.20412	D %
-0.90309	D &&
-0.7269987	D (
-1.20412	D )
-1.20412	D ,
-1.20412	D -=
-1.20412	D =
-1.20412	D ?
-1.20412	D L
-0.60206	D [	-0.2929121
0	DefaultGC (
0	DefaultVisual (
0	Display *
-1.431364	E (
-1.431364	E )
-0.4313638	E *	-0.6710655
-1.431364	E *=
-1.431364	E +
-0.7323937	E ,	-0.219561
-0.7323937	E ;	-0.1559165
-0.9542425	E =
0	E0 (
0	E3 (	-0.4677452
-0.3424227	EOF )	-0.1660539
-1.041393	EOF +
-0.7403627	EOF ;
-0.5642715	EOF ]	-0.5518329
0	ETIANMSURWDKGOHVF:L:PJBXCYZQ::54:3:::2&:+::::16=/:::(:7:::8:90" </s>
0	EX (
-1.278754	F %
-1.278754	F &
-0.8016323	F (	-0.4546879
-1.579784	F )
-1.102662	F *	-0.4309494
-1.579784	F +
-0.8016323	F ,	-0.1649203
-0.8808136	F -	-0.620132
-1.579784	F /
-1.579784	F :
-1.579784	F ;
-1.278754	F <
-0.8016323	F =
-1.579784	F >>
0	F0 (	-0.4616091
0	F1 (	-0.4616091
0	F2 (
0	FILE *	-0.3875655
0	FILENAME_MAX :
0	FV (
-0.30103	F_ )
-0.30103	F_ ,
-0.1845244	G (	-0.2593188
-1.414973	G )
-1.414973	G ,
-0.5698753	G [
-1.431364	H %
-1.431364	H &
-1.732394	H (
-1.431364	H )
-0.9542425	H *	-0.1618819
-1.732394	H +
-1.732394	H ++
-1.130334	H ,
-1.431364	H -
-1.732394	H --
-1.255273	H /
-0.6910011	H ;	-0.7816732
-1.732394	H <
-1.732394	H </s>
-1.732394	H <<
-0.7781513	H =
-1.732394	H >>
-1.431364	H ?
-1.732394	H R
-1.431364	H ]	-0.3738656
0	HP (
0	HY (
0	H_1 )
-1.681241	I &
-0.7269987	I (	-0.2516132
-1.20412	I )	-0.4213264
-1.681241	I *
-1.20412	I +
-1.681241	I ++
-1.380211	I ,
-1.380211	I -	-0.4719408
-1.380211	I :
-0.90309	I ;	0.06593223
-1.681241	I <
-0.6398485	I =
-1.079181	I ==
-1.681241	I ?
-1.681241	I [
-0.39794	J (	-0.2997029
-1.30103	J ,
-1	J </s>
-1	J =
-0.60206	J [
-1	J }
-1.39794	K !=	-0.4313638
-1.69897	K %
-1	K (	-0.6775819
-0.9208187	K )	-0.3320199
-1.69897	K *
-1.69897	K ++
-1.69897	K +=
-1.221849	K ,
-0.4685211	K ->	-0.5446118
-1.09691	K ;	-0.0590065
-1.69897	K <
-1.39794	K </s>
-0.9208187	K =	-0.172119
0	KrgR'8@c]!%-q9V.3fa[E8X%dY'w!#H <P~6"
-1.977724	L %=
-1.500602	L (
-1.023481	L )	-0.1413292
-1.977724	L *
-1.676694	L +
-1.977724	L ++
-0.2701534	L ,	-0.6585042
-1.074634	L -	-0.1334379
-1.977724	L <
-1.375664	L =
-1.676694	L ==
-1.977724	L >
-1.676694	L >>
-1.977724	L >>=
-1.977724	L ?
-1.977724	L [
-1.199572	L ]	-0.7186745
-0.4771213	LINES -
-0.4771213	LINES ;
-0.4771213	LINES ||
0	LP (
0	L_tmpnam )
-1.431364	M &&
-0.9542425	M (	-0.4616091
-0.9542425	M )
-1.431364	M *=
-1.431364	M +=
-0.8293038	M ,
-1.431364	M -=
-1.431364	M .
-1.130334	M ;
-1.431364	M <
-1.130334	M </s>
-0.8293038	M =
-1.431364	M ==
-1.431364	M >
-1.431364	M qN
0	M8q;k' N_7vN
0	MJ 24
0	MK6lM L
0	McPc %
0	MkQN 77
-1.623249	N %
-1.623249	N &
-0.4771213	N (	-0.08922318
-1.021189	N )
-1.623249	N *
-0.6690068	N ,	-0.9837266
-1.623249	N ;
-1.623249	N <
-1.623249	N </s>
-1.146128	N =
-1.623249	N McPc
-1.322219	N [
-1.322219	N ]
-1.623249	N oNS
0	N4 RlMG
0	N8b %
0	N9 m
0	N9b %
0	NULL )	-0.5462652
0	NUO <
0	N_1' 5
0	N_7vN 'nSM8
-1.618048	O %
-1.919078	O &
-1.919078	O &&
-0.9190781	O (	-0.3885639
-0.8776854	O )	-0.2548082
-1.317018	O +
-1.441957	O ++
-1.317018	O ,
-1.441957	O --	-0.3802113
-1.618048	O ->
-1.919078	O 8
-1.919078	O :
-1.919078	O ;
-1.441957	O <	-0.4660323
-1.618048	O </s>
-0.5388669	O =	-0.3985986
-1.618048	O ?
-1.919078	O Q
-1.919078	O ^
-1.919078	O ckQaOrON
-1.919078	O j
-1.919078	O jQ
-1.919078	O sM
-1.919078	O {
-1.919078	O ~
-0.4149733	O0 +=	-0.3809067
-1.113943	O0 ,
-0.5118834	O0 -	-0.2975832
-0.6368221	O0 =
-0.845098	O1 )
-0.845098	O1 *
-0.544068	O1 ,
-0.845098	O1 =
-0.845098	O1 >
-0.845098	O1 ]
-0.845098	O2 *
-0.845098	O2 ,
-0.845098	O2 -
-0.845098	O2 /
-0.544068	O2 =
-0.845098	O2 >
-0.4771213	O3 )
-0.7781513	O3 -
-0.7781513	O3 /
-0.7781513	O3 </s>
-0.7781513	O3 =
0	O3NF (
-0.39794	O4 *
-0.69897	O4 +
-0.69897	O4 =
-0.69897	O4 |
-0.4771213	O5 )
-0.7781513	O5 +
-0.4771213	O5 ,
-0.7781513	O5 [
-0.60206	O6 +
-0.30103	O6 ,
-0.60206	O6 =
-0.60206	O7 )
-0.60206	O7 ,
-0.60206	O7 =
-0.60206	O7 Q
-0.4771213	O8 *
-0.4771213	O8 +
-0.4771213	O8 =
-0.1760913	O9 --
-0.4771213	O9 =
0	OMQ ]
0	OMaMch &
0	OMp RmPQ
0	ON8r %
-0.7781513	OO )
-1.079181	OO +=
-0.7781513	OO ,
-0.7781513	OO -
-1.079181	OO <
-0.7781513	OO =
-1.079181	OO ==
-1.079181	OO >
0	O^ln ;b'
-0.9542425	O_ &
-0.05115252	O_ (	-0.4203003
-0.1249387	O_o )
-0.60206	O_o ,
0	OaaD %
0	Ok </s>
0	On %
0	OsR _
-0.3357921	P (	-0.1677295
-0.8129134	P )
-1.414973	P +=
-0.9378521	P ,
-1.113943	P ;
-1.113943	P =
-1.414973	P >=
-1.414973	P [
-1.959041	Q &
-1.959041	Q &&
-0.6802878	Q (	-0.3024264
-0.8129134	Q )	-0.2321086
-1.48192	Q *	-0.4667467
-1.48192	Q ,
-1.959041	Q -
-1.48192	Q ;	-0.2350978
-1.658011	Q </s>
-1.959041	Q <=
-1.18089	Q =
-1.959041	Q ?
-1.959041	Q O
-1.959041	Q OO
-1.959041	Q Ok
-1.959041	Q Q4
-1.113943	Q [	-0.8850259
-0.7549214	Q ]	-0.04416453
-1.18089	Q ^
-1.959041	Q __
-1.658011	Q write	0
-1.079181	Q0 &&
-0.7781513	Q0 )
-0.60206	Q0 +
-0.7781513	Q0 +=
-1.079181	Q0 ,
-0.60206	Q0 =	-0.4253917
-0.7781513	Q1 )
-0.4771213	Q1 ,
-0.30103	Q1 =
-0.845098	Q2 &&
-0.845098	Q2 *
-0.544068	Q2 +	-0.4286088
-0.845098	Q2 ,
-0.544068	Q2 =
-0.7781513	Q3 %
-0.4771213	Q3 ,	-0.4759789
-0.4771213	Q3 =
-0.7781513	Q3 >>
-0.60206	Q4 &&
-0.60206	Q4 ,
-0.60206	Q4 --
-0.60206	Q4 =
-0.60206	Q5 +
-0.30103	Q5 ,
-0.60206	Q5 =
-0.60206	Q6 +=
-0.60206	Q6 ,
-0.60206	Q6 </s>
-0.60206	Q6 =
-0.60206	Q7 )
-0.60206	Q7 ;
-0.60206	Q7 =
-0.60206	Q7 O
-0.4771213	Q8 ,
-0.4771213	Q8 ;
-0.4771213	Q8 =
-0.30103	Q9 ,
-0.30103	Q9 =
0	QH (
0	QL (
-0.7781513	QO &&
-0.60206	QO *
-1.079181	QO +
-0.7781513	QO ,
-0.4771213	QO =
-0.4771213	QQ )
-0.9542425	QQ *
-0.4771213	QQ +	-0.412522
-0.9542425	QQ ,
-0.9542425	QQ =
0	QR (	-0.4616091
0	QS (	-0.4616091
0	Q_ (	-0.1750963
0	Qr h
-1.041393	R %	-0.0995519
-1.187521	R (
-0.2237329	R )	-0.6073282
-1.886491	R +
-1.886491	R ++
-1.886491	R +=
-1.108339	R ,	-0.3659074
-1.886491	R ;
-1.886491	R <
-1.187521	R </s>
-1.886491	R =
-1.886491	R N
-1.886491	R ]
0	R8 /
0	RAFT )
0	RGB )
0	RI4 4
0	RM ;
0	RMPmSk U
0	RP (
0	RlMG /
0	RmM </s>
0	RmPQ O
0	RootWindow (
-0.90309	S (
-0.90309	S +
-0.30103	S ,
-0.90309	S =
-0.90309	S {
0	SDL_AudioSpec bu
0	SDL_BlitSurface (
0	SDL_CreateRGBSurface (
0	SDL_Delay (
0	SDL_Event bE
0	SDL_FillRect (
0	SDL_Flip (
0	SDL_Init (
0	SDL_LoadWAV (
0	SDL_MixAudio (
0	SDL_OpenAudio (
0	SDL_PauseAudio (
0	SDL_PollEvent (
0	SDL_Rect </s>
0	SDL_SetVideoMode (
0	SDL_Surface *
0	SEEK_SET )	-0.3681603
0	SNH %
0	SOPm R8
0	SPEED *
0	Sec -
0	SlM90 %
0	So long
-0.9852768	T (
-1.161368	T ;
-1.161368	T </s>
-1.462398	T I
-1.462398	T Q
-1.462398	T R
-0.559308	T [	-0.1910575
-1.462398	T _
-0.860338	T d	-0.6506653
-1.462398	T f
-0.860338	T l	-0.6543879
-1.462398	T mR
0	TIMESTEP ,
0	TIOCGWINSZ ,
0	TMP_MAX )
0	TmS </s>
0	TmSt 6
0	Turing (
0	Type =
-1.322219	U (
-1.021189	U )
-1.322219	U *=
-1.322219	U +
-1.322219	U +=
-0.544068	U ,
-1.322219	U 7
-1.021189	U ;
-0.6232493	U =
-1.322219	U L
0	UV_DROP :
0	Uint8Array (
0	Upgrade :
-1.176091	V )
-0.4771213	V *	-0.6475844
-0.69897	V ,
-1.176091	V ->
-1.176091	V ;
-0.5740313	V =
-0.3324385	W (	-0.2434379
-1.031408	W )	-0.2731726
-1.332438	W *	-0.452188
-1.633469	W +
-1.031408	W ,	-0.5974724
-1.156347	W /
-1.031408	W ;
-0.9344984	W [	-0.3914579
-0.30103	WebSocket (
-0.30103	WebSocket -
0	Window u
-1.724276	X !=
-1.724276	X &
-1.423246	X (
-0.5781478	X )	-0.1550305
-1.423246	X *
-1.724276	X +
-0.6450946	X ,	-0.1058928
-1.724276	X -
-1.724276	X --
-1.724276	X /
-1.724276	X :
-1.423246	X ;
-1.724276	X <
-1.025306	X </s>
-1.247155	X =
-1.423246	X [
-1.724276	X ]
-1.724276	X h
-1.724276	X v
0	XCheckWindowEvent (
0	XCreateImage (
0	XCreateSimpleWindow </s>
0	XEvent M
0	XImage *
0	XLookupKeysym (
0	XMapWindow (
0	XOpenDisplay (
0	XPutImage (
0	XSelectInput (
-0.8692317	Y (	-0.6594615
-1.09108	Y )	-0.3681603
-1.09108	Y *
-1.568202	Y *=
-1.267172	Y +	-0.412522
-1.568202	Y +=
-1.09108	Y ,
-1.568202	Y -
-1.267172	Y ->
-0.7900504	Y ;	-0.6030746
-0.5682017	Y =	-0.0895996
-0.5314789	Z (	-0.2124727
-0.9294189	Z *=
-1.230449	Z +
-0.9294189	Z +=
-1.230449	Z ,
-1.230449	Z -
-1.230449	Z -=
-0.9294189	Z ;
-1.230449	Z =
-1.230449	Z ?
-1.732394	[ (
-2.431364	[ +
-1.352183	[ -	-0.1634011
-1.477121	[ 0	-0.9828169
-2.431364	[ 01
-1.109144	[ 1	-1.215104
-2.431364	[ 17
-1.528274	[ 2	-0.9048809
-2.431364	[ 204
-1.431364	[ 3	-0.9017135
-2.130334	[ 32	-0.4423591
-2.431364	[ 36
-1.389971	[ 4	-1.004548
-1.732394	[ 5	-0.6690068
-2.431364	[ 516
-2.431364	[ 5200
-1.954242	[ 6	-0.5563025
-2.431364	[ 65536
-2.130334	[ 7	-0.4057654
-1.954242	[ 8	-0.5686362
-2.431364	[ 80
-2.431364	[ 9
-2.130334	[ 97	0
-2.431364	[ 99
-2.431364	[ 9999
-1.732394	[ </s>
-2.431364	[ B
-2.130334	[ EOF	-0.3388186
-2.130334	[ H	-0.4607309
-1.528274	[ L	-0.3976351
-2.130334	[ O	-0.4556703
-2.431364	[ Q6
-2.130334	[ W	-0.4564367
-2.130334	[ X
-1.477121	[ ]	-0.7862279
-1.130334	[ _	-1.176091
-2.431364	[ _Q
-1.033424	[ __	-0.8129134
-2.431364	[ a
-2.431364	[ b
-2.431364	[ bi
-2.431364	[ c
-1.653213	[ d	-0.2894481
-2.431364	[ e
-1.732394	[ g	-0.6281628
-1.829304	[ h	-0.5824645
-1.528274	[ i	-0.8562343
-2.431364	[ j
-1.732394	[ k	-0.3799666
-2.431364	[ l
-2.130334	[ leu	-0.1760913
-2.130334	[ m	-0.4616091
-1.829304	[ n	-0.2933432
-2.130334	[ not
-2.431364	[ o
-1.829304	[ optind	-0.2218488
-2.431364	[ p
-1.829304	[ r	-0.2486419
-2.130334	[ t
-2.431364	[ tgANs
-2.431364	[ val
-2.130334	[ x
-1.088941	[ xor	-1.070243
-2.130334	[ y
0	[-d] file1
0	\"" "%s"
-1.989746	] !=	-0.4313638
-1.989746	] %
-1.989746	] &	-0.4696333
-2.466868	] &&
-2.466868	] '2O
-2.466868	] '_3a
-2.165838	] (
-0.9617177	] )	-0.4717776
-1.352924	] *	-0.4411926
-2.165838	] *=	-0.4573772
-1.425475	] +	-0.1275788
-1.688716	] ++	-0.2017787
-1.767898	] +=	-0.1732984
-0.9483537	] ,	-0.2449194
-1.62177	] -	-0.2378575
-2.466868	] --
-2.165838	] -=
-1.387686	] .	-1.037103
-1.989746	] /	-0.4672505
-2.466868	] 0
-2.466868	] 6
-1.989746	] :
-0.9617177	] ;	-0.2081235
-1.989746	] <	-0.4697601
-1.864808	] </s>
-2.466868	] <<
-0.6744759	] =	-0.5069458
-2.466868	] ==
-1.563778	] >	-0.2462912
-2.466868	] >=
-2.165838	] >>
-2.165838	] ?
-2.466868	] OsR
-2.466868	] [
-2.466868	] ]
-2.165838	] ^
-1.352924	] _	-1.067067
-2.466868	] _o
-2.165838	] g	-0.4693658
-2.466868	] h
-2.466868	] k
-2.466868	] k_
-2.466868	] l
-2.466868	] l_
-2.165838	] |
-2.466868	] |=
-2.466868	] ||
-2.466868	] }
-1.544068	^ %
-1.544068	^ 'h(Q]0h#
-1.243038	^ (
-1.544068	^ )
-1.544068	^ *
-1.544068	^ -
-1.544068	^ --
-1.544068	^ /
-1.544068	^ 024
-1.544068	^ 0xfc0
-1.544068	^ 1
-1.544068	^ 2
-1.544068	^ 20
-1.544068	^ 255
-1.544068	^ 3
-1.544068	^ 3920
-1.544068	^ 4
-1.243038	^ 6
-1.544068	^ I
-1.544068	^ OaaD
-1.544068	^ d
-1.544068	^ f
-1.544068	^ h
-1.243038	^ k
-1.066947	^ l
-1.544068	^ og
-1.066947	^ p	-0.5383909
-1.544068	^ ~
-0.60206	^= *
-0.60206	^= 20
-0.60206	^= _
-0.60206	^= k
-2.71433	_ %
-0.7366062	_ (	-0.9748988
-0.9219381	_ )	-1.08548
-2.71433	_ *
-2.71433	_ +
-2.71433	_ ++
-0.3660249	_ ,	-1.632073
-2.71433	_ -
-2.71433	_ /
-2.71433	_ 6
-2.71433	_ :
-2.4133	_ ;
-2.237209	_ <	-0.4622721
-1.71433	_ </s>
-2.11227	_ =	-0.2943892
-2.71433	_ >>
-2.4133	_ ?
-1.051572	_ [	-1.282547
-2.71433	_ ^=
-0.9900539	_ _	-1.508022
-2.71433	_ _8
-2.4133	_ __	0.1249388
-2.4133	_ f	-0.4626434
-2.71433	_ g
-2.71433	_ pQaM8m
-2.71433	_ {
0	_){putchar(_);}O" "\40main(){O"
-0.9542425	_0 &&
-0.9542425	_0 )
-0.6532125	_0 *
-0.9542425	_0 +=
-0.9542425	_0 ,
-0.9542425	_0 /
-0.6532125	_0 =	-0.4253917
0	_8 (
0	_KK3 +
-0.69897	_O %
-1	_O %=
-0.69897	_O )	-0.4657303
-1	_O +
-1	_O +=
-0.69897	_O =
-1	_O >
-0.5228788	_Q %	-0.4696972
-1	_Q )
-0.69897	_Q +=
-1	_Q /
-1	_Q </s>
-0.69897	_Q =
0	_Zadat57 <
-1.556303	__ &	-0.4581534
-1.857332	__ &&
-0.1249387	__ (	-1.662066
-1.556303	__ )
-1.857332	__ *
-1.857332	__ +
-1.556303	__ +=	-0.4285709
-1.857332	__ ,
-1.857332	__ ;
-1.556303	__ </s>
-1.857332	__ <<
-1.556303	__ =
-1.857332	__ >>
-1.857332	__ >>=
0	__LINE__ *
-0.30103	__STDC_VERSION__ &&
-0.30103	__STDC_VERSION__ >
-0.30103	__STDC__ )
-0.30103	__STDC__ </s>
0	__TIME__ ;
0	__VA_ARGS__ }
-0.1760913	___ (
-0.4771213	___ )
-0.02227639	____ (	-1.275446
-1.30103	____ </s>
-0.30103	_a %
-0.30103	_a </s>
-0.30103	_f :
-0.30103	_f ;
0	_h *
0	_o ptj9
0	_t <
0	_z (
-1.934498	a %
-1.457377	a &
-0.9344984	a (	-0.1455259
-1.332438	a )	-0.2521202
-1.934498	a *=
-1.457377	a +
-1.633469	a ++	-0.37787
-1.934498	a +=
-0.8931057	a ,	-0.2453859
-1.457377	a -	-0.4649358
-1.633469	a --
-1.156347	a ->	-0.6966782
-1.934498	a .
-1.934498	a /
-1.457377	a ;	-0.2350978
-1.457377	a <	-0.4660323
-1.633469	a </s>
-0.7584072	a =	-0.07698897
-1.934498	a ?
-0.980256	a [	-0.3357921
-1.457377	a ]
-1.934498	a {
0	a_ (
0	abs (	-0.4567759
0	ageX -
-0.544068	ala *	-0.4724363
-0.845098	ala ;
-0.845098	ala asn
-0.3679768	ala not	-0.4405275
-0.1890562	and )	-0.3701434
-1.230449	and *
-1.531479	and ;
-1.531479	and asp
-1.531479	and gln
-1.230449	and his	-0.2340832
-1.531479	and pyl
-1.531479	and sec
-1.531479	and tla
-1.531479	and tyr
-1.531479	and xle
-0.30103	ar )
-0.30103	ar ,
-0.09691001	arg )
-0.69897	arg =
-0.60206	argh )
-0.30103	argh ,
-0.60206	argh ;
-1.113943	asn ,
-0.07255067	asn .	-0.8047102
-1.113943	asn ;
-0.1760913	asp -	-0.4736745
-0.4771213	asp =
-0.60206	asx )
-0.60206	asx +
-0.60206	asx =
-0.60206	asx >
0	au )	-0.4751896
0	ay </s>
-1.258706	b !	-0.3109383
-2.103804	b %
-2.103804	b &
-1.802774	b &&
-1.501744	b (
-1.200714	b )	-0.6442695
-2.103804	b *
-1.802774	b *=
-2.103804	b ++
-1.626683	b ,
-1.802774	b --
-1.325652	b ->	-0.409221
-2.103804	b .
-0.9898604	b ;	-0.5645381
-1.626683	b <
-1.325652	b </s>
-1.802774	b <<	-0.4573772
-0.8733548	b =	-0.2163842
-2.103804	b >
-1.802774	b >>
-1.325652	b B	-0.7124724
-2.103804	b D
-1.325652	b I	-0.4393327
-2.103804	b O
-2.103804	b P
-2.103804	b W
-2.103804	b Z
-1.103804	b [	-0.966576
-2.103804	b ]
-1.802774	b ^
-1.501744	b bf	-0.3187588
-2.103804	b bg
-2.103804	b bt
-2.103804	b h
-2.103804	b j
-2.103804	b kg
-2.103804	b n
-2.103804	b o
-1.802774	b q
-2.103804	b u
0	b1g (
0	b4 </s>
0	b5g (
-0.69897	bA ,
-0.69897	bA ;
-0.69897	bA <<
-0.39794	bA =	-0.4758012
-0.60206	bB )
-0.60206	bB ;
-0.30103	bB =
-0.60206	bC *
-0.60206	bC ,
-0.60206	bC /
-0.60206	bC =
-0.4771213	bD *
-0.4771213	bD ,
-0.4771213	bD =
-0.69897	bE )
-0.2218488	bE .
-0.69897	bE ;
0	b\nq(%s)\n" </s>
0	ba (
-0.7781513	bb )
-0.7781513	bb +
-0.7781513	bb +=
-0.7781513	bb ;
-0.4771213	bb =
0	bc (
-0.1760913	bd (
-0.4771213	bd </s>
-0.90309	be )
-0.60206	be ,	-0.47636
-0.20412	be ;	-0.6889228
-0.60206	bf &&	-0.5753258
-0.4771213	bf )	-0.2452351
-0.4771213	bf ;	-0.2872708
-1.079181	bf =
-0.60206	bg &&
-0.60206	bg )
-0.60206	bg ;
-0.60206	bg =
-0.1249387	bh (	-0.4737959
-0.60206	bh </s>
0	bh' l
-0.30103	bi )
-0.30103	bi ]
0	binary "
0	bj (	-0.592684
-0.60206	bk &&
-0.30103	bk ,
-0.60206	bk ;
-0.1760913	bl (	-0.4376127
-0.4771213	bl }
-0.30103	bm =
-0.30103	bm ==
-0.30103	bn ,
-0.30103	bn =
-0.30103	bo )
-0.30103	bo =
0	bp (
-0.30103	bq (
-0.30103	bq }
0	br ,
-0.04139268	break ;	-0.3888158
-1.041393	break H
-0.1760913	bs )
-0.4771213	bs ;
-0.7781513	bt ,
-0.4771213	bt ;
-0.4771213	bt =
-0.7781513	bt >
-0.7781513	bu *
-0.4771213	bu ,
-0.4771213	bu =
-0.7781513	bu >
-0.60206	buf )
-0.60206	buf ,
-0.60206	buf ;
-0.60206	buf [
-0.30103	bv ,
-0.30103	bv ;
0	bw ,
-0.30103	bx )
-0.30103	bx ;
-0.7781513	by ,
-0.7781513	by =
-0.30103	by ?	-0.4234364
-0.7781513	by ||
-0.69897	bz </s>
-0.69897	bz <<
-0.39794	bz =
-0.69897	bz >>
-1.724276	c "
-1.724276	c %
-1.724276	c &
-1.423246	c )	-0.4597537
-1.247155	c *
-1.724276	c +
-1.247155	c ++
-0.9461246	c ,
-1.423246	c -
-1.724276	c --
-1.724276	c -=
-1.423246	c .
-1.122216	c :	-0.288318
-1.247155	c ;
-1.247155	c <
-1.423246	c </s>
-0.6828832	c =	-0.3793591
-1.423246	c ==
-1.423246	c >
-1.724276	c |
-1.724276	c ||
-0.30103	c8 +
-0.30103	c8 7
0	c9 .
0	cN mkM
0	c_X </s>
0	c_kah%0d9`b' /
0	calloc (
0	case 'd'
0	cb ,
0	ch )
-0.1303338	char *	-0.4128585
-1.431364	char J
-1.431364	char N
-1.431364	char X
-1.431364	char buf
-1.431364	char o
-1.431364	char pro
-1.431364	char ser
0	ckQaOrON epne
0	close (
-1.041393	const ala	-0.2340832
-0.4973246	const and	-0.1197991
-1.342423	const char
-1.342423	const gln
-1.041393	const his	-0.2340832
-1.041393	const not	-0.449969
-0.8653014	const pro	-0.20412
-1.041393	const ser
-1.041393	const thr
0	continue ;
0	cos (
0	cq *
0	crea "
0	curs_set (
-0.7781513	cys )
-0.4771213	cys -
-0.7781513	cys =
-0.4771213	cys >>	-0.4449366
-1.102662	d )	-0.8452816
-1.454845	d *
-1.454845	d *=
-1.211807	d +	-0.1244088
-1.755875	d ++
-1.015512	d +=	-0.1615325
-0.9777236	d ,	-0.7606917
-1.278754	d -
-1.278754	d -=	-0.3713175
-2.056905	d ->
-2.056905	d .
-2.056905	d /
-1.579784	d /=
-2.056905	d 9
-2.056905	d :
-0.9777236	d ;	-0.131836
-1.579784	d <
-2.056905	d <<
-2.056905	d <=
-0.9107768	d =	-0.2248697
-2.056905	d ==
-2.056905	d >
-2.056905	d >=
-1.755875	d >>
-2.056905	d ?
-1.755875	d [
-1.579784	d ]	-0.45896
-2.056905	d xv
-2.056905	d |
-2.056905	d ||
0	d2 xa6
0	d77sNOsd 8
-0.60206	d8 (
-0.60206	d8 ,
-0.60206	d8 _
-0.60206	d8 a
0	d8ak =
0	dA )
0	dB )
0	dC </s>
0	d_C f3
0	dat </s>
0	data )
0	default :
0	defined __STDC_VERSION__
-0.69897	do ,
-0.09691001	do {	-0.5007058
0	double </s>
0	dstr )	-0.4597537
0	dup (
0	dup2 (
-1.332438	e (	-0.2933432
-1.156347	e )	-0.5960763
-1.934498	e *
-1.934498	e *=
-1.934498	e +
-1.0894	e +=
-0.980256	e ,	-0.4608479
-1.934498	e -
-1.934498	e -=
-0.8553172	e ->	-0.4771211
-1.457377	e .
-1.934498	e :
-0.8553172	e ;	-0.8037891
-1.633469	e <
-1.934498	e </s>
-0.8931057	e =	-0.1329983
-0.9344984	e [	-0.06174559
-1.934498	e ]
-1.934498	e kf
-1.934498	e {
0	eep ,
-1.462398	efine D
-1.462398	efine E
-1.462398	efine E0
-1.462398	efine EX
-1.462398	efine F0
-1.462398	efine F1
-1.462398	efine F2
-1.462398	efine FV
-1.462398	efine H
-1.462398	efine HP
-1.462398	efine HY
-1.462398	efine I
-1.462398	efine K
-1.462398	efine LP
-1.462398	efine M
-1.462398	efine N
-1.462398	efine O
-1.462398	efine P
-1.462398	efine Q
-1.462398	efine QH
-1.462398	efine QL
-1.462398	efine R
-1.462398	efine RP
-1.462398	efine S
-1.462398	efine T
-1.462398	efine U
-1.462398	efine W
-1.462398	efine Z
-1.462398	efine break
-0.6532125	else </s>
-1.255273	else z
-0.1413292	else {	-0.1019895
0	elta_u )
0	elta_v )
0	epne luelue
0	er </s>
0	err (	-0.7718111
0	errx (
0	exit (	-0.6906083
0	exp (	-0.5997349
0	extern void
-1.78533	f &
-1.78533	f &&
-0.6713865	f (	-0.4021991
-0.7853298	f )	-0.2165485
-0.5300573	f ,	-0.2666163
-1.78533	f .
-1.4843	f ;
-1.78533	f </s>
-1.78533	f <<
-0.9402318	f =
-1.78533	f ?
-1.78533	f EOF
-1.78533	f defined
-1.78533	f |
-1.4843	f }
0	f3 ]
0	fabs (
0	fclose (
0	fgetc (
0	fgets (
0	file1 file2"
0	file2" ,
0	flash (
-0.845098	float </s>
-0.845098	float C
-0.845098	float I
-0.845098	float K
-0.845098	float N
-0.845098	float V
-0.845098	float a
0	float_ )
0	flu ,
0	fopen (
-0.02413368	for (	-0.6340613
-1.267172	for </s>
0	fputc (
0	fread (
0	free (	-0.2943535
0	fscanf (
0	fseek (
0	function (
0	fw )	-0.192069
-1.752048	g %
-1.575957	g &
-2.053078	g &&
-2.053078	g (
-1.451018	g )
-1.053078	g *	-0.5048003
-1.451018	g *=
-1.20798	g +	-0.1407992
-1.575957	g ++	-0.5730963
-1.752048	g +=
-1.20798	g ,
-2.053078	g --
-1.451018	g -=
-2.053078	g /
-1.752048	g 9
-2.053078	g :
-0.6913506	g ;	-0.5176444
-1.451018	g <	-0.2936689
-2.053078	g </s>
-2.053078	g <<
-0.6381051	g =	-0.3416831
-2.053078	g >>
-2.053078	g Q
-2.053078	g [
-2.053078	g ]
-2.053078	g ^
0	getC "
0	getch (
0	getchar (	-0.5625515
0	getopt (
-0.50515	gln )	-0.5960763
-0.30103	gln ;	-0.7122191
-0.90309	gln =
-1.20412	gln ==
-0.30103	glu )	-0.5960763
-0.5228788	glu :	-0.5893481
-1	glu <<
-1	glu =
-0.30103	glx %
-0.30103	glx =
0	gly (	-0.8411045
0	go )
0	goofy !
-1.133539	h %
-1.832509	h &
-1.832509	h &&
-1.832509	h 'lQ
-1.355388	h (	-0.4737959
-1.531479	h )
-1.355388	h *	-0.592639
-1.832509	h *=
-1.531479	h +	-0.4286088
-1.832509	h ++
-1.832509	h +=
-1.133539	h ,	-0.219561
-1.133539	h -	-0.2078943
-1.355388	h .	-0.4361197
-1.832509	h /
-1.832509	h 9
-1.054358	h ;	-0.5361278
-0.9874108	h <<	-0.07269912
-0.8325089	h =	-0.2071028
-1.832509	h >
-1.832509	h >>
-1.832509	h ?
-1.832509	h Q
-1.832509	h ^
-1.832509	h ^=
-1.832509	h b
-1.531479	h |
0	halting )
0	height =
-0.3679768	his )	-0.3681603
-0.845098	his ;
-0.3679768	his [	-0.462398
0	ho )
0	href .
-1.467361	i %	-0.2898458
-1.768391	i &
-1.768391	i &&
-0.8141489	i (	-0.9183469
-1.131569	i )	-0.2835622
-1.342423	i *	-0.1116912
-2.245513	i *=
-1.546543	i +	-0.2165199
-1.546543	i ++	-0.1225975
-1.944483	i +=
-0.8305393	i ,	-0.4225964
-1.342423	i -	-0.2906064
-2.245513	i --
-1.342423	i /	-0.2654538
-1.944483	i :
-1.20412	i ;	-0.02121793
-1.20412	i <
-2.245513	i </s>
-2.245513	i <=
-0.9232934	i =	-0.06636976
-2.245513	i ==
-1.944483	i >
-1.768391	i >>
-1.944483	i ?
-1.643453	i ]
-2.245513	i |
-0.01240926	if (	-0.3728474
-1.550228	if </s>
-0.69897	ile !=
-0.69897	ile +
-0.69897	ile --
-0.69897	ile ;
-0.69897	ile =
0	in tYv
0	initscr (
-1.161368	int )	-0.3003871
-0.9852768	int *
-1.064458	int </s>
-1.763428	int G
-1.763428	int H
-1.286307	int I
-1.763428	int L
-1.763428	int P
-1.462398	int X
-1.763428	int _
-1.763428	int a
-1.763428	int bk
-1.763428	int bm
-1.763428	int bs
-1.763428	int bt
-1.763428	int bw
-1.763428	int by
-1.462398	int c	-0.4249432
-1.286307	int i	-0.5740313
-1.763428	int j
-1.462398	int k
-1.763428	int l
-0.91833	int main	0.4101745
-1.763428	int met
-1.763428	int op
-1.763428	int puts
-1.763428	int u
-1.763428	int v
-1.286307	int x	-0.3276822
-1.462398	int y	-0.4169341
0	int_ )
0	intw )
0	ioctl (
0	ipt >
-1.414973	j %	-0.579396
-1.591065	j &&
-0.9890046	j )	-0.721015
-1.892095	j *
-1.414973	j *=
-1.046997	j +	-0.3536186
-1.892095	j ++
-1.414973	j +=
-0.6616457	j ,	-0.3558492
-1.414973	j -
-1.892095	j /
-1.892095	j /=
-1.892095	j :
-1.414973	j ;	-0.2350978
-1.290035	j <
-1.892095	j </s>
-0.7781513	j =	-0.1591238
-1.591065	j >
-1.591065	j ?
-1.892095	j kd
-1.892095	j ||
0	jQ O7
0	j_la _
0	j_laaaN :
-1.869232	k %
-1.869232	k (
-0.9149892	k )	-0.0671303
-1.869232	k *
-1.869232	k *=
-1.170262	k +
-1.39211	k ++	-0.37787
-1.869232	k +=
-0.7552884	k ,	-0.2409687
-1.39211	k -	-0.4684524
-1.869232	k --
-1.869232	k -=
-1.39211	k /	-0.3789896
-1.869232	k :
-1.39211	k ;
-1.568202	k <
-1.568202	k </s>
-0.827839	k =	-0.08657314
-1.869232	k >
-1.869232	k >>
-1.39211	k [	-0.4419568
-1.39211	k ]	-0.5838987
-1.869232	k ^
-1.869232	k ^=
-1.869232	k g
-1.869232	k }
0	k8b %
0	k9 b1g
0	kP8 ;
0	k_ 7
0	kccMcOP &
0	kckQ ,
0	kd 7
0	ket Sec
-0.30103	key .
-0.30103	key :
0	keysym .
0	kf _a
0	kg </s>
-1.913814	l &&
-1.311754	l (
-1.010724	l )	-0.515623
-1.135663	l *
-1.913814	l *=
-1.612784	l +
-1.913814	l ++
-1.311754	l +=
-0.8724211	l ,
-1.311754	l -	-0.2303479
-1.913814	l -=
-0.8346326	l ;	-0.5217034
-1.913814	l <
-1.913814	l </s>
-1.913814	l <<
-0.8346326	l =	-0.07387681
-1.913814	l ==
-1.913814	l >
-1.913814	l >>
-1.612784	l ]
-1.612784	l ^
-1.913814	l mq9l8b
-1.913814	l peoqemtemw
-1.913814	l v
-1.913814	l vQ
-1.913814	l |
-0.30103	lM :
-0.30103	lM ;
0	lNRmO_loa8 %
0	lQ h
0	lQoOa N9
0	l_ %
0	le )
0	lea ,
-0.60206	leu ;
-0.60206	leu =
-0.30103	leu ]
0	lf )
0	location .
-1.278754	long </s>
-1.278754	long A
-1.278754	long L
-1.278754	long Q8
-1.278754	long __
-1.278754	long a
-1.278754	long b
-1.278754	long c
-1.278754	long h
-1.278754	long j
-0.5797836	long long
-1.278754	long q
-1.278754	long y
-0.9777236	long z	-0.4357286
0	lpeoqempepneu e
0	lrand48 (
-0.30103	lu ,
-0.30103	lu =
0	luN ]
0	luelue lpeoqempepneu
-0.1760913	lv ,
-0.4771213	lv =
0	lwg +
-0.6532125	lys )	-0.4282115
-0.9542425	lys +=
-0.9542425	lys -=
-0.4771213	lys =	-0.4718168
-0.9542425	lys ==
-0.9542425	lys >=
-1.755875	m %
-1.755875	m &&
-1.278754	m (	-0.5886029
-0.9777236	m )
-1.454845	m *	-0.4677002
-1.454845	m +
-1.755875	m ++
-1.755875	m +=
-0.6419315	m ,	-0.4836011
-1.755875	m -
-1.755875	m -=
-1.755875	m /
-1.755875	m :
-1.153815	m ;
-1.278754	m <
-1.755875	m </s>
-0.8016323	m =	-0.2109041
-1.278754	m >
-1.454845	m [
-1.755875	m vOwwRor
-0.30103	mR RMPmSk
-0.30103	mR mS
0	mR8 }
0	mRMmO %
0	mRh ^
0	mS ]
0	mageData (
-0.02482358	main (	-0.7076069
-1.255273	main </s>
0	malloc (
0	memset (
-0.4771213	met )	-0.4761565
-0.9542425	met ;
-0.9542425	met lys
-0.6532125	met main	0.7781513
-0.6532125	met val	-0.4279032
0	mkM :
0	mq9l8b ^
0	mva ,
0	mvaddstr (
0	mvinch (	-0.4636641
0	mvinsch (
-2.056905	n %
-2.056905	n &&
-0.9429615	n )	-0.2328984
-1.357935	n *
-1.278754	n +
-1.579784	n +=
-0.6419315	n ,	-0.387907
-1.153815	n -	-0.2138798
-2.056905	n --
-1.755875	n -=
-1.755875	n /
-2.056905	n :
-1.056905	n ;	-0.1559165
-1.454845	n <
-1.579784	n </s>
-0.9107768	n =	-0.1104313
-1.211807	n >
-1.755875	n ?
-1.755875	n ]
-1.755875	n |
-2.056905	n }
0	nR ;
0	nRmUd s
0	ndif </s>
-0.30103	new Uint8Array
-0.30103	new WebSocket
0	nk ;
-1.995635	not !=
-1.995635	not &
-1.092545	not )	-0.7941291
-1.217484	not ,	-0.474451
-1.150537	not ->	-0.8611255
-0.3828513	not .	-1.348778
-1.694605	not ;	-0.2350978
-1.393575	not =
-1.995635	not ==
-1.995635	not >
-1.995635	not >>
-0.5806618	not [	-1.38739
0	np )
-1.838849	o &
-1.185637	o )	-0.2183009
-1.098486	o *
-2.139879	o *=
-1.185637	o +	-0.1038156
-1.838849	o ++
-1.662758	o +=	-0.4557231
-0.9357591	o ,	-0.2236198
-1.185637	o -
-1.838849	o -=	-0.4274335
-2.139879	o /
-0.8388491	o ;	-1.059007
-0.7781513	o =	-0.4260981
-1.838849	o >	-0.4655394
-1.838849	o >>	-0.455932
-0.7596679	o [	-0.7160034
-1.838849	o ]
0	o(O _){putchar(_);}O"
0	oM :
0	oNS &
0	ocket -
0	oec ,
0	of )	-0.4597537
0	offsetLeft ;
0	offsetTop }
0	og (
0	on :
0	onmousemove =
0	ontext (
-0.6532125	op &&	-0.4572264
-0.9542425	op )
-0.6532125	op ;
-0.4771213	op =
-0.9542425	op ^
0	open (
-0.7781513	optind )
-0.4771213	optind +	-0.4286088
-0.7781513	optind =
-0.4771213	optind ]	-0.4268942
-1.643453	p &
-1.467361	p )	-0.3681603
-1.643453	p +
-0.9444827	p ++	-0.7639107
-1.041393	p ,
-1.467361	p -
-1.944483	p -=
-1.467361	p /
-1.944483	p :
-0.8305393	p ;	-0.06862035
-1.944483	p <
-1.643453	p </s>
-1.944483	p <=
-0.6892102	p =	-0.3034124
-1.643453	p >
-0.8653014	p [	-0.5454445
-1.643453	p ]	-0.425227
-1.643453	p ^
-1.944483	p utchar
-1.944483	p |
0	pOpM866OsRlm N
0	pQaM8m {
0	pRM7O </s>
0	pageY -
0	peoqemtemw Q7
0	phe (	-0.6912832
0	pixels ,
0	pow (	-0.4707811
0	pread (
0	prin </s>
0	printf (
-0.69897	pro )
-0.2218488	pro *	-0.4724363
-0.69897	pro ;
0	pt :
0	ptj9 lwg
0	pu ,
0	putImageData (
0	putchar (	-0.1257827
-0.06694679	puts (
-0.845098	puts </s>
0	px TmSt
-0.30103	pyl ;
-0.30103	pyl =
-1.643453	q !=
-1.342423	q (
-1.041393	q )	-0.3000652
-1.643453	q *
-1.166331	q +
-1.166331	q ++	-0.4431368
-1.643453	q +=
-1.643453	q ,
-1.342423	q -
-0.8653014	q ;	-0.2350978
-1.166331	q </s>
-0.6892102	q =	-0.1018341
-1.643453	q ==
-1.643453	q >>
-1.643453	q N
-0.9444827	q [
0	qN OMp
0	qQ O
-1.342423	r %
-1.643453	r 'Q]
-0.9444827	r (	-0.2191905
-0.9444827	r )
-1.342423	r +	-0.4717924
-0.9444827	r ++	-0.659906
-1.342423	r +=
-1.041393	r ,
-1.166331	r ;	-0.2350978
-0.6892102	r =	-0.4125842
-1.643453	r ==
-1.643453	r >>
-1.643453	r RmM
-1.643453	r [
-1.643453	r ]
-1.643453	r |
-0.4771213	rQ </s>
-0.4771213	rQ ]
-0.4771213	rQ rQ
0	rR pOpM866OsRlm
0	rand (	-0.4376127
0	re turnY_
0	rea ,
0	read (
0	realloc (
0	refresh (
-1.079181	return (
-1.380211	return +
-0.7781513	return 0	-0.4845453
-1.079181	return </s>
-1.380211	return Q
-1.380211	return W
-1.380211	return Y
-1.380211	return b
-1.380211	return bb
-0.7781513	return d	-0.2775489
-1.380211	return exp
-1.380211	return fclose
-1.380211	return l
-1.380211	return strtol
-1.380211	return u
-1.380211	return y
0	rewind (	-0.4714529
0	round (
0	rror goofy
-1.80618	s %
-1.50515	s (	-0.4376127
-1.50515	s )	-0.3681603
-1.50515	s *
-1.20412	s *=	-0.2812859
-1.50515	s +
-1.50515	s ++
-1.329059	s +=
-1.028029	s ,
-1.50515	s -
-1.329059	s -=
-1.80618	s /=
-1.80618	s :
-1.20412	s ;	-0.3600366
-1.50515	s <	-0.4309581
-1.80618	s </s>
-0.5509075	s =	-0.0423075
-1.50515	s >
-1.10721	s [
-1.80618	s d77sNOsd
0	sM nRmUd
-0.30103	sN '
-0.30103	sN 9
0	sTaa :
0	s_4 &
0	scanf (
0	scr "
0	script >
-0.3521825	sec )	-0.5168951
-0.2552725	sec =	-0.2192046
0	send (
-0.1383027	ser )	-0.2829933
-1.041393	ser ;
-1.041393	ser asx
-1.041393	ser glx
0	set (
0	shi ,
0	short *
0	si ,	-0.47636
0	signal (
0	sin (
0	size_t thr
-0.07255067	sizeof (	-0.2466981
-1.113943	sizeof his
-1.113943	sizeof sec
0	slice (
0	slltwzh &
0	sprintf (
0	sqrt (
-0.7781513	static const
-0.07918125	static void	-0.5963077
0	stdin )
0	stdout )
0	strcmp (
0	strlen (
0	strrchr (
0	strtol </s>
-0.4771213	struct e
-0.1760913	struct {	-0.5007058
0	style =
0	subs </s>
0	switch (
0	sym ;
-0.69897	sym_ (
-0.09691001	sym_ ,	-0.6826966
-1.439333	t !=	-0.4313638
-1.740363	t %=
-0.69897	t )	-0.2611484
-1.439333	t *
-1.740363	t *=
-1.263241	t +
-1.263241	t +=
-1.263241	t ,
-1.740363	t -
-1.740363	t :
-1.263241	t ;
-1.740363	t <
-1.740363	t </s>
-0.69897	t =	-0.07376561
-1.740363	t ==
-1.740363	t >
-1.740363	t ?
-1.041393	t [	-0.2087863
-1.740363	t |
-1.439333	t ||
0	tQ ?
0	tYv =
0	tape )
0	tch ,
0	teI "
0	tf (
0	tgANs =
-0.90309	thr ;
-0.90309	thr cys
-0.90309	thr ile
-0.90309	thr leu
-0.90309	thr trp
-0.90309	thr val
-0.60206	thr xor
0	timeout (
-0.30103	tla ;	-0.2350978
-0.60206	tla =
-0.60206	tla ==
0	tmpfile (
0	to ,
0	tr (
-1	trp )
-1	trp ,
-0.154902	trp ;	-0.6563114
-1	trp =
0	turnY_ .
0	typ and
0	type ==
-1.113943	typedef </s>
-1.113943	typedef char
-1.113943	typedef int
-1.113943	typedef size_t
-0.4149733	typedef struct	-0.2218488
-1.113943	typedef typ
-1.113943	typedef union
-0.8129134	typedef unsigned
-1	tyr )
-1	tyr +
-1	tyr /
-0.39794	tyr =	-0.2983859
-0.5228788	tyr [	-0.4738923
-0.7090703	u )	-0.2784491
-1.939519	u *=
-1.462398	u +
-1.638489	u ++	-0.4224522
-1.462398	u +=
-0.9852768	u ,	-0.1014712
-1.638489	u /	-0.4571502
-1.939519	u :
-1.337459	u ;	-0.3600366
-1.638489	u <
-0.9395192	u =
-1.939519	u ?
-0.462398	u [	-1.032529
-1.638489	u ||
0	uU ]
0	ub ,
0	union w
-0.30103	unk )	-0.3042304
-0.7781513	unk ;	-0.4744041
-1.079181	unk =
-0.60206	unk ]
-0.9542425	unsigned So
-0.6532125	unsigned char
-0.1760913	unsigned long	-0.5785789
0	up" )
0	upgrade </s>
0	usl ,
0	usleep (
0	utchar (
-1.69897	v !=
-1.39794	v %
-1.221849	v )
-1.69897	v *
-1.69897	v *=
-1.39794	v +
-1.69897	v ++
-0.9208187	v ,	-0.173421
-1.39794	v -
-1.69897	v --
-0.8538719	v .	-0.1051264
-1.221849	v /
-1.69897	v :
-1.09691	v ;	-0.2983128
-1.69897	v <
-1.69897	v <<
-0.8538719	v =	-0.0943985
-1.39794	v ==
-1.69897	v >
-1.69897	v >>
-1.69897	v ?
-1.69897	v [
0	vOwwRor ~
0	vQ ^
0	va_arg (
0	va_end </s>
0	va_list argh
0	va_start (
0	vad ,
-0.9700368	val )	-0.4213264
-1.447158	val *
-1.447158	val +
-1.447158	val +=
-0.9700368	val ,	-0.4755974
-1.447158	val -
-1.447158	val -=
-0.4057654	val ;	-0.8300054
-1.447158	val <
-1.146128	val =
-1.447158	val ==
-1.146128	val ]
-1.278754	void )
-0.6766936	void *
-0.8016323	void </s>
-1.278754	void W
-1.278754	void e
-0.9777236	void gly	0
-0.9777236	void phe	0
-1.278754	void s
-1.278754	void w
-1.278754	void x
-1.278754	void y
-1.278754	void z
0	voidw (
0	volatile </s>
0	vpr ,
-0.6347291	w (	-0.4111426
-0.9357591	w )	-0.3701739
-1.236789	w *
-1.838849	w *=
-1.236789	w +=
-1.236789	w ,
-1.838849	w -=
-1.537819	w .
-0.993751	w ;	-0.3020446
-1.838849	w </s>
-1.139879	w =
-1.838849	w [
-1.838849	w _
-1.838849	w a
-1.838849	w a_
-1.139879	w f	-0.06998737
-1.537819	w fw	0
-1.838849	w w
-1.361728	w x	-0.3276822
-1.838849	w {
0	webso "
0	while (	-0.2564121
0	width =
0	window .
0	wnS _
0	world!" )
0	write (	-0.4687595
-1.897627	x (
-0.8184459	x )	-0.04220957
-1.897627	x *=
-1.420506	x +	-0.4286088
-1.897627	x ++
-0.5358993	x ,	-0.4262776
-1.897627	x -
-1.420506	x .	-0.5695742
-1.897627	x /
-1.295567	x ;	-0.3600366
-1.295567	x <
-1.897627	x </s>
-1.897627	x <<
-1.897627	x <=
-0.7514991	x =	-0.140156
-1.897627	x ==
-1.596597	x >>
-1.420506	x ?
-1.596597	x ]
0	xa6 ,
0	xkey ,
-0.30103	xle ;
-0.30103	xle =
-0.8081145	xor )	-0.7893032
-1.352183	xor -	-0.4684524
-1.352183	xor ;	-0.2350978
-0.8750613	xor <	-0.7556828
-0.8081145	xor =	-0.8384573
-1.653213	xor ==
-0.3521825	xor ]	-0.4334995
0	xv SOPm
-1.929419	y !=
-1.230449	y (
-0.8502377	y )	-0.8540004
-1.230449	y +	-0.6504576
-1.929419	y ++
-1.929419	y +=
-1.084321	y ,
-1.452298	y -
-1.230449	y ->	-0.3233064
-1.929419	y /
-0.8880262	y ;	-0.322248
-1.327359	y <
-1.929419	y </s>
-0.7252989	y =	-0.3297172
-1.929419	y ==
-1.929419	y >>
-1.230449	y [	-0.6924879
-1.929419	y ]
-1.628389	y ^
-1.929419	y ^=
-1.929419	y ||
0	yN _
-0.4181434	z (	-0.2959318
-1.041393	z *
-1.439333	z *=
-1.041393	z +=
-1.439333	z ,	-0.4755974
-1.041393	z ;	-0.4569466
-1.439333	z </s>
-1.740363	z <<
-1.740363	z <=
-0.9622114	z =
-1.041393	z [	-0.6859075
0	ze ,	-0.47636
-2.344392	{ "('A`)"
-2.344392	{ )
-1.742332	{ *
-1.499294	{ .	-0.8354905
-2.344392	{ 0
-2.344392	{ 0x67452301
-2.344392	{ 8
-2.344392	{ 8000
-1.867271	{ ;
-0.4359072	{ </s>
-2.344392	{ Display
-2.344392	{ F
-2.043362	{ G
-2.043362	{ H	-0.39794
-2.344392	{ I
-2.344392	{ J
-2.344392	{ L
-2.344392	{ MK6lM
-2.043362	{ O	-0.3288952
-2.344392	{ O_
-2.344392	{ R
-2.344392	{ S
-2.344392	{ SDL_Rect
-2.344392	{ T
-2.344392	{ _
-2.043362	{ a	-0.3938811
-1.303	{ b	-0.1244041
-1.867271	{ bc	0
-2.344392	{ bg
-2.344392	{ bj
-2.344392	{ by
-2.043362	{ c
-2.344392	{ char
-1.645422	{ d	-0.1983677
-2.344392	{ d2
-2.043362	{ float
-1.39015	{ for	0.2671717
-2.344392	{ g
-2.344392	{ i
-1.566241	{ if	0.7720771
-2.344392	{ in
-2.344392	{ initscr
-1.499294	{ int	-0.1308881
-2.043362	{ l	-0.4084055
-1.867271	{ m	-0.4536402
-2.043362	{ n
-1.867271	{ o	-0.5228788
-2.344392	{ printf
-2.344392	{ puts
-2.344392	{ px
-1.867271	{ q	-0.3777366
-1.867271	{ r	-0.4247332
-2.043362	{ return
-2.344392	{ s
-2.344392	{ timeout
-1.645422	{ u	-0.2142956
-2.344392	{ va_list
-1.867271	{ w	-0.4511855
-2.043362	{ while	0
-1.867271	{ x	-0.3924075
-2.344392	{ y
-2.043362	{ z
-2.344392	{ {
-1.645422	{ }
-1.102662	| !	-0.3631779
-0.6255411	| (
-1.579784	| 1
-1.579784	| 4194304
-1.579784	| 8
-1.579784	| </s>
-1.579784	| O
-1.579784	| _
-1.579784	| arg
-1.278754	| b	-0.4702276
-1.278754	| d
-1.579784	| d8ak
-1.278754	| f
-1.579784	| h
-0.9777236	| i	-0.5945935
-1.278754	| k
-1.579784	| l
-1.278754	| o	-0.4707811
-1.278754	| x
0	|= t
-1.30103	|| !
-1.30103	|| '
-0.5228788	|| (	-0.1700871
-1.30103	|| *
-1.30103	|| 0
-1	|| </s>
-1.30103	|| Q
-1.30103	|| bE
-1.30103	|| close
-1.30103	|| i
-1.30103	|| main
-1.30103	|| mvinch
-1.30103	|| r
-1.30103	|| v
-2.33646	} "|~0y'vWtA@:LcO9d}y.!uL!Gd+ml(<+Ds!J"
-1.859339	} (
-1.491362	} )	-0.515525
-1.558308	} ,
-2.33646	} 0
-1.558308	} ;	-0.1701824
-2.33646	} <
-0.4556461	} </s>
-2.33646	} D
-2.33646	} E
-2.33646	} H
-2.33646	} J
-2.33646	} SDL_AudioSpec
-2.33646	} U
-1.859339	} W	-0.3303194
-2.33646	} X
-2.33646	} Y
-2.33646	} Z
-2.33646	} _
-2.33646	} ala
-2.33646	} ay
-1.491362	} b	-0.2220197
-2.33646	} bc
-2.33646	} bd
-2.33646	} bh
-2.33646	} bj
-2.33646	} bl
-2.33646	} bp
-2.33646	} bq
-2.33646	} char
-2.03543	} e
-1.190332	} else	-0.2887955
-2.03543	} extern	0
-2.03543	} f
-2.33646	} flash
-2.33646	} float
-1.859339	} for	0.6651117
-1.859339	} h	-0.4080403
-1.63749	} if	0.7720771
-1.63749	} int	-0.3420822
-2.33646	} l
-2.33646	} o
-2.33646	} putchar
-2.33646	} puts
-2.33646	} q
-2.33646	} re
-2.03543	} return
-2.33646	} static
-2.03543	} typedef
-2.33646	} void
-2.33646	} voidw
-1.7344	} w	-0.2683609
-1.7344	} while	0
-2.33646	} z
-0.9214864	} }	-0.03275612
-1.113943	~ (
-1.113943	~ *
-1.113943	~ -
-1.113943	~ </s>
-1.113943	~ M
-1.113943	~ c
-1.113943	~ d
-1.113943	~ g
-1.113943	~ gln
-1.113943	~ h
-1.113943	~ m
-1.113943	~ q
-1.113943	~ }

\3-grams:
-0.1383027	! ! !	-0.3388186
-0.4259687	&& ! O	0.1760913
-0.60206	&& ! v	0.1249388
-0.447158	( ! (
-0.845098	( ! </s>
-0.4771213	* ! (
-0.30103	+= ! QO	0
-0.544068	b ! *
-0.544068	b ! O
-0.1760913	| ! (
-0.39794	) != EOF	0
-0.1760913	K != b	0
-0.1760913	] != gln	0
-0.1760913	t != h	0
-0.1760913	"> " ,	-0.1760913
0	( "#" )	0
-0.1249387	, "%s" ,	-0.1760913
0	, "> "	0
0	( "Q" )
-0.1249387	, "r" )	0
-0.90309	) % (
-0.90309	) % 2
-0.7269987	) % 3	-0.2340832
-0.90309	) % 8
-0.90309	) % >
-0.09691001	++ % Q	0.243038
-0.544068	R % 2	-0.1760913
-0.1760913	_Q % QQ
-0.30103	i % 5
-0.1249387	j % 4
-0.69897	( & </s>
-0.5228788	( & not	0
-0.1760913	1 & 15	-0.2552725
-0.39794	= & _	0
-0.39794	= & tyr	0
-0.69897	B & 1
-0.1760913	] & arg	0
-0.1760913	__ & 15	-0.2552725
-0.2688453	) && (	-0.03415429
-0.30103	1 && (
-0.1249387	bf && s	-0.1760913
-0.1760913	op && a	0
-0.30103	' ' </s>
-0.1249387	, ',' ,	0.09691
0	== '\n' )
-0.05799195	( '_' ,	0.5118834
-0.6197888	, '_' )	0
-0.1191864	, '_' ,	0.1362197
-0.8750613	! ( C
-0.1760913	% ( and	0.8846066
-1.041393	&& ( *
-0.6434527	&& ( O	-0.2887956
-1.041393	&& ( c
-0.8750613	( ( (	-0.09497551
-1.477121	( ( 2	-0.4288166
-1.477121	( ( H
-1.477121	( ( _O
-1.176091	( ( and	0.6627578
-0.8750613	( ( i	-0.146128
-1.079181	( ( n	-0.3521825
-1.477121	( ( w	-0.2340832
-0.6828832	) ( (	-0.4195886
-1.247155	) ( )	-0.4202164
-1.247155	) ( *
-1.423246	) ( </s>
-0.9461246	) ( L	0.03950858
-1.423246	) ( R	-0.2218488
-1.122216	) ( _	-0.5341598
-1.025306	) ( not	-0.154902
-1.194977	* ( (
-1.371068	* ( *
-1.371068	* ( .5
-0.8939466	* ( 1	-0.6232493
-1.371068	* ( 9
-1.371068	* ( </s>
-1.371068	* ( _	-0.409221
-1.371068	* ( b
-1.371068	* ( i
-0.8325089	+ ( (
-1.230449	+ ( 1
-1.230449	+ ( 4	-0.3802113
-1.054358	+ ( C
-0.8325089	+ ( h	-0.3388186
-1.230449	+ ( k
-1.230449	+ ( ser	0.4771213
-0.7403627	+= ( C
-0.7403627	+= ( h
-0.7403627	+= ( i
-1	, ( &
-1	, ( ,	0
-1	, ( char	0.4259687
-1	, ( w	-0.2340832
-0.60206	- ( (
-0.7781513	- ( _O
-0.8750613	: ( m	-0.3802113
-0.8750613	: ( p	-0.1760913
-0.8750613	: ( t
-1.190332	<s> ( (
-1.190332	<s> ( )
-1.190332	<s> ( O	-0.0669468
-1.190332	<s> ( _	0.08147302
-1.041393	= ( (	-0.2388821
-1.166331	= ( H
-0.60206	= ( and	0.2825466
-1.342423	= ( n
-1.342423	= ( not	0.146128
-1.342423	= ( ser	0.4771213
-0.1760913	E3 ( X	-0.2604122
-0.4771213	F ( L	0.4074853
-0.4771213	F ( f	-0.2900346
-0.1760913	F0 ( L	0.4074853
-0.1760913	F1 ( L	0.4074853
-0.6283889	G ( L	0.1856366
-0.6283889	G ( sym_	0
-0.3521825	I ( o	-0.1346986
-0.30103	J ( G	0
-0.39794	K ( L	0.4074853
-0.39794	K ( k	-0.3606157
-0.1760913	M ( L	0.4074853
-0.6690068	N ( L	0.2825466
-0.69897	O ( -
-0.69897	O ( W	-0.2730013
-0.69897	O ( y	-0.3631779
-0.4259687	O_ ( %
-0.60206	O_ ( 3
-0.7781513	P ( a	-0.4149733
-0.7781513	P ( m	-0.07918125
-0.6766936	Q ( C	-0.2466723
-0.9777236	Q ( j
-0.9777236	Q ( k
-0.9777236	Q ( o	0.08715019
-0.1760913	QR ( L	0.4074853
-0.1760913	QS ( L	0.4074853
-0.4771213	Q_ ( O_o	0.1249388
-0.5228788	W ( X	-0.5614421
-0.8239087	W ( f	-0.4149734
-0.09691001	Y ( )	-0.5451552
-0.39794	Z ( X
-0.1581797	_ ( )	-0.5865479
-1.676694	_ ( =	0
-1.278754	_ ( _	-0.6310698
-1.199572	_ ( f	-0.5185139
-1.676694	_ ( j	0.04575744
-1.676694	_ ( l	-0.3521825
-1.676694	_ ( o	0.08715019
-1.676694	_ ( w
-0.8872957	__ ( '_'	0
-0.7323937	__ ( )	-0.8929727
-0.1760913	__ ( _	-0.9178373
-0.02227639	____ ( _	-0.7424358
-0.5228788	a ( X	-0.4101745
-0.1760913	abs ( (	-0.462398
-0.1760913	bh ( m	-0.07918125
-0.1249387	bj ( X	-0.4101745
-0.1760913	bl ( )
-0.30103	e ( </s>
-0.07918125	err ( 2	-0.4993977
-0.39794	exit ( 0	-0.1153934
-0.39794	exit ( puts	0
-0.1249387	exp ( -
-0.3357921	f ( n	-0.4191293
-0.8129134	f ( w
-0.640978	for ( ;	0.02632904
-1.544068	for ( K	-0.3802113
-1.544068	for ( O	-0.0669468
-1.243038	for ( a	-0.5642715
-1.367977	for ( g	-0.3521825
-0.9420081	for ( i	-0.7993406
-1.544068	for ( j	-0.4313638
-1.243038	for ( k	-0.5477024
-1.243038	for ( p	-0.30103
-1.544068	for ( v
-1.066947	for ( xor	-0.243038
-1.367977	for ( z	0.09691
-0.30103	free ( not	0.146128
-0.1249387	getchar ( )	-0.3886994
-0.243038	gly ( &	-0.4471581
-0.544068	gly ( ala	0
-0.1760913	h ( p	-0.3802113
-0.8293038	i ( 0	-0.3372422
-0.8293038	i ( 1	-0.60206
-0.8293038	i ( 2	-0.5341598
-0.8293038	i ( 3	-0.4881167
-0.9542425	i ( 4	-0.20412
-0.9542425	i ( 5	0.1760913
-1.130334	i ( R
-0.8388491	if ( !	-0.1091445
-1.236789	if ( (	-0.2388821
-1.139879	if ( *	-0.1706962
-1.537819	if ( F	-0.3802113
-1.361728	if ( K	-0.4471581
-1.361728	if ( L	-0.4578161
-1.537819	if ( M
-1.537819	if ( l
-1.139879	if ( not	-0.154902
-1.537819	if ( p
-1.537819	if ( sec	0
-1.361728	if ( t
-1.537819	if ( x
-0.1249387	m ( i	-0.518514
-0.3853509	main ( )	-0.7967933
-0.5314789	main ( int
-0.9294189	main ( met	-0.30103
-0.1760913	mvinch ( i
-0.39794	phe ( const	0
-0.39794	phe ( not	-0.4336556
-0.1760913	pow ( 2	-0.1983677
-0.544068	putchar ( (
-0.39794	r ( e	-0.2730013
-0.1760913	rand ( )	-0.4694344
-0.1760913	rewind ( Q	-0.3606157
-0.1760913	s ( )
-0.5642715	sizeof ( *
-0.7403627	sizeof ( and	0.8846066
-0.90309	w ( *
-0.90309	w ( 41	0
-0.90309	w ( 42	0
-0.60206	w ( y	-0.2284793
-0.8653014	while ( (	-0.5399121
-1.041393	while ( 0	-0.394147
-1.041393	while ( H
-1.041393	while ( X
-1.041393	while ( b	-0.3679768
-0.1760913	write ( 1	-0.4216039
-0.845098	z ( "#"	0
-1.021189	z ( ";"
-1.021189	z ( "Q"	0
-1.021189	z ( (
-1.021189	z ( t	-0.3802113
-0.4771213	|| ( O	-0.0669468
-0.09691001	" ) ;	-0.3802113
-0.1249387	"#" ) )	-0.4850902
-0.1249387	"Q" ) ;	-0.4727564
-0.1760913	"r" ) )
-0.30103	'_' ) *	-0.4662633
-1.755875	( ) %
-0.7346855	( ) )	-0.1565575
-0.7346855	( ) ,	-0.4517057
-1.357935	( ) -	-0.6398486
-0.9107768	( ) ;	0.004657358
-1.278754	( ) </s>
-0.9777236	( ) ]	-0.0746336
-0.8808136	( ) ____	0.05115247
-0.9777236	( ) {	-0.06565072
-1.681241	) ) !=	-0.2552725
-1.681241	) ) %
-1.857332	) ) &&
-1.857332	) ) (
-0.8159398	) ) )	-0.3503914
-1.380211	) ) *
-1.857332	) ) +
-1.079181	) ) ,	-0.4132115
-1.681241	) ) -
-0.6268836	) ) ;	0.05727562
-0.9822713	) ) </s>
-1.681241	) ) ?	-0.3388186
-1.459392	) ) _	-0.3565474
-1.857332	) ) break	0.1249388
-1.556303	) ) for	0.3802112
-0.9279135	) ) {	-0.05168507
-0.39794	+ ) d8
-0.39794	+ ) {
-0.9777236	++ ) *
-0.8016323	++ ) ;
-0.9777236	++ ) </s>
-0.9777236	++ ) _	-0.1346986
-0.8016323	++ ) {
-0.7403627	, ) )	-0.4293485
-0.3424227	, ) ]
-0.6532125	-- ) bd	0
-0.4771213	-- ) {	-0.4312651
-0.1760913	... ) {
-1.31527	0 ) ,
-1.491362	0 ) :
-0.2738777	0 ) ;	0.1040677
-1.491362	0 ) </s>
-1.491362	0 ) G	0.60206
-0.7923917	0 ) {	-0.2744789
-1.491362	0 ) ||
-1.267172	1 ) &&
-0.8692317	1 ) )	-0.5576409
-1.09108	1 ) *
-1.267172	1 ) ,
-0.5682017	1 ) ;	-0.2160192
-1.09108	1 ) </s>
-1.09108	1 ) {	-0.3063263
-0.1760913	128 ) ;
-0.1760913	15 ) <	-0.30103
-0.30103	16 ) ;	-0.3317646
-0.845098	2 ) )	-0.1048789
-0.69897	2 ) *	-0.03698356
-0.9420081	2 ) ,
-1.243038	2 ) -
-0.845098	2 ) ;	-0.1276446
-0.1760913	2. ) /	-0.4191293
-0.9777236	3 ) )
-0.5797836	3 ) ,
-0.8016323	3 ) ;	-0.2068259
-0.60206	32 ) *
-0.60206	32 ) ;	-0.2068259
-0.7596679	4 ) )
-1.060698	4 ) *
-1.060698	4 ) +
-1.060698	4 ) +=	-0.1760913
-1.060698	4 ) ,
-1.060698	4 ) :
-1.060698	4 ) =
-0.39794	40 ) ;
-0.1760913	41 ) ;
-0.30103	42 ) ;
-0.845098	5 ) *
-0.845098	5 ) +
-0.845098	5 ) +=	-0.1760913
-0.544068	5 ) ,
-0.4771213	6 ) *	-0.3679768
-0.4771213	6 ) ;	-0.2068259
-0.2218488	60 ) ;
-0.1760913	63 ) -	-0.4357286
-0.39794	7 ) %
-0.7403627	8 ) *
-0.7403627	8 ) ,
-0.7403627	8 ) ;
-0.3679768	9 ) *
-0.9777236	; ) ;
-0.9777236	; ) for	0.60206
-0.9777236	; ) i
-0.3756636	; ) {	-0.09316374
-0.69897	<s> ) )	-0.1498461
-1.09691	<s> ) *
-0.6197888	<s> ) ;	-0.24221
-1.09691	<s> ) ]
-1.09691	<s> ) {
-0.1760913	= ) __	0
-0.39794	B ) ,
-0.39794	B ) ;
-0.2218488	C ) ;	-0.2068259
-0.39794	EOF ) {	-0.3063263
-0.1760913	I ) {
-0.4771213	K ) ;
-0.4771213	K ) </s>
-0.6532125	L ) ;	-0.4183013
-0.6532125	L ) G	0.60206
-0.1249387	NULL ) {	-0.4312651
-0.5642715	O ) </s>
-0.5642715	O ) {	-0.4524544
-0.6690068	Q ) )	-0.4051186
-0.544068	Q ) ;	-0.3317646
-0.845098	Q ) </s>
-0.8846066	R ) (	-0.7070879
-0.9637879	R ) )	-0.6491725
-1.060698	R ) ,
-0.6627578	R ) </s>
-1.361728	R ) F	0
-1.361728	R ) G	0.60206
-0.9637879	R ) J	0
-1.361728	R ) L	0
-1.361728	R ) QR	0
-0.1760913	SEEK_SET ) ;	-0.2068259
-0.30103	W ) </s>
-0.6690068	X ) ;
-0.845098	X ) </s>
-0.845098	X ) E3	0
-0.1760913	Y ) ;	-0.2068259
-0.90309	] ) )	-0.2918866
-0.90309	] ) +	-0.6320232
-0.4259687	] ) ;	-0.1099159
-1.20412	] ) </s>
-0.80618	] ) {
-1.491362	_ ) %
-1.31527	_ ) )	-0.4617736
-1.01424	_ ) *	-0.7999359
-1.31527	_ ) +
-0.8381492	_ ) ,	-0.895597
-1.491362	_ ) ;
-1.190332	_ ) </s>
-0.3452336	_ ) ]	-0.2430381
-1.31527	_ ) ____	0.7781513
-0.1760913	_O ) +	-0.3132645
-0.30103	a ) )
-0.30103	and ) (	-0.5842885
-1.041393	and ) 16u	0
-0.1760913	au ) [
-0.4259687	b ) )
-0.60206	b ) ;
-0.60206	b ) {
-0.30103	bf ) {	-0.4580583
-0.1760913	c ) (
-0.05115252	d ) ;	-0.0307346
-0.1760913	dstr ) (
-0.4771213	e ) ;	-0.2068259
-0.30103	e ) {
-0.69897	f ) )
-0.5228788	f ) ,
-0.30103	fw ) ;	-0.4183013
-0.4771213	gln ) ;	-0.2068259
-0.30103	gln ) {	-0.4312651
-0.4771213	glu ) ;	-0.2068259
-0.30103	glu ) {	-0.4312651
-0.1760913	his ) ;	-0.2068259
-0.4149733	i ) (	-0.3638602
-0.6368221	i ) ;	-0.2068259
-0.30103	int ) h
-0.20412	j ) ;	-0.5078559
-0.60206	j ) {
-0.4771213	k ) ;	-0.2068259
-0.60206	l ) *
-0.30103	l ) {	-0.6881796
-0.1760913	lys ) )
-0.1760913	met ) tyr
-0.3357921	n ) ;	-0.5748026
-0.8129134	n ) {	-0.3063263
-0.05799195	not ) ;	-0.6327946
-0.6532125	o ) )
-0.6532125	o ) ;
-0.6532125	o ) {
-0.1760913	of ) (	-0.3760947
-0.1760913	p ) ;
-0.30103	q ) w	0.1249388
-0.1760913	s ) ;
-0.39794	sec ) ;	-0.2068259
-0.39794	sec ) {	-0.3063263
-0.60206	ser ) (	-0.3760947
-0.60206	ser ) asx
-0.5642715	t ) )
-0.7403627	t ) ;	-0.4183013
-0.7403627	t ) _
-0.7533277	u ) (
-0.9294189	u ) *
-0.6283889	u ) ;
-0.7533277	u ) {
-0.4771213	unk ) )
-0.4771213	unk ) ;	-0.2068259
-0.1760913	val ) {	-0.3063263
-0.20412	w ) {	-0.7646208
-0.7781513	x ) )
-0.7781513	x ) ;
-0.7781513	x ) {
-0.06694679	xor ) {	-0.6743031
-0.2340832	y ) ;	-0.6327946
-0.7781513	y ) </s>
-0.7781513	y ) {
-0.544068	} ) .	0
-0.3679768	} ) </s>
-0.1249387	& * X
-1.130334	( * ++	0
-1.130334	( * O0	0.2218488
-1.130334	( * X
-1.130334	( * d
-0.9542425	( * not	0.09691
-0.8293038	( * p
-1.130334	( * s
-1.431364	) * !	-0.30103
-0.6532125	) * (	-0.06029589
-1.607455	) * 2
-1.607455	) * </s>
-1.005395	) * _	-0.665729
-1.607455	) * _0
-1.607455	) * __	0
-1.209515	) * g	-0.1249388
-1.431364	) * i
-0.7945417	) * o	-0.5856696
-1.607455	) * r
-0.6532125	* * y	0.1249388
-1.176091	, * *
-1.176091	, * Q3
-1	, * b	-0.30103
-1	, * e
-1	, * o	-0.3881802
-1.176091	, * q
-0.90309	2 * o	-0.3245111
-0.90309	2 * p
-0.90309	2 * u
-0.6532125	3 * 2
-0.60206	4 * o
-0.1760913	6 * n
-0.1760913	60 * (
-0.60206	; * s
-0.7269987	= * </s>
-0.3590219	= * p	-0.7088783
-0.90309	= * q	-0.2340832
-0.90309	= * s
-0.1760913	C * C	-0.2552725
-0.69897	E * </s>
-0.69897	E * K	0.1249388
-0.69897	E * a	0
-0.69897	E * e
-0.1760913	F * (	-0.4178073
-0.2218488	FILE * Q	-0.3388186
-0.4771213	H * </s>
-0.1760913	Q * Q
-0.39794	V * (
-0.39794	V * I	-0.1760913
-0.1760913	W * p	-0.4423591
-0.6368221	] * (	-0.4582359
-0.6368221	] * 10	-0.1760913
-0.6368221	] * _	-0.4993977
-0.1760913	ala * const	-0.2552725
-0.60206	char * )
-0.5228788	char * *	-0.06694677
-1	char * p
-0.69897	g * 16	-0.1760913
-0.69897	g * 80	0.5228788
-0.5228788	g * Y	-0.2552725
-0.1249387	h * 80	0.39794
-0.60206	i * 4
-0.1760913	m * 80	0.5228788
-0.1760913	pro * const	-0.2552725
-0.06694679	) *= g	0.1091445
-0.1760913	] *= -	0
-0.30103	s *= s	0
-0.5026754	) + (	-0.3228271
-1.066947	) + </s>
-1.066947	) + _	0.30103
-1.066947	) + __	0
-1.243038	) + s	0.30103
-0.1760913	10 + s	0.30103
-0.4771213	2 + 1
-0.39794	3 + i
-0.39794	3 + x
-0.1760913	32 + (
-0.1249387	4 + 1	-0.4238757
-0.5228788	80 + g	0
-0.5228788	80 + m
-0.5228788	80 + n
-0.1760913	Q2 + 1
-0.1760913	QQ + (
-0.1760913	Y + (	-0.4080403
-0.5642715	] + _	0.1760913
-0.544068	d + i
-0.544068	g + u	0
-0.1760913	h + 1
-0.39794	i + F
-0.544068	j + 3
-0.544068	j + B	0
-0.6532125	o + l
-0.1760913	optind + 1	-0.3631779
-0.1760913	r + t	0
-0.1760913	x + 1
-0.09691001	y + 1
-0.1760913	* ++ s	0
-0.5228788	; ++ i	0
-0.2218488	; ++ xor	0
-0.5228788	<s> ++ not	0
-0.69897	<s> ++ tla	0
-0.30103	] ++ )	-0.4288166
-0.1760913	a ++ )
-0.1249387	g ++ ]	-0.30103
-0.39794	i ++ )
-0.1760913	k ++ )
-0.5228788	p ++ )
-0.69897	p ++ ,
-0.69897	p ++ -
-0.69897	p ++ ;
-0.1760913	q ++ ,
-0.39794	r ++ %	0.2218488
-0.39794	r ++ =
-0.1760913	u ++ ;
-0.30103	) += o	-0.2218488
-0.2218488	O0 += O1
-0.39794	] += (	-0.3899711
-0.1760913	__ += (
-0.7403627	d += H	0.2218488
-0.7403627	d += g
-0.1760913	o += l
-0.30103	" , 2	-0.05115253
-0.30103	"%s" , y	-0.3521825
-0.09691001	',' , ','	0
-0.01703334	'_' , '_'	0
-0.1760913	( , )	-0.3899711
-1.375664	) , (
-1.375664	) , 0	-0.2340832
-1.676694	) , 1	-0.1760913
-1.375664	) , </s>
-1.500602	) , B	-0.3467875
-1.278754	) , O	-0.3309933
-1.676694	) , O0	-0.1091445
-1.074634	) , Q
-1.500602	) , Q0	-0.2552725
-1.676694	) , R	0.679226
-0.8637803	) , _	-1.095403
-1.023481	) , __	-0.3521826
-1.676694	) , e
-1.676694	) , g	-0.2340832
-1.375664	) , i	-0.2536053
-1.676694	) , w	-0.3679768
-0.544068	++ , b
-0.544068	++ , t
-0.1760913	-- , _	-0.426396
-0.7403627	0 , 0	0.2130749
-0.6264194	0 , </s>
-1.263241	0 , W	-0.2340832
-1.439333	0 , j
-1.439333	0 , n
-1.09691	1 , ">	0
-1.09691	1 , &
-1.09691	1 , 0	-0.2782869
-0.79588	1 , </s>
-0.7781513	2 , "%s"	0
-0.9542425	2 , *	-0.447158
-0.7781513	2 , 0	-0.1091445
-0.544068	3 , _	-0.426396
-0.1249387	6 , _	-0.5513347
-0.8129134	8 , </s>
-0.8129134	8 , x	-0.1413292
-0.845098	<s> , *
-0.7201593	<s> , _	-0.1317247
-0.1760913	= , =	0
-0.39794	E , F	0
-0.4771213	F , i
-1.230449	L , (	-0.4313638
-0.7533277	L , N	-0.3899711
-0.2762064	L , R	-0.2908107
-1.10551	L , _	-0.5973324
-0.04575749	N , R	0.6334686
-0.1760913	Q3 , Q2
-0.4771213	R , L	-0.30103
-0.4771213	R , _	-0.3754836
-0.1249387	W , p	-0.30103
-0.60206	X , 0	-0.1091445
-1.217484	] , "r"	0.1249388
-0.819544	] , *
-1.041393	] , 0	-0.1091445
-1.041393	] , e	-0.4057654
-1.041393	] , o	-0.4259688
-1.649335	_ , )	-0.5149099
-0.01789109	_ , _	-1.390002
-0.7403627	a , *	-0.4313638
-0.5642715	a , u	-0.39794
-0.1760913	be , bf	0
-0.4771213	d , T	-0.2218488
-0.7781513	d , d
-0.7781513	d , g	-0.2340832
-0.7781513	d , t
-0.6532125	e , k	0.1249388
-0.6532125	e , n
-0.6532125	e , t	-0.2009149
-0.9542425	f , </s>
-0.5563025	f , i	-0.6581759
-0.9542425	f , w
-0.39794	h , f	0.3679768
-1.113943	i , 0
-0.9378521	i , a	-0.30103
-1.113943	i , au	0
-1.113943	i , b
-1.113943	i , j	-0.3802113
-0.6368221	i , t	-0.5688916
-0.9294189	j , 0	-0.1091445
-0.9294189	j , 6	0
-0.9294189	j , k	0.1249388
-0.6283889	j , u	-0.1760913
-0.8129134	k , 0	-0.1091445
-0.8129134	k , l	-0.07918125
-0.8129134	k , p
-0.8129134	m , e	-0.3388186
-0.8129134	m , i	-0.1286666
-0.6368221	m , n	-0.4130038
-0.8129134	m , o
-0.8129134	n , d	-0.4673615
-0.5698753	n , i	-0.5546353
-1.113943	n , m
-0.9378521	n , o	-0.3802113
-0.4771213	not , const	-0.2552725
-0.4771213	not , glu	0
-0.7269987	o , 0	-0.2340832
-0.90309	o , 16	0.1249388
-0.90309	o , o
-0.1760913	si , of	0
-0.09691001	sym_ , R	0.4573773
-0.6532125	u , 1
-0.4771213	v , v
-0.1760913	val , const	-0.2552725
-1.060698	x , ...	0
-1.060698	x , </s>
-0.7596679	x , K	-0.06214792
-1.060698	x , a
-0.6627578	x , y	-0.39794
-0.1760913	z , A	-0.1760913
-0.1760913	ze , si	0
-0.8653014	) - (	-0.39794
-0.8653014	) - 3	-0.3521825
-1.041393	) - 32	0.1249388
-0.5642715	) - __	-0.3222193
-0.1760913	*= - 1
-0.9294189	1 - I	0
-0.6283889	1 - n	-0.3309932
-0.39794	3 - __
-0.6532125	<s> - i	-0.3521825
-0.455932	= - 1	-0.4114425
-0.60206	= - ~
-0.39794	F - 1
-0.39794	F - p	-0.1760913
-0.1760913	I - x	0
-0.4259687	L - 1
-0.30103	O0 - OO	0
-0.3802112	[ - 1	-0.6897294
-0.3679768	] - _	0
-0.1760913	a - </s>
-0.1760913	asp - asn	0
-0.39794	h - i
-0.60206	i - W	0
-0.60206	i - h
-0.1760913	k - v	-0.2552725
-0.30103	l - 1	-0.3744589
-0.60206	n - 1	-0.3744589
-0.60206	n - 3	-0.2730013
-0.1760913	xor - unk	-0.1760913
-0.1760913	O -- ;
-0.4771213	d -= g
-0.4771213	d -= l	0.2218488
-0.1760913	o -= g	0.1249388
-0.6532125	A -> b	-0.09691003
-0.1760913	A -> j	-0.1091445
-0.6532125	B -> b	-0.09691003
-0.1760913	B -> j	-0.1760912
-0.6283889	K -> n	-0.1760913
-0.5314789	K -> x	-0.4357286
-0.5314789	K -> y	-0.05551735
-0.3679768	a -> x
-0.3679768	a -> y	-0.1346986
-0.4771213	b -> n	-0.2730013
-0.4771213	b -> op	-0.1760913
-0.60206	e -> a	-0.1760913
-0.60206	e -> b	-0.39794
-0.7781513	e -> x	-0.3899711
-0.7781513	e -> y	-0.3899711
-0.30103	not -> not
-0.4259687	not -> val
-0.2218488	y -> b	-0.2218488
-0.1760913	) . _
-0.8129134	] . e
-0.5118834	] . q	0
-0.3357921	] . y	-0.146128
-0.2340832	asn . not	0.146933
-0.4771213	asn . val
-0.1760913	h . y	-0.3802113
-0.1608513	not . not	-0.003005445
-0.544068	not . val	-0.1760913
-0.544068	v . y
-0.1249387	x . _
-0.4259687	{ . _	-0.39794
-0.60206	{ . c	0
-0.60206	{ . p
-0.1760913	, ... )	0
-0.50515	) / (
-0.7269987	) / 2	-0.3679768
-0.90309	) / p
-0.1760913	C / 4
-0.1760913	] / _	0
-0.60206	i / 5
-0.60206	i / Q	0
-0.1760913	k / 2
-0.1760913	u / 5	-0.1760913
-0.2477845	( 0 )	-0.08497965
-0.6627578	( 0 ,
-0.7596679	( 0 <
-0.243038	, 0 )	-0.3817651
-0.4349236	, 0 ,	-0.3600078
-1.389166	, 0 >
-0.39794	: 0 )	-0.06494078
-0.5228788	: 0 ,	-0.4443287
-0.69897	: 0 ;	-0.20412
-0.4771213	< 0 )	-0.2246416
-0.2340832	< 0 ?	-0.06694679
-0.2218488	<s> 0 ;	-0.3802113
-1.176091	= 0 )	-0.1454604
-0.4771213	= 0 ,	-0.1668833
-1.273001	= 0 :	-0.4607309
-0.2730013	= 0 ;	-0.06126964
-0.60206	> 0 &&
-0.60206	> 0 ?
-0.04139268	? 0 :	-0.0135728
-0.04575749	[ 0 ]	0
-0.1249387	return 0 ;	-0.4088564
-0.30103	& 1 )
-0.69897	( 1 )
-0.9208187	( 1 ,	-0.4409091
-0.39794	( 1 -	-0.1053432
-0.79588	( 1 <<
-0.1760913	*= 1 -
-0.5698753	+ 1 )	-0.0830763
-0.9378521	+ 1 ,
-0.6368221	+ 1 ;	-0.01472324
-1.113943	+ 1 ==	0
-0.6368221	+ 1 ]	-0.3659708
-0.1760913	+= 1 ;
-0.30103	, 1 )	-0.01806399
-0.3467875	, 1 ,	-0.0729323
-1.278754	- 1 &	0
-0.6766936	- 1 )	-0.164192
-1.102662	- 1 ,
-0.5797836	- 1 ;	-0.01472324
-0.7346855	- 1 ]	-0.395129
-0.1760913	<< 1 )
-0.5835766	= 1 ,	-0.2253093
-0.7596679	= 1 -
-0.4074853	= 1 ;	-0.06587577
-1.060698	= 1 <<
-0.1249387	? 1 :	-0.2552725
-1.021189	[ 1 <<
-0.06694679	[ 1 ]	-0.01918334
-0.30103	* 10 +	0
-0.39794	= 10 ;
-0.1760913	& 1023 |	0
-0.1760913	< 14 &
-0.1760913	>> 14 &
0	= 14695981039346656037ULL ;	0
-0.39794	& 15 )	0
-0.39794	& 15 ,
-0.1760913	( 16 ,
-0.30103	* 16 ;	0
-0.1249387	, 16 )	-0.30103
0	) 16u )
-0.30103	% 2 *
-0.4771213	% 2 ?
-0.5006024	( 2 )	-0.1233849
-0.9777236	( 2 *	-0.4191293
-0.3245111	( 2 ,	-0.1760913
-0.7403627	* 2 )	-0.3802113
-0.7403627	* 2 +
-0.5228788	+ 2 )
-0.69897	+ 2 ;
-0.69897	+ 2 ]	-0.3174204
-0.1760913	+= 2 )
-0.20412	, 2 )	-0.154902
-0.4771213	- 2 *
-0.4771213	- 2 ,
-0.9542425	/ 2 %
-0.6532125	/ 2 )
-0.9542425	/ 2 +
-0.7781513	/ 2 ,	-0.4259687
-0.6532125	/ 2 ;
-0.39794	< 2 )
-0.39794	< 2 ?
-0.30103	<s> 2 )
-0.1760913	= 2 ;
-0.39794	> 2 )
-0.39794	> 2 *	-0.4191293
-0.1760913	>> 2 )
-0.05115252	[ 2 ]	-0.09017661
0	/ 2. )	0
-0.1760913	< 20 ?
-0.3679768	% 3 )	-0.4288166
-0.3679768	% 3 *
-0.30103	& 3 )
-0.4771213	& 3 ;
-0.4149733	( 3 )
-0.8129134	( 3 *
-0.6368221	( 3 -
-0.39794	* 3 +
-0.30103	+ 3 ]
-0.39794	, 3 +	-0.2552725
-0.60206	- 3 )
-0.4259687	- 3 ]	-0.3143939
-0.4771213	= 3 ,	-0.3309932
-0.30103	= 3 ;
-0.04575749	[ 3 ]	-0.2272438
-0.1760913	>> 31 ;
-0.1760913	, 32 ,
-0.1249387	- 32 )
-0.1760913	<< 32 ;
-0.1760913	>> 32 <<	0
-0.1760913	[ 32 ]	0
0	- 33 )
-0.4771213	% 4 )	-0.4376127
-0.2218488	( 4 )	-0.1365827
-0.69897	( 4 -
-0.6690068	* 4 )
-0.845098	* 4 -
-0.845098	* 4 ;
-0.6690068	* 4 |
-0.1760913	+ 4 )
-0.60206	/ 4 *
-0.4259687	/ 4 +	0
-0.1760913	<< 4 )	-0.4376127
-0.30103	= 4 ,
-0.4771213	= 4 ;
-0.03778856	[ 4 ]	-0.04139268
-0.1249387	>> 40 )
0	( 41 )	0
0	& 4190208 |
-0.1760913	( 42 )
-0.07918125	( 5 )	-0.455932
-0.30103	/ 5 )
-0.1760913	= 5 ,
-0.1760913	== 5 )
-0.30103	> 5 ?
-0.07918125	[ 5 ]	-0.09691003
-0.1760913	<< 56 ;	0
-0.1760913	, 6 )	-0.30103
-0.39794	- 6 ;
-0.1760913	<< 6 *	0
-0.30103	= 6 ,	0.1249388
-0.1249387	[ 6 ]	-0.1760913
-0.1760913	< 60 )
-0.30103	& 63 )	0
-0.1760913	( 64 ,
-0.4771213	= 7 ,
-0.1760913	[ 7 ]
-0.1760913	* 768 ]
-0.1760913	( 8 +
-0.1249387	/ 8 )
-0.3679768	<< 8 ,
-0.544068	<< 8 |	0
-0.1760913	= 8 ,
-0.69897	>> 8 &
-0.5228788	>> 8 ,	-0.4045706
-0.5228788	>> 8 ;	-0.30103
-0.1760913	? 8 :
-0.1249387	[ 8 ]
-0.04575749	* 80 +	0.04575729
-0.30103	- 9 )
-0.1760913	[ 97 ]
-0.30103	) : (
-0.60206	) : 0	-0.3802113
-0.5563025	0 : (	-0.1597009
-0.5563025	0 : 0	-0.2430381
-0.39794	1 : 0
-0.30103	<s> : (
-0.30103	c : %
-0.1249387	glu : gln	0
-0.9294189	( ; (
-0.7533277	( ; *
-0.7533277	( ; ;	-0.4259688
-0.9294189	( ; K	-0.3521825
-0.9294189	( ; g
-0.7533277	( ; n
-2.176091	) ; (
-1.875061	) ; )
-2	) ; ;
-0.3341064	) ; </s>
-2.176091	) ; L
-1.875061	) ; P	0.30103
-2.176091	) ; X	0
-2.176091	) ; Y	0
-1.875061	) ; a
-1.363178	) ; b	-0.1597008
-2.176091	) ; f
-1.246672	) ; for	0
-2.176091	) ; i	-0.3679768
-2	) ; if	0.5118833
-2	) ; o	-0.1346986
-2.176091	) ; return
-2.176091	) ; s	0.1249388
-2.176091	) ; t
-2	) ; u	0.08715019
-1.69897	) ; w	-0.3631779
-1.632023	) ; z	-0.2653144
-2.176091	) ; {
-0.8973377	) ; }	-0.2138128
-0.4393327	++ ; </s>
-0.7403627	++ ; for	0.4121805
-0.8372727	0 ; </s>
-1.439333	0 ; O
-1.263241	0 ; a	-0.4149733
-1.439333	0 ; b
-1.439333	0 ; d
-1.439333	0 ; for	0.4121805
-1.439333	0 ; g	-0.07918125
-1.138303	0 ; i	-0.1249387
-1.439333	0 ; j
-1.439333	0 ; k
-0.69897	0 ; }	0.003026456
-0.31627	1 ; </s>
-0.1760913	14695981039346656037ULL ; </s>
-0.1760913	16 ; </s>
-0.1760913	16711935 ; z	-0.4288166
-0.8129134	2 ; </s>
-0.6368221	2 ; }	-0.3733718
-0.39794	32 ; </s>
-0.1760913	56 ; }
-0.4771213	8 ; </s>
-0.4771213	8 ; G	0.1249388
-0.1760913	9 ; )
-0.4771213	; ; )	-0.3646991
-0.4771213	; ; </s>
-0.7781513	<s> ; )
-0.7781513	<s> ; }
-0.1760913	A ; </s>
-0.1760913	B ; </s>
-0.2218488	E ; </s>
-0.3424227	H ; </s>
-0.5642715	H ; d
-0.7403627	H ; return	-0.2730013
-0.4771213	I ; </s>
-0.30103	K ; </s>
-0.1760913	Q ; </s>
-0.06694679	Y ; </s>
-0.3590219	] ; </s>
-0.90309	] ; _	-0.4259688
-1.028029	] ; int
-0.1760913	a ; </s>
-0.1597008	b ; </s>
-0.8129134	b ; K	-0.3521825
-0.39794	be ; n
-0.39794	be ; u	0.08715019
-0.30103	bf ; b
-0.2218488	break ; </s>
-0.69897	break ; }
-0.7781513	d ; *	-0.3521825
-0.3802112	d ; </s>
-0.1597008	e ; </s>
-0.6368221	e ; }
-0.08297423	g ; </s>
-0.05115252	gln ; </s>
-0.07918125	h ; </s>
-0.3424227	i ; </s>
-0.1760913	j ; </s>
-0.3802112	l ; </s>
-0.60206	l ; d
-0.7781513	l ; l
-0.2218488	n ; </s>
-0.1760913	not ; </s>
-0.02227639	o ; </s>
-0.4149733	p ; </s>
-0.8129134	p ; for	0.4121805
-0.1760913	q ; </s>
-0.1760913	r ; </s>
-0.1249387	s ; </s>
-0.1760913	tla ; </s>
-0.4259687	trp ; </s>
-0.30103	trp ; xor	0.146128
-0.1249387	u ; </s>
-0.1760913	unk ; xor	0.3679768
-0.30103	v ; r	-0.30103
-0.30103	val ; ++	-0.447158
-0.3802112	val ; </s>
-0.146128	w ; </s>
-0.1249387	x ; </s>
-0.1760913	xor ; </s>
-0.1383027	y ; </s>
-0.09691001	z ; </s>
-0.4771213	} ; w
-0.4771213	) < 14	0
-0.4259687	0 < i
-0.1760913	O < b
-0.1760913	] < _	0
-0.1760913	_ < %
-0.1760913	a < 6
-0.30103	g < 79
-0.1760913	s < 0	-0.30103
-0.07918125	xor < not	0.06694674
-0.4771213	) << (
-0.6532125	1 << 18
-0.1760913	32 << 8	-0.3309932
-0.1760913	b << 56	0
-0.544068	h << 8
-0.1760913	( = ,	0
-0.30103	) = (
-0.1249387	++ = *
-0.1760913	, = )	0
-0.4771213	K = K	-0.1760913
-1.079181	O = *	-0.2272438
-0.6812412	O = 0	0.09691
-0.90309	O = 3	-0.30103
-1.079181	O = 6	-0.1760913
-1.079181	O = 7	-0.30103
-1.079181	O = 8	0
-0.1760913	Q0 = 0	-0.30103
-0.69897	Y = f	0.2632414
-0.9472936	] = (	-0.4191293
-0.8381492	] = 0	-0.539912
-1.31527	] = 10	-0.2552725
-1.491362	] = 32
-1.31527	] = </s>
-1.31527	] = O	-0.1249388
-1.491362	] = a
-1.491362	] = h	-0.30103
-1.491362	] = m
-1.491362	] = n
-1.01424	] = o	-0.2138798
-1.491362	] = x
-1.491362	] = y
-1.190332	] = {
-0.30103	_ = x	-0.3802113
-0.1760913	_0 = 0	-0.30103
-0.8750613	a = 0	-0.1461281
-0.8750613	a = b	-0.2730013
-0.9294189	b = K	-0.30103
-0.7533277	b = b	-0.3521825
-0.9294189	b = c
-0.1760913	bA = bz
-0.7403627	c = &	-0.2552725
-0.5642715	c = 0	-0.447158
-0.7403627	c = v
-0.845098	d = *
-0.544068	d = f	0.1383027
-0.5642715	e = d	-0.2730013
-0.9378521	g = (
-0.9378521	g = 0	-0.1461281
-1.113943	g = 1
-1.113943	g = _	0.4771213
-0.9378521	g = g	0
-1.113943	g = getchar	0
-1.113943	g = pow	0
-0.69897	h = -
-0.69897	h = 14695981039346656037ULL	0
-0.6232493	i = 0	-0.3679768
-0.4149733	j = 0	-0.3679768
-0.5642715	k = 0	-0.1461281
-0.7781513	l = i
-0.1760913	lys = trp	0.4259687
-0.6532125	m = (
-0.6532125	m = -	-0.3521825
-0.845098	n = (
-0.845098	n = b
-0.7596679	o = 0	0.02996323
-0.8846066	o = 1	-0.394147
-0.8846066	o = Q	-0.30103
-0.8846066	o = _	0.3521825
-0.8846066	o = i
-0.9542425	p = -	-0.2900346
-0.9542425	p = 1
-0.9542425	p = </s>
-0.9542425	p = h
-0.9542425	p = q
-0.6532125	q = o	-0.3388186
-0.6532125	r = 0
-0.6532125	r = </s>
-0.6532125	r = l
-0.9542425	s = -
-0.9542425	s = 0
-0.39794	sec = gln	0.2218488
-0.7403627	t = -
-0.30103	tyr = &	-0.2552725
-0.544068	v = 0
-0.544068	x = y	-0.1918855
-0.243038	xor = trp	0.20412
-0.544068	xor = unk	0
-0.7269987	y = -	-0.2900346
-0.90309	y = N	-0.07918125
-0.90309	y = h
-0.90309	y = y	-0.2218488
-0.1760913	1 == b	0
-0.3679768	) > 0
-0.60206	] > 2	-0.2552725
-0.60206	] > _	-0.1760913
-0.1760913	o > i
-0.1249387	) >> 8
-0.1760913	8 >> 40	0.1249388
-0.1760913	cys >> 2	0
-0.1760913	o >> 32	0
-0.7403627	) ? (
-0.5642715	) ? glu	0
-0.4771213	0 ? 0	0.4393327
-0.1760913	by ? 0	0.5642715
-0.544068	( A ->	0
-0.544068	( A =
-0.30103	, A ,
-0.1760913	< A ->	0
-0.39794	<s> A =
-0.2218488	( B &
-0.1760913	+ B ->	0
-0.6532125	, B )
-0.6532125	, B ,
-0.3521825	, B R	0
-0.30103	= B ->
-0.06694679	b B &
-0.9294189	( C ,
-0.9294189	( C /	0
-0.9294189	( C ==
-0.6283889	( C >
-0.39794	* C )	-0.07918125
-0.39794	* C *	0
-0.4771213	, C )
-0.1760913	<s> D (
-0.1760913	= D [	-0.1760913
-0.1760913	( E *	-0.3802113
-0.1760913	+= E ;
-0.30103	, E ,	-0.2552725
-0.1249387	<s> E *	-0.2552725
0	) E3 (	0
-0.1760913	!= EOF )
-0.1760913	[ EOF ]	0.1249388
-0.69897	( F ,
-0.5228788	( F -	-0.2552725
-0.69897	( F <
-0.1760913	) F (	-0.30103
-0.1760913	+= F *	0
-0.1760913	, F ,	-0.1249387
-0.1760913	; F =
-0.1760913	<s> F =
-0.30103	= F (
0	( FILE *	-0.07918125
0	<s> FILE *
-0.09691001	( G (	-0.5824645
-0.03778856	) G (	-0.07978909
-0.1760913	, G [
-0.1249387	; G [
-0.09691001	+= H ;	-0.03778857
-0.39794	, H ,
-0.39794	, H =
-0.1249387	-= H ;	-0.2138799
-0.1249387	; H =
-0.07918125	<s> H *	-0.0457575
-0.1760913	[ H ]	0
-0.1760913	{ H =
-0.39794	( I )
-0.39794	( I -	0
-0.30103	* I (	-0.3467875
-0.4771213	* I ;
-0.09691001	, I =
-0.1760913	- I (
-0.1249387	; I =
-0.2218488	= I +
-0.1760913	? I :
-0.1760913	b I ==
-0.09691001	) J (
-0.69897	( K )
-0.5228788	( K ->
-0.69897	( K =
-0.1249387	* K )	-0.30103
-0.8129134	, K ,
-0.1139434	, K ->	-0.3136192
-0.60206	; K !=	0
-0.60206	; K =	-0.30103
-0.30103	<s> K (	-0.2552725
-0.30103	= K ->	-0.4855545
-0.4771213	= K ;	-0.1760913
-1.361728	( L )
-0.06069784	( L ,	-0.7975796
-1.361728	( L ==
-0.1760913	) L ,	-0.3928004
-0.30103	* L -
-0.4771213	, L )	-0.3679768
-0.30103	, L ,
-0.39794	; L =
-0.39794	; L >>
-0.30103	= L )
-0.1760913	? L -
-0.20412	[ L ]	0.06694686
-0.2218488	( M ,
-0.3679768	<s> M =
-0.39794	( N (	-0.3723859
-0.39794	( N )
-0.1249387	+ N (
-0.1383027	, N ,	0.04575747
-0.1760913	<s> N (
-0.2218488	= N (
0	== NULL )	0.1249388
-0.07918125	! O )	-0.2596373
-0.9542425	( O ,
-0.2138798	( O =	-0.2352127
-0.1760913	* O )
-0.1918855	, O =	-0.2507249
-0.1760913	= O (	-0.2552725
-0.1760913	[ O +
-0.1760913	{ O =
-0.09691001	* O0 -	0
-0.243038	, O0 +=	0.09691003
-0.544068	, O0 =
-0.30103	( O2 =
-0.1760913	! O9 --
-0.1760913	- OO )
-0.1760913	= OO -
-0.09691001	) O_ (	-0.39794
-0.1760913	= O_ (
-0.1249387	( O_o )
-0.1760913	( P )
-0.05799195	; P (	-0.0669468
-0.1249387	<s> P (
-0.06694679	% Q ]	-0.6154239
-0.6283889	( Q )	-0.1549019
-0.9294189	( Q =
-0.9294189	( Q [	-0.2730013
-0.9294189	( Q ]
-0.6283889	( Q ^
-0.5642715	* Q (
-0.5642715	* Q )	-0.4101745
-0.7403627	* Q ;
-0.06694679	*= Q (	-0.1983676
-0.7781513	, Q )
-0.7781513	, Q =
-0.1760913	/ Q ]
-0.30103	<s> Q [	-0.1760913
-0.30103	= Q (
-0.5228788	= Q [	-0.1760913
-0.1760913	( Q0 +
-0.39794	, Q0 +=
-0.39794	, Q0 =
-0.1760913	, Q2 +	0
-0.30103	* Q3 ,	0
-0.1760913	! QO *
-0.1249387	( QO =
-0.1760913	, QO &&
-0.1760913	* QQ +
-0.1760913	> QQ )
0	) QR (	0
0	= Q_ (	-0.30103
-0.6532125	( R %
-0.3521825	( R ,	-0.2218488
-0.03140846	, R )	-0.06424087
-1.332438	, R </s>
-0.1760913	= R %
-0.09691001	B R )	-0.2615214
0	, SEEK_SET )	0
-0.4259687	( T [
-0.30103	( T d	0
-0.1760913	, T l	0
-0.1760913	? T [
-0.39794	( U )
-0.39794	( U ,
-0.1249387	, U ,
-0.30103	<s> U =
-0.1760913	+= V *
-0.1760913	<s> V =
-0.60206	( W (
-0.4259687	( W )	-0.1760913
-0.60206	( W [	-0.07918125
-0.3679768	, W ,	0
-0.544068	, W [
-0.1760913	- W /
-0.07918125	; W (
-0.1249387	<s> W (
-0.1760913	[ W *	0
-0.1249387	} W (	-0.3222193
-0.4057654	( X )	-0.1383027
-0.447158	( X ,	-0.02996323
-0.9700368	( X </s>
-0.60206	* X )
-0.1760913	; X =
-0.30103	( Y ,
-0.39794	* Y +	0
-0.1760913	*= Y ;	0.3679768
-0.1760913	+= Y *
-0.1760913	, Y )
-0.1760913	; Y (	0.2218488
-0.7781513	<s> Y ->
-0.1760913	<s> Y =	-0.02802872
-0.544068	<s> Z *=
-0.544068	<s> Z +=
-0.1760913	= Z ;
-0.4771213	) [ ]
-0.30103	D [ (
-0.4259687	Q [ d	-0.1760913
-0.30103	Q [ k	0.09691003
-0.4259687	T [ i	-0.3521825
-0.2218488	W [ r	-0.1760913
-0.3617278	_ [ _	0
-0.2825466	_ [ __	0.01703334
-0.6532125	a [ d
-0.4771213	a [ n	-0.1760913
-0.5228788	b [ L	-0.05115253
-0.69897	b [ i
-0.69897	b [ x
-0.69897	b [ y
-0.69897	e [ 1	0.3679768
-0.1760913	his [ ]	-0.30103
-0.1760913	k [ 1	0.3679768
-1.130334	not [ leu	0
-1.130334	not [ not
-0.08894108	not [ xor	0
-0.90309	o [ 3	0.39794
-0.90309	o [ 4	0.4771212
-1.079181	o [ O	0
-0.6812412	o [ g	0
-0.90309	o [ h	0
-1.079181	o [ m	0
-1.079181	o [ t
-0.2340832	p [ -	0.08795516
-0.7781513	p [ 1	0.3679768
-0.39794	t [ i
-0.1760913	tyr [ EOF	0
-1	u [ -	-0.3679768
-0.7781513	u [ 0	0.2218487
-0.7781513	u [ 1	0.146128
-1	u [ 2	0.3521825
-0.8750613	u [ 3	0.39794
-0.7781513	u [ 4	0.3010299
-1	u [ 5	0.1760913
-0.09691001	y [ optind	0
-0.09691001	z [ L	0.1249388
-0.90309	) ] )	-0.1180993
-0.9822713	) ] *	-0.5093059
-1.20412	) ] +	-0.4637573
-1.20412	) ] ++	-0.30103
-1.20412	) ] -	-0.359022
-1.380211	) ] /	0
-0.90309	) ] ;	-0.4860761
-1.380211	) ] <	0
-1.380211	) ] >	-0.3521825
-0.60206	) ] _	0.03476214
-0.4771213	++ ] )
-0.30103	++ ] =
-0.6532125	0 ] ;
-0.4771213	0 ] =	-0.4628808
-0.7923917	1 ] )	-0.19382
-1.190332	1 ] +
-1.01424	1 ] ,
-1.190332	1 ] .	-0.2082759
-0.7923917	1 ] ;	-0.4490925
-0.5371192	1 ] =	-0.3922998
-0.6368221	2 ] ,
-0.5118834	2 ] =
-0.90309	3 ] )
-0.90309	3 ] *
-0.7269987	3 ] ,
-0.50515	3 ] =
-0.1760913	32 ] ,
-0.7781513	4 ] *
-0.7781513	4 ] *=	0
-0.4771213	4 ] ,
-0.60206	5 ] =
-0.30103	6 ] ,
-0.39794	7 ] ,
-0.1760913	99 ] =
-0.1760913	<s> ] ;
-0.1249387	EOF ] ;	-0.3521825
-0.1760913	H ] =
-0.544068	L ] .	-0.3174204
-0.243038	L ] =	-0.2568263
-0.90309	Q ] =	-0.4329176
-0.7269987	Q ] >	-0.3521825
-0.4771213	[ ] )
-0.2552725	[ ] =	-0.3689763
-0.1760913	d ] .
-0.1249387	k ] .	-0.2082759
-0.1760913	optind ] )	-0.2730013
-0.1760913	p ] ,
-1	xor ] !=	0
-1	xor ] &
-0.8239087	xor ] )	-0.4191293
-0.8239087	xor ] ;	-0.3521825
-0.69897	xor ] =	-0.550031
-1	xor ] >>
-0.1760913	% _ (
-0.1760913	& _ f	0
-1.403692	( _ (	-0.4487877
-1.278754	( _ )	-0.5805203
-0.1404509	( _ ,	-0.3463004
-0.8394209	( _ [	0.3203353
-1.579784	( _ _	-0.08715019
-0.2632414	) _ (	-0.7247069
-0.5642715	) _ [	-0.2293368
-0.8016323	* _ </s>
-0.6766936	* _ [	0.6627579
-0.3756636	* _ _	-0.5131189
-0.07918125	+ _ [	-0.3786349
-0.9576757	, _ (	-0.9318324
-0.6805578	, _ )	-0.8861271
-0.1795244	, _ ,	-0.001943231
-1.802774	, _ </s>
-0.1249387	- _ [	-0.1567861
-0.4259687	. _ =	-0.1760913
-0.1760913	/ _ [
-0.1760913	: _ )
-0.3521825	; _ (	-0.2775489
-0.4771213	; _ [	-0.2817249
-0.1760913	< _ [	-0.2293368
-0.60206	<s> _ (
-0.4259687	<s> _ [	-0.1567861
-0.60206	<s> _ _	-0.08715019
-0.05115252	= _ (	-0.2823478
-0.30103	> _ [	-0.2293368
-1.021189	[ _ (	0.03820434
-0.06694679	[ _ _	-0.8887826
-0.03476211	] _ _	-0.9802559
-0.2272438	_ _ (	-0.9898244
-1.431364	_ _ <	0
-1.431364	_ _ </s>
-0.9542425	_ _ [	0.5166299
-0.7781513	_ _ _	-0.4259688
-1.431364	_ _ __	0
-0.39794	( _O %
-0.1760913	, _O =
-0.1760913	, _Q =
-0.1760913	% __ (	0
-0.1760913	) __ (
-0.1760913	* __ (	-0.4168254
-0.1249387	+ __ (
-0.2340832	, __ (	-0.154097
-0.7781513	, __ </s>
-0.7781513	, __ =
-0.154902	- __ (	-0.7561569
-0.69897	- __ )
-0.1760913	<s> __ (
-0.1760913	= __ &	0
-0.01703334	[ __ (	-0.9378521
-0.1760913	_ __ (	0
-0.02482358	) ____ (	0.04575753
-0.1760913	<s> ____ (	0.8239088
-0.1760913	&& a ->
-0.8750613	( a &
-0.8750613	( a ,
-0.5740313	( a =	-0.2388821
-0.1760913	* a ,	-0.3899711
-0.69897	, a (
-0.30103	, a ,	-0.2596373
-0.69897	, a ->
-0.30103	-> a =
-0.8750613	; a (	-0.3222193
-0.8750613	; a ++	0
-0.8750613	; a <
-0.5740313	; a [
-0.1760913	< a ->
-0.5642715	<s> a (
-0.4393327	<s> a =	-0.2388821
-0.39794	= a [
-0.1760913	{ a =
-0.1760913	( ala *	0
-0.1760913	const ala not	0
-0.01930515	( and )	0
-0.30103	<s> and *
-0.544068	const and his	0
-0.1760913	& arg )
-0.1760913	( argh ,
-0.09691001	( asn .	0.3802112
-0.1760913	- asn .	-0.09691003
-0.1249387	<s> asn .	-0.09691003
-0.1760913	( asp -	0
0	, au )	0
-0.1760913	!= b ;	-0.4045706
-0.6532125	( b &&
-0.6532125	( b ,
-0.6532125	( b =
-0.30103	* b ;	-0.1870866
-0.4771213	, b )	-0.2730013
-0.6532125	, b =
-0.7781513	-> b =
-0.2340832	-> b [	-0.3802112
-0.7781513	; b !	-0.07572071
-1.176091	; b </s>
-1	; b =
-1.176091	; b B	0.3679768
-0.7781513	; b I	-0.2218488
-0.1760913	<s> b =	-0.3258536
-0.60206	= b ->	-0.30103
-0.4259687	= b ;	-0.09017664
-0.1760913	== b ->
-0.5642715	{ b bf	-0.2552725
-0.1760913	| b <<	0
-0.3679768	} b B	0.243038
-0.1760913	= bE .
-0.1760913	* bb =
0	{ bc (
-0.1760913	) bd (
-0.1760913	+= be ;
-0.1760913	-= be ;
-0.1760913	+= bf ;
-0.1760913	, bf )	-0.1760913
-0.1760913	-= bf ;	-0.1760913
-0.39794	b bf &&	0.1249388
-0.39794	b bf )
-0.1760913	; bh (
-0.1760913	( bk ,
0	= bp (
-0.1249387	) break ;
-0.06694679	<s> break ;	-0.447158
-0.4259687	( c =
-0.30103	* c ++
-0.39794	, c ,
-0.1760913	. c =	-0.3899711
-0.1760913	int c ,
0	= calloc (
-0.05799195	( char *	-0.4191293
-0.06694679	, char *	-0.690196
-0.1249387	; char *
-0.1760913	<s> char *
-0.1760913	( const ala	0
-0.39794	* const his	0
-0.39794	* const not	0
-0.39794	, const and	-0.3309932
-0.39794	, const pro	0.1249388
-0.2552725	<s> const and
-0.6532125	<s> const ser
-0.39794	( cys -
-0.39794	( cys >>	0
-0.4771213	* d =
-0.1760913	+ d ;
-0.1760913	+= d ;	-0.2430381
-0.5740313	, d )	0.2552725
-0.4771213	, d ,	-0.5228788
-0.8750613	, d =
-0.39794	- d *
-0.39794	- d ;
-0.1760913	-= d ;	-0.2430381
-0.544068	; d +=	-0.2138798
-0.6690068	; d /=
-0.845098	; d =
-0.8750613	<s> d *=
-0.4771213	<s> d +=	-0.1346986
-0.8750613	<s> d -=	-0.30103
-0.4771213	<s> d =	-0.251812
-0.4259687	= d +	-0.3309932
-0.60206	= d ;
-0.09691001	T d ,	-0.5228788
-0.30103	[ d ]	0
-0.30103	return d -
-0.39794	{ d -=	-0.30103
-0.09691001	<s> do {	0
0	, dstr )	0
-0.60206	( e )	-0.1760913
-0.4259687	( e ,	-0.3679768
-0.1760913	) e =	-0.3388186
-0.60206	* e =
-0.1760913	+= e ;	0.03476211
-0.5642715	, e ,	-0.3679768
-0.7403627	, e =
-0.4393327	, e [	-0.20412
-0.30103	. e ;	0.03476211
-0.69897	<s> e +=
-0.30103	<s> e ->	0.07918113
-1	<s> e =
-0.845098	= e ->
-0.6690068	= e .
-0.447158	= e ;	0.3357921
-0.845098	= e [
-0.1760913	<s> else </s>
-0.06694679	} else {	-0.04441914
0	<s> err (	0.07918125
0	) exit (	-0.2552725
0	<s> exit (	-0.2552725
0	= exp (	0.1249388
0	} extern void
-0.455932	( f )	-0.2430381
-0.3467875	( f ,	-0.4393327
-1	( f =
-0.06694679	, f ,
-0.1249387	; f =
-0.08715018	= f (	-0.2082759
-0.1760913	_ f }
-0.39794	w f ,	-0.4259687
-0.03778856	) for (	-0.1600825
-0.05999793	; for (	-0.07528618
-0.8893017	; for </s>
-0.0211893	<s> for (	-0.2542866
-0.04575749	{ for (	-0.1177447
-0.1249387	} for (
0	= fread (
0	<s> free (	-0.09691003
0	<s> fseek (
0	w fw )
-0.7269987	( g )
-0.90309	( g +
-0.7269987	( g ,
-0.60206	( g =	-0.2477845
-0.1091445	* g ;	-0.1434221
-0.05115252	*= g ;	-0.1945747
-0.1760913	+ g ++	0.1249388
-0.30103	+= g ;	0.2825466
-0.3679768	, g ,
-0.3679768	, g =
-0.1760913	- g ;
-0.1249387	-= g *	-0.3802113
-0.2218488	; g <
-0.9378521	<s> g *=
-1.113943	<s> g +=
-0.9378521	<s> g -=
-0.1845244	<s> g =	-0.1165056
-0.1249387	= g *	-0.4471581
-0.39794	[ g *	-0.3802113
-0.39794	[ g +
-0.1760913	] g 9
0	= getchar (	0
-0.1760913	!= gln )	-0.1760913
-0.1760913	, gln )	-0.30103
-0.1249387	: gln ;	0.3521825
-0.09691001	= gln ;	0.2552725
-0.1760913	& glu )	-0.1760913
-0.1760913	, glu )	-0.30103
-0.1249387	? glu :	0
0	<s> gly (	-0.3309932
0	void gly (	-0.3309932
-0.1760913	!= h +	0
-0.7403627	( h -
-0.1962947	( h <<	0
-0.146128	, h ,	0
-0.39794	<s> h =	-0.20412
-0.4771213	= h (	0
-0.6532125	= h .
-0.6532125	= h ;
-0.1249387	[ h *	0
-0.1760913	} h =
-0.1760913	and his )
-0.1760913	const his [	0
-1.124939	( i )	-0.3631779
-0.7569619	( i ,	-0.451314
-1	( i -
-1.30103	( i /
-1.30103	( i <
-0.5228788	( i =	-0.05799194
-0.60206	+ i &&
-0.60206	+ i *
-0.7781513	+ i +
-0.7781513	+ i /
-0.1249387	++ i <
-0.09691001	+= i (
-0.6173	, i )	-0.3332147
-0.258278	, i ,	-0.2151153
-0.9852768	, i =
-0.60206	- i ;
-0.60206	- i ]
-0.4771213	; i <
-0.6532125	; i =
-0.07572071	<s> i (	-0.1127046
-1.09691	<s> i =
-0.60206	= i *
-0.60206	= i ;
-0.1760913	? i :
-0.4259687	[ i %	-0.1760913
-0.60206	[ i /	-0.3521825
-0.60206	[ i ]
-0.1249387	int i ;	-0.3388186
-0.1249387	| i >>
-0.06694679	) if (	-0.1434221
-0.03476211	; if (	-0.2014141
-0.01046543	<s> if (	-0.1207223
-0.07918125	{ if (
-0.07918125	} if (
-0.60206	( int )
-0.60206	; int *
-0.60206	; int </s>
-1.021189	<s> int </s>
-1.021189	<s> int I
-0.845098	<s> int i	0
-0.845098	<s> int main	0.243038
-0.544068	{ int X
-0.2218488	} int main	0.3679768
-0.154902	( j ,	-0.09177041
-1	( j =
-0.39794	, j )	-0.2730013
-0.69897	, j ,	-0.4227636
-0.5228788	, j =
-0.30103	- j %	0.1249388
-0.845098	-> j &&
-0.845098	-> j )
-0.447158	-> j +	-0.3309932
-0.845098	-> j =
-0.544068	; j =
-0.39794	<s> j *=
-0.39794	<s> j +=
-0.6283889	( k )	-0.4259688
-0.6283889	( k ,
-0.9294189	( k -	0
-0.5314789	( k =	-0.08354607
-0.1760913	* k ,
-0.1249387	, k ,
-0.30103	- k ;
-0.60206	; k ++	0
-0.7781513	; k <
-0.7781513	; k =
-0.7781513	; k [
-0.2218488	[ k ]	0
-0.60206	( l ,
-0.7781513	( l =
-0.1760913	) l (
-0.2218488	+= l ;	-0.3679768
-0.2218488	, l ,
-0.69897	, l =
-0.09691001	-= l ;	-0.2218488
-0.1249387	; l =
-0.1760913	<< l -	-0.1760913
-0.4393327	<s> l +=
-0.7403627	<s> l =
-0.09691001	T l )	-0.39794
-0.1760913	{ l =
-0.1760913	[ leu ]
-0.30103	; long long
-0.30103	unsigned long long
-0.4771213	unsigned long z	0
-0.2218488	( m ,	-0.3174204
-0.69897	( m >
-0.39794	, m ,	-0.4881167
-0.5228788	, m =
-0.69897	, m [
-0.30103	; m =
-0.4771213	= m ;
-0.1760913	[ m *	0
-0.1760913	{ m (	0.1249388
-0.1760913	; main (
-0.09691001	<s> main (	-0.3716111
-0.06694679	int main (	-0.3136191
-0.1760913	met main (	-0.4227636
0	= malloc (
-0.30103	( met )	0
-0.4771213	( met val	0
-0.1760913	<s> met main	0
-0.20412	( n ,	-0.1590579
-1.079181	( n =
-0.4771213	* n )
-0.30103	* n ;	-0.07918125
-0.39794	+ n +
-0.7533277	, n )	-0.3332147
-0.4522977	, n ,	-0.2477845
-0.243038	- n )	-0.3332147
-0.60206	-> n )	-0.4045706
-0.4259687	-> n ;	-0.20412
-0.60206	-> n =
-0.7403627	; n +=
-0.2632414	; n =	-0.1091445
-0.544068	= n ,
-0.544068	= n ;
-0.30103	[ n ]
0	<s> ndif </s>
-0.1249387	& not ,	-0.30103
-1.021189	( not )	0.4259687
-1.021189	( not ->
-0.1180993	( not .	-0.6948141
-0.09691001	* not .	-0.1896641
-0.1760913	++ not .	0.03218463
-1.079181	. not )	0.30103
-1.079181	. not =
-0.1583625	. not [	-0.4436975
-0.06694679	< not .	-0.69897
-0.69897	<s> not ->	-0.1760913
-0.154902	<s> not .	-0.3357921
-0.1249387	= not .	-0.3309932
-0.1760913	ala not )
-0.1760913	const not ,	-0.30103
-0.1760913	&& o [
-0.1383027	( o ,	-0.1383027
-0.7323937	* o )
-0.5862657	* o +
-0.5282738	* o -
-0.8293038	* o ;	0.60206
-0.04139268	*= o ;	0.2596374
-0.1760913	+= o *
-0.69897	, o )	-0.3679768
-0.4771213	, o ,
-0.4771213	, o [	-0.1638568
-0.1760913	- o *
-0.4393327	; o =
-0.2632414	; o [	-0.07463361
-0.9777236	<s> o +=
-0.9777236	<s> o -=	0
-0.1648103	<s> o =	-0.2750943
-0.5642715	= o ;	0.8239088
-0.7403627	= o >>	0
-0.5642715	= o [	-0.4393327
-0.1760913	? o [	-0.3756636
-0.1249387	{ o =
-0.1760913	| o &
0	, of )	0
-0.30103	-> op &&	0
-0.1760913	<s> op =
-0.39794	[ optind +	0
-0.39794	[ optind ]	0
-0.30103	( p =
-0.69897	( p [
-0.5698753	* p ++	-0.3222194
-1.113943	* p ,
-0.7160034	* p ;	-0.01099539
-1.113943	* p =
-1.113943	* p ]	0
-1.113943	* p ^
-0.7781513	, p )	0
-0.4771213	, p ,
-0.60206	, p =
-0.7781513	, p [
-0.30103	- p /
-0.39794	. p </s>
-0.39794	; p ++
-0.1760913	<s> p =
-0.2218488	= p ;	-0.4045706
-0.1760913	? p =
-0.1249387	^ p [	-0.2218488
0	<s> phe (	-0.2552725
0	void phe (	-0.2552725
0	= pow (	0
0	<s> printf (
-0.1249387	const pro *	0
0	<s> putchar (
-0.1760913	( puts (
-0.1760913	<s> puts (
-0.39794	( q </s>
-0.3679768	* q ++	0
-0.544068	* q ;
-0.39794	. q ;	0
-0.39794	. q =	-0.3679768
-0.1760913	; q [
-0.1249387	= q +
-0.1760913	{ q =
-0.30103	) r =
-0.1760913	* r ++	-0.2552725
-0.30103	, r ,
-0.4771213	; r +	0
-0.4771213	; r =
-0.30103	[ r ++	-0.2552725
-0.1760913	{ r (
0	= realloc (
-0.4259687	; return d	-0.1760913
-0.60206	<s> return 0	0.1249388
0	<s> rewind (	0
-0.30103	&& s <	0
-0.1760913	) s =
-0.7403627	* s +
-0.7403627	* s ,
-0.7403627	* s =
-0.1760913	*= s ;	0.1249388
-0.07918125	+ s [
-0.1760913	++ s =
-0.3679768	, s ,
-0.1249387	; s =
-0.5118834	<s> s *=	0
-0.8129134	<s> s +=
-0.6368221	<s> s -=
-0.6368221	<s> s =
-0.1760913	( sec )	-0.2552725
-0.09691001	<s> sec =
-0.05115252	( ser )	0
0	, si ,	0
-0.1760913	( sizeof (
-0.09691001	, sizeof (	-0.1627273
-0.1249387	= sizeof (
-0.09691001	<s> static void	0
-0.09691001	typedef struct {	0
-0.09691001	( sym_ ,	0
-0.69897	( t )	-0.3899711
-0.69897	( t +
-0.69897	( t =
-0.1760913	+ t !=	0
-0.3273589	, t )	-0.1627273
-0.7533277	, t ,
-0.9294189	, t [
-0.30103	; t =
-0.39794	<s> t +=
-0.39794	<s> t =
-0.30103	= t ;
-0.39794	<s> thr xor
-0.1760913	++ tla ;	0
-0.05799195	= trp ;	0
-0.39794	<s> typedef struct	0
-0.1760913	& tyr [
-0.1760913	<s> tyr =	-0.1760913
-0.544068	( u /	0
-0.544068	( u =
-0.1760913	) u [
-0.3521825	* u )	-0.2167091
-0.1760913	+ u )
-0.4259687	, u )	-0.5477023
-0.90309	, u +
-0.60206	, u ,	-0.1918855
-0.7269987	, u [	-0.39794
-0.1760913	- u )
-0.7403627	; u =
-0.1383027	; u [	-0.06279083
-0.3679768	<s> u [
-0.1760913	= u [	-0.30103
-0.2218488	{ u [
-0.4771213	- unk )	-0.30103
-0.30103	- unk ]
-0.1760913	= unk ;	0
-0.1760913	>> unk )	-0.30103
-0.146128	<s> unsigned long	0.07918119
-0.1249387	! v ;	-0.1760913
-0.544068	, v =
-0.39794	- v )
-0.39794	- v .
-0.3679768	= v .
-0.90309	. val )	0
-0.30103	. val ;	0.1249386
-0.90309	. val =
-0.1760913	met val ,	0
-0.1760913	; void *
-0.2218488	<s> void </s>
-0.39794	static void gly	0
-0.39794	static void phe	0
-0.3679768	( w )	-0.3521825
-0.845098	( w ,
-0.6690068	( w f	-0.2552725
-0.1249387	) w (
-0.1249387	+= w ;	-0.05799198
-0.6532125	, w (
-0.6532125	, w =
-0.1760913	-= w ;	0.06694677
-0.2108534	; w (	-0.09691001
-0.8129134	; w .
-0.39794	<s> w +=
-0.69897	<s> w =
-0.1760913	{ w *
-0.30103	} w f
0	; while (	-0.6118199
0	<s> while (	-0.1221094
0	{ while (
0	} while (	-0.2596373
0	Q write (
-0.4771213	( x ,
-0.30103	+ x ,
-0.6368221	, x )
-0.2688453	, x ,	-0.03967271
-0.1760913	- x )
-0.7403627	-> x )
-0.3424227	-> x ,	-0.6159958
-0.7403627	-> x =
-0.07918125	; x =
-0.69897	= x .	0.1249388
-0.5228788	= x ;	0
-0.1760913	int x ,
-0.1760913	w x ,	-0.4376127
-0.1760913	{ x =
-0.1249387	( xor =	0
-0.06694679	++ xor )	0
-0.06694679	; xor <	0
-1.060698	[ xor -	0
-0.06069784	[ xor ]	0
-0.1760913	&& y <
-0.8129134	( y )
-0.6368221	( y [	0.2218488
-0.8129134	( y ^
-0.1249387	* y )
-0.30103	, y ,
-0.60206	, y [	0.2218488
-0.2632414	-> y )	-0.39794
-0.7403627	-> y =
-0.69897	. y +	0.2218488
-0.5228788	. y =
-0.4771213	; y (
-0.30103	; y =
-0.4771213	<s> y ->	-0.20412
-0.4771213	<s> y =	-0.243038
-0.3521825	= y ;	-0.03778857
-0.6532125	= y =	-0.3869447
-0.1760913	int y ;
-0.09691001	( z (
-0.1249387	+ z *
-0.1326256	; z (	-0.07378622
-0.9777236	; z [	0.2218488
-0.544068	<s> z *=
-0.544068	<s> z +=
-0.544068	<s> z =
-0.1760913	= z [	0.2218488
-0.1760913	long z ;	0.2218488
0	( ze ,	0
-1.610128	) { *
-1.513218	) { .	-0.19382
-1.911158	) { ;
-0.4879117	) { </s>
-1.911158	) { H	0
-1.911158	) { O	0
-1.911158	) { a	0
-1.257945	) { b	-0.03778857
-1.911158	) { bc	0
-1.911158	) { c
-1.610128	) { d	-0.07918122
-1.911158	) { float
-1.257945	) { for	0
-1.513218	) { if	0.07918125
-1.36709	) { int	0
-1.911158	) { m
-1.735066	) { o	0
-1.735066	) { q	0
-1.911158	) { r
-1.911158	) { return
-1.513218	) { u	0
-1.735066	) { w	0
-1.911158	) { while	0
-1.911158	) { x	0
-1.513218	) { }
-0.06214791	<s> { </s>
-0.09691001	do { </s>
-0.4149733	else { </s>
-0.8129134	else { b
-0.09691001	struct { </s>
-0.3679768	) | (
-0.1760913	1023 | i	0.1249388
-0.1760913	8 | o	0
-0.1249387	) || (	-0.30103
-0.1760913	1 } )
-0.7269987	; } </s>
-1.057992	; } else	0.30103
-1.60206	; } f
-1.60206	; } for	0.1249388
-1.60206	; } h	0
-1.30103	; } if	0.07918125
-1.20412	; } int	0
-1.425969	; } w	-0.1760913
-0.672641	; } }	-0.04955879
-0.1556501	<s> } </s>
-1.140927	<s> } else	0
-1.618048	<s> } typedef
-1.317018	<s> } while	0
-1.618048	<s> } }
-0.9378521	} } </s>
-0.7160034	} } b	0.02118929
-0.6368221	} } }	-0.0621479

\4-grams:
-0.05799195	! ! ! !	0.05799198
-0.30103	if ( ! (
-0.1760913	) * ! (
-0.39794	; b ! O
-0.1760913	) ) != EOF	0
-0.1760913	; K != b	0
-0.1760913	xor ] != gln	0
-0.1760913	+ t != h	0
-0.1760913	, "> " ,	0
0	z ( "#" )	0
-0.1249387	2 , "%s" ,	0
0	1 , "> "	0
0	z ( "Q" )
-0.1760913	] , "r" )
-0.1760913	r ++ % Q	0.1249388
-0.1760913	[ i % 5
-0.1760913	- j % 4
-0.1249387	gly ( & not	0
-0.1760913	- 1 & 15	0
-0.1760913	c = & _	0
-0.1760913	tyr = & tyr	0
-0.1760913	= __ & 15	0
-0.1760913	b bf && s
-0.1760913	-> op && a	0
-0.1249387	',' , ',' ,	0
-0.05799195	__ ( '_' ,	0
-0.6197888	'_' , '_' )	0
-0.1191864	'_' , '_' ,	0
-0.544068	) && ( O	0.2218488
-0.60206	( ( ( and	0.2218488
-0.5642715	) ( ( (	-0.3521825
-0.7403627	) ( ( and	0.2218488
-0.5642715	) ( ( n	0.1760913
-0.30103	= ( ( (
-0.1760913	abs ( ( H
-0.30103	if ( ( i
-0.1249387	while ( ( i	-0.30103
-0.30103	R ) ( L	0.243038
-0.4771213	R ) ( R	0
-0.4393327	and ) ( (	-0.4357286
-0.3424227	and ) ( not	0
-0.2218488	i ) ( _	0
-0.1760913	of ) ( (
-0.1760913	ser ) ( (
-0.9542425	) * ( (
-0.9542425	) * ( *
-0.1760913	F * ( 1	0.3679768
-0.1760913	] * ( _	0
-0.7403627	) + ( C
-0.3424227	) + ( h	0
-0.1760913	Y + ( (
-0.1760913	] += ( i
-0.1760913	L , ( ,	0
-0.1760913	) - ( _O
-0.39794	0 : ( p	0
-0.146128	] = ( and	0.3010299
-0.1760913	) E3 ( X	0
-0.1760913	) F ( L	0
-0.09691001	( G ( L	0
-0.4393327	) G ( sym_	0
-0.1249387	* I ( o	0.09691
-0.1760913	<s> K ( k	0
-0.1760913	( N ( L	0.1249388
-0.4771213	= O ( -
-0.4771213	= O ( y	0
-0.1249387	) O_ ( %
-0.544068	; P ( a	0
-0.30103	*= Q ( C
-0.1760913	) QR ( L	0
-0.1760913	= Q_ ( O_o	0
-0.1760913	} W ( X	0.30103
-0.1760913	; Y ( )	0.1249388
-0.1760913	( _ ( f
-0.4771213	) _ ( _
-0.30103	) _ ( f	0.1760913
-0.01579427	, _ ( )	-0.6532125
-0.30103	; _ ( _	0.2218488
-0.60206	= _ ( j	0
-0.60206	= _ ( o	0
-0.1760913	[ _ ( )	-0.4429072
-0.01378828	_ _ ( )	-0.06975782
-0.1760913	% __ ( _	0.4890205
-0.1760913	* __ ( '_'	0.4259687
-0.544068	, __ ( '_'	0.4259687
-0.243038	, __ ( _	0.2671717
-0.06694679	- __ ( )	-0.3388186
-0.01703334	[ __ ( _	-0.4488316
-0.1760913	_ __ ( _
-0.02482358	) ____ ( _	0.04575753
-0.1760913	<s> ____ ( _	0.8239088
-0.1760913	; a ( X	0.1249388
-0.09691001	<s> err ( 2	0.07918125
-0.1760913	) exit ( 0	0
-0.1760913	<s> exit ( puts	0
-0.1760913	= exp ( -
-0.1760913	= f ( n	0
-0.5642715	) for ( ;
-0.5642715	) for ( i	0.3521825
-0.6532125	; for ( ;	-0.08591463
-1.130334	; for ( O	0
-1.130334	; for ( i	0.4771213
-0.9542425	; for ( p	0.1249388
-1.130334	; for ( z	0.1249388
-0.69897	<s> for ( ;	-0.5362427
-0.8239087	<s> for ( k	0.09691
-0.5228788	<s> for ( xor	0
-0.6532125	{ for ( ;
-0.6532125	{ for ( g	0
-0.2218488	<s> free ( not	0
-0.1249387	= getchar ( )	0
-0.09691001	<s> gly ( &	0
-0.1760913	void gly ( ala	0
-0.1760913	= h ( p	0
-0.845098	<s> i ( 0	0.09691
-0.845098	<s> i ( 1	0.09691
-0.845098	<s> i ( 2	0.09691
-0.845098	<s> i ( 3	0.09691
-0.845098	<s> i ( 4	0
-0.845098	<s> i ( 5	0
-0.4771213	) if ( *
-0.60206	; if ( L	0
-0.7781513	; if ( p
-0.7096938	<s> if ( !	-0.1249388
-1.311754	<s> if ( (
-1.135663	<s> if ( *	-0.2552725
-1.135663	<s> if ( K	0
-0.9138138	<s> if ( not	0
-1.311754	<s> if ( sec	0
-0.1760913	{ m ( i	0.1249388
-0.1249387	<s> main ( )	0.3679768
-0.3679768	int main ( )	0.243038
-0.3679768	int main ( int
-0.1760913	met main ( met	0
-0.1760913	<s> phe ( not	0
-0.1760913	void phe ( const	0
-0.1760913	= pow ( 2	0
-0.1760913	<s> rewind ( Q	0
-0.30103	, sizeof ( *
-0.60206	; w ( *
-0.60206	; w ( y
-0.39794	; while ( H
-0.39794	; while ( X
-0.60206	<s> while ( (	0
-0.7781513	<s> while ( 0	0
-0.30103	} while ( b	0
-0.6690068	; z ( "#"	0
-0.845098	; z ( (
-0.1760913	) || ( O	0
-0.1249387	( "#" ) )	0
-0.1760913	, "r" ) )
-0.30103	, '_' ) *	0
-0.1760913	) ( ) ;
-0.1249387	Y ( ) ;
-0.7403627	_ ( ) )	-0.6600518
-0.4973246	_ ( ) ,	0
-1.120574	_ ( ) -	0
-1.518514	_ ( ) ;
-1.217484	_ ( ) </s>
-1.120574	_ ( ) ]	-0.1426675
-0.6734159	_ ( ) ____	0.02802873
-0.5642715	__ ( ) )
-0.1962947	__ ( ) ]	-0.0669468
-0.1760913	getchar ( ) )
-0.06694679	main ( ) {
-0.1760913	rand ( ) %
-0.1249387	"#" ) ) ;	-0.4507923
-0.7201593	( ) ) )
-0.544068	( ) ) ,	0
-0.845098	( ) ) ;
-1.021189	( ) ) {
-0.6434527	) ) ) )	-0.2859662
-0.7403627	) ) ) ,	-0.30103
-1.041393	) ) ) ;
-0.6434527	) ) ) </s>
-0.8653014	) ) ) {	-0.4507924
-0.1760913	, ) ) </s>
-0.39794	1 ) ) *
-0.39794	1 ) ) ;
-0.39794	2 ) ) ;
-0.39794	<s> ) ) )
-0.1760913	Q ) ) )
-0.4771213	R ) ) )
-0.30103	R ) ) </s>
-0.30103	] ) ) ?	0
-0.1760913	_ ) ) _	0.2218488
-0.1760913	] ++ ) _	0
-0.1760913	( , ) )	0
-0.07918125	_ , ) ]
-0.1760913	, ... ) {
-0.2108534	( 0 ) ;	-0.01296496
-1.146128	, 0 ) ,
-0.146128	, 0 ) ;	-0.06334268
-0.9700368	, 0 ) {	-0.4471581
-0.4259687	: 0 ) ;
-0.60206	: 0 ) </s>
-0.30103	< 0 ) {
-0.39794	= 0 ) {
-0.544068	+ 1 ) )
-0.5228788	, 1 ) ;	-0.1760913
-0.30103	- 1 ) ;	0
-0.1760913	& 15 ) <	0
-0.1249387	, 16 ) ;	0
-0.4771213	( 2 ) ,
-0.1760913	* 2 ) *
-0.39794	, 2 ) ;
-0.1760913	/ 2. ) /	0
-0.1760913	% 3 ) )
-0.1760913	% 4 ) *
-0.4771213	( 4 ) +=	0
-0.1760913	<< 4 ) +
-0.1760913	( 41 ) ;
-0.39794	( 5 ) +=	0
-0.39794	( 5 ) ,
-0.1760913	, 6 ) ;	0
-0.1760913	& 63 ) -	0
-0.1249387	; ; ) {
-0.1760913	, = ) __	0
-0.1760913	* C ) ;	0
-0.1760913	* K ) </s>
-0.1760913	, L ) G	0
-0.1760913	== NULL ) {	0.1249388
-0.2218488	! O ) {	0
-0.30103	( Q ) ;	0.1249388
-0.1760913	* Q ) </s>
-0.8239087	, R ) (	0
-1.124939	, R ) )	-0.1760913
-0.6478175	, R ) </s>
-1.30103	, R ) F	0
-1.30103	, R ) G	0
-0.90309	, R ) J	0
-1.30103	, R ) L	0
-1.30103	, R ) QR	0
-0.30103	B R ) ,
-0.1760913	, SEEK_SET ) ;	0
-0.1760913	( W ) </s>
-0.5642715	( X ) ;
-0.7403627	( X ) </s>
-0.7403627	( X ) E3	0
-0.4771213	) ] ) +	-0.2552725
-0.2218488	1 ] ) ;	-0.09691003
-0.1760913	optind ] ) ;	-0.09691003
-0.1760913	xor ] ) )	-0.1760913
-0.1249387	( _ ) )	0
-0.9461246	, _ ) *	0
-1.247155	, _ ) +
-0.7700334	, _ ) ,	0
-1.122216	, _ ) </s>
-0.2929121	, _ ) ]	0.01579428
-1.247155	, _ ) ____	0
-0.30103	( and ) (	0
-1.041393	( and ) 16u	0
-0.1760913	, au ) [
-0.1760913	, b ) )
-0.1760913	, bf ) {	0
-0.09691001	, d ) ;	-0.30103
-0.1760913	, dstr ) (
-0.1760913	( e ) {
-0.544068	( f ) )
-0.3679768	( f ) ,
-0.1760913	!= gln ) {	0.1249388
-0.1760913	, gln ) ;	0
-0.1760913	& glu ) {	0.1249388
-0.1760913	, glu ) ;	0
-0.1760913	( i ) ;
-0.146128	, i ) (	0
-0.09691001	, j ) ;	0.07918125
-0.1249387	( k ) ;	0
-0.09691001	T l ) {	0
-0.1760913	( met ) tyr
-0.1249387	, n ) ;	0.243038
-0.1249387	- n ) ;	0.243038
-0.1760913	-> n ) {	0
-0.1760913	( not ) ;	0.4259687
-0.1249387	. not ) ;	0.30103
-0.1760913	, o ) )
-0.1760913	, of ) (	0
-0.1760913	, p ) ;
-0.1760913	( sec ) {	0
-0.60206	( ser ) (	0
-0.60206	( ser ) asx
-0.1760913	( t ) ;	0
-0.4259687	, t ) )
-0.60206	, t ) _
-0.30103	* u ) {
-0.30103	, u ) (
-0.4771213	, u ) ;
-0.1760913	- unk ) )
-0.1760913	>> unk ) ;	0
-0.1760913	. val ) {	0
-0.07918125	( w ) {	0
-0.06694679	++ xor ) {	0
-0.07918125	-> y ) ;	0.1249387
-0.39794	if ( * not	0.1249388
-0.1760913	'_' ) * __	0
-0.544068	2 ) * (
-0.1760913	6 ) * (
-0.06694679	_ ) * _	0.1249387
-0.4771213	char * * y	0
-0.1760913	2 , * Q3
-0.1760913	a , * b	0.1249388
-0.1760913	( 2 * o	0
-0.1760913	> 2 * u
-0.1760913	<< 6 * n
-0.1760913	d ; * s
-0.1760913	O = * p	0.3679768
-0.1760913	* C * C	0
-0.1760913	( E * K	0
-0.4771213	<s> E * a	0
-0.4771213	<s> E * e
-0.1760913	+= F * (	0
-0.1760913	( FILE * Q	0
-0.39794	<s> H * </s>
-0.1760913	[ W * p	0
-0.4771213	) ] * (	0
-0.30103	) ] * _	0
-0.1760913	( ala * const	0
-0.146128	( char * )
-0.06694679	, char * *	0
-0.1760913	-= g * 16	0
-0.1249387	= g * Y	0
-0.1760913	[ g * 80	0
-0.1249387	[ h * 80	0
-0.1760913	[ m * 80	0
-0.1760913	const pro * const	0
-0.1760913	4 ] *= -	0
-0.30103	<s> s *= s	0
-0.39794	] ) + _	0
-0.39794	] ) + s	0
-0.1760913	_O ) + (	-0.3899711
-0.1760913	* 10 + s	0
-0.1760913	, 3 + x
-0.1249387	/ 4 + 1	0
-0.6532125	* 80 + g
-0.4771213	* 80 + m
-0.4771213	* 80 + n
-0.1760913	, Q2 + 1
-0.1760913	* Y + (	0
-0.1249387	) ] + _	0
-0.1760913	= d + i
-0.1760913	!= h + 1
-0.39794	-> j + 3
-0.39794	-> j + B	0
-0.1760913	[ optind + 1	0
-0.1760913	; r + t	0
-0.1760913	. y + 1
-0.1760913	( * ++ s	0
-0.06694679	val ; ++ xor	0
-0.1249387	) ] ++ )	0
-0.1760913	; a ++ )
-0.1760913	+ g ++ ]	0.1249388
-0.1760913	; k ++ )
-0.544068	* p ++ )
-0.544068	* p ++ ,
-0.544068	* p ++ -
-0.1760913	* q ++ ,
-0.1760913	* r ++ =
-0.1760913	[ r ++ %	0
-0.1760913	4 ) += o	0.2218488
-0.1760913	5 ) += o	0.2218488
-0.30103	, O0 += O1
-0.30103	; d += H	0
-0.39794	<s> d += g
-0.1760913	"> " , 2	0
-0.1760913	, "%s" , y	0
-0.1249387	, ',' , ','	0.1249388
-0.05799195	( '_' , '_'	0
-0.0234811	, '_' , '_'	0
-0.1760913	, ( , )	0
-1.021189	( ) , (
-0.845098	( ) , O	0.1760913
-0.4191293	( ) , _	0.1918855
-0.845098	( ) , __	0
-0.7781513	) ) , O	0.30103
-0.30103	) ) , Q
-0.4771213	_ ) , B	0
-0.2552725	_ ) , __	-0.2218488
-0.2552725	, 0 , 0	0
-0.9542425	, 0 , W	0
-0.4771213	: 0 , j
-0.4771213	: 0 , n
-0.3187588	= 0 , </s>
-0.1760913	( 1 , ">	0
-0.6532125	, 1 , 0	0
-0.30103	= 1 , </s>
-0.4771213	( 2 , "%s"	0
-0.6532125	( 2 , 0	0
-0.1760913	/ 2 , *	0
-0.1760913	= 3 , _	0
-0.1760913	= 6 , _	0.1249388
-0.1760913	>> 8 , x	0
-0.1760913	( = , =	0
-0.1760913	, E , F	0
-0.30103	, F , i
-1.30103	( L , (	0
-0.8239087	( L , N	0.1760913
-0.1706962	( L , R	0
-1	( L , _	0
-0.1760913	) L , N	0.4771213
-0.05115252	, N , R	0.04575735
-0.1760913	* Q3 , Q2
-0.39794	( R , L	0
-0.39794	( R , _	0
-0.1249387	, W , p	0
-0.5228788	( X , 0	0
-0.00796893	( _ , _	-0.002015352
-1.526339	, _ , )	0
-0.0211893	, _ , _	0.1256106
-0.1760913	* a , *	0
-0.2218488	, a , u	0
-0.39794	, d , g	0
-0.39794	, d , t
-0.09691001	T d , T	0
-0.1760913	( e , t	0
-0.1760913	, e , k	0
-0.6532125	( f , </s>
-0.2552725	( f , i	0
-0.1760913	w f , w
-0.39794	, h , f	0
-0.544068	( i , 0
-0.3679768	( i , a	0
-0.90309	, i , au	0
-0.90309	, i , j	0
-0.4259687	, i , t	0
-0.845098	( j , 0	0
-0.845098	( j , 6	0
-0.544068	( j , u	0
-0.1760913	, j , k	0
-0.4771213	( m , e	0
-0.4771213	( m , i	0
-0.1249387	, m , n	0
-0.69897	( n , d	0
-0.39794	( n , i	0.05799198
-0.30103	, n , o	0
-0.1760913	& not , glu	0
-0.1760913	const not , const	0
-0.60206	( o , 0	0.1249388
-0.60206	( o , 16	0
-0.1760913	, si , of	0
-0.09691001	( sym_ , R	0
-0.30103	, u , 1
-0.1760913	met val , const	0
-0.544068	, x , y	0.2218488
-0.09691001	-> x , K	0
-0.1760913	w x , ...	0
-0.1760913	( ze , si	0
-0.07918125	( ) - __	0.06694674
-0.1760913	63 ) - 32	0
-0.1760913	] *= - 1
-0.39794	( 1 - n	0
-0.1760913	m = - ~
-0.1760913	p = - 1
-0.1760913	y = - 1	0.06694677
-0.1760913	( F - 1
-0.1760913	( I - x	0
-0.30103	* O0 - OO	0
-0.544068	p [ - 1	0.30103
-0.1249387	u [ - 1	0.1760913
-0.1249387	) ] - _	0
-0.1760913	( asp - asn	0
-0.1760913	( k - v	0
-0.1760913	<< l - 1	0
-0.1760913	[ xor - unk	0
-0.1760913	<s> d -= g
-0.1760913	{ d -= l	0
-0.1760913	<s> o -= g	0
-0.1760913	( A -> j
-0.1760913	< A -> j
-0.1760913	+ B -> j	-0.30103
-0.39794	, K -> x	0
-0.39794	, K -> y	-0.20412
-0.1249387	= K -> n	-0.1760913
-0.1760913	= b -> n	0
-0.69897	<s> e -> a	0
-0.69897	<s> e -> b	0
-0.69897	<s> e -> x	0
-0.69897	<s> e -> y	0
-0.1760913	<s> not -> not
-0.1249387	<s> y -> b	0
-0.1760913	} ) . _
-0.1760913	1 ] . y
-0.1760913	L ] . q	-0.2552725
-0.1760913	k ] . y	-0.1760913
-0.39794	( asn . not
-0.39794	( asn . val
-0.1760913	- asn . not	-0.1091445
-0.1760913	<s> asn . not
-0.02802872	( not . not	-0.4918445
-0.09691001	* not . not
-0.1760913	++ not . not	0.08218673
-0.06694679	< not . val	-0.39794
-0.06694679	<s> not . not	-0.2188433
-0.1760913	= not . val	-0.09691003
-0.1760913	= x . _
-0.2218488	) { . _	0
-0.1760913	x , ... )	0
-0.1760913	2. ) / p
-0.1760913	( C / 4
-0.1760913	) ] / _	0
-0.1760913	[ i / Q	0
-0.1760913	( u / 5	0
-0.1760913	exit ( 0 )	-0.06214792
-0.09691001	i ( 0 )
-0.1760913	while ( 0 <
-0.1249387	) , 0 )
-0.39794	0 , 0 )	-0.154902
-0.30103	0 , 0 ,	-0.2218488
-0.1760913	1 , 0 ,
-0.1760913	2 , 0 )	0.06694677
-0.1760913	X , 0 )	-0.4279032
-0.1760913	] , 0 )	0.06694677
-0.1760913	j , 0 )	-0.4449366
-0.1760913	k , 0 )	0.06694677
-0.1249387	o , 0 )	-0.05799198
-0.1249387	) : 0 )
-0.2218488	0 : 0 ,
-0.1760913	s < 0 )
-0.4771213	O = 0 ,
-0.30103	O = 0 ;	-0.4548449
-0.1760913	Q0 = 0 ,
-0.69897	] = 0 )
-0.69897	] = 0 :	0.1249388
-0.30103	] = 0 ;	-0.1638568
-0.1760913	_0 = 0 ,
-0.1760913	a = 0 ;	-0.443263
-0.1760913	c = 0 )
-0.1760913	g = 0 ;	-0.4548449
-0.09691001	i = 0 ;	-0.5563025
-0.09691001	j = 0 ;	-0.2304489
-0.1760913	k = 0 ;	-0.4548449
-0.30103	o = 0 ;
-0.1249387	0 ? 0 :
-0.1760913	by ? 0 :	-0.3222193
-0.07918125	u [ 0 ]	-0.1127043
-0.1760913	<s> return 0 ;	0
-0.06694679	* ( 1 -	-0.2552725
-0.09691001	i ( 1 )
-0.1760913	write ( 1 ,	0
-0.1760913	4 + 1 ,
-0.1760913	optind + 1 ]	-0.30103
-0.1760913	) , 1 )
-0.146128	= - 1 ;	0.07918122
-0.07918125	[ - 1 ]	-0.2340832
-0.1760913	l - 1 )	-0.1760913
-0.1760913	n - 1 )
-0.1760913	o = 1 -
-0.1760913	e [ 1 ]
-0.1760913	k [ 1 ]
-0.1760913	p [ 1 ]
-0.09691001	u [ 1 ]
-0.1760913	] * 10 +	0
-0.1760913	] = 10 ;
-0.1760913	) < 14 &
0	h = 14695981039346656037ULL ;	0
-0.1760913	1 & 15 )	0
-0.1760913	__ & 15 ,
-0.1760913	g * 16 ;	0
-0.1760913	o , 16 )	0.1249388
0	and ) 16u )
-0.1760913	R % 2 *
-0.1760913	( ( 2 *	0
-0.07918125	err ( 2 ,	-0.4259687
-0.09691001	i ( 2 )
-0.1760913	pow ( 2 ,
-0.1760913	" , 2 )
-0.1760913	) / 2 )
-0.1760913	] > 2 *	0
-0.1760913	cys >> 2 )
-0.1249387	u [ 2 ]
-0.1760913	) % 3 *
-0.09691001	i ( 3 )
-0.1760913	) - 3 )
-0.1760913	n - 3 ]	0
-0.1760913	O = 3 ,	0
-0.1249387	o [ 3 ]
-0.1249387	u [ 3 ]	-0.30103
-0.1760913	) - 32 )
-0.1760913	o >> 32 <<	0
-0.1760913	+ ( 4 -
-0.1249387	i ( 4 )	-0.30103
-0.1249387	o [ 4 ]
-0.07918125	u [ 4 ]	-0.3565474
-0.1760913	8 >> 40 )
0	w ( 41 )	0
-0.1760913	w ( 42 )
-0.1249387	i ( 5 )	-0.2552725
-0.1760913	u / 5 )
-0.1249387	u [ 5 ]
-0.1760913	b << 56 ;	0
-0.1760913	j , 6 )	0
-0.1760913	O = 6 ,	0
-0.1760913	O = 7 ,
-0.1760913	32 << 8 |	0
-0.1760913	O = 8 ,
-0.1760913	g * 80 +
-0.1249387	h * 80 +	-0.4259688
-0.1760913	m * 80 +	-0.30103
-0.1249387	= 0 : 0	-0.07918125
-0.5228788	? 0 : (	-0.2552725
-0.1760913	? 1 : 0
-0.1249387	? glu : gln	0
-0.90309	for ( ; (
-0.90309	for ( ; *
-0.7269987	for ( ; ;	0
-0.90309	for ( ; K	0
-0.90309	for ( ; g
-0.7269987	for ( ; n
-0.39794	" ) ; </s>
-0.39794	" ) ; for	0.2762064
-0.1760913	"Q" ) ; o	0
-0.447158	( ) ; </s>
-0.845098	( ) ; for	0.2762064
-0.845098	( ) ; }
-0.4522977	) ) ; </s>
-1.230449	) ) ; z
-0.8325089	) ) ; }	-0.1605791
-0.4393327	0 ) ; </s>
-1.217484	0 ) ; b
-1.217484	0 ) ; for	0.2762064
-0.916454	0 ) ; }
-0.30103	1 ) ; </s>
-0.69897	1 ) ; b	-0.3174204
-0.1249387	16 ) ; </s>
-0.2218488	2 ) ; </s>
-0.1760913	3 ) ; </s>
-0.1760913	32 ) ; </s>
-0.1760913	6 ) ; </s>
-0.30103	<s> ) ; }
-0.1760913	C ) ; </s>
-0.1760913	L ) ; }
-0.1249387	Q ) ; </s>
-0.1760913	SEEK_SET ) ; </s>
-0.1760913	Y ) ; </s>
-0.2340832	] ) ; </s>
-0.30103	d ) ; </s>
-0.1760913	e ) ; </s>
-0.1760913	fw ) ; }
-0.1760913	gln ) ; </s>
-0.1760913	glu ) ; </s>
-0.1760913	his ) ; </s>
-0.1760913	i ) ; </s>
-0.07918125	j ) ; </s>
-0.1760913	k ) ; </s>
-0.06694679	n ) ; </s>
-0.05799195	not ) ; </s>
-0.1760913	sec ) ; </s>
-0.1760913	t ) ; }	-0.4414057
-0.1760913	unk ) ; </s>
-0.05799195	y ) ; </s>
-0.30103	: 0 ; }
-0.1760913	<s> 0 ; }
-0.8239087	= 0 ; </s>
-1.30103	= 0 ; O
-1.124939	= 0 ; a	0
-1.30103	= 0 ; for	0
-1.30103	= 0 ; g	0
-1	= 0 ; i	0
-1.30103	= 0 ; j
-1.30103	= 0 ; k
-0.90309	= 0 ; }
-0.1760913	return 0 ; </s>
-0.30103	+ 1 ; </s>
-0.30103	- 1 ; </s>
-0.2552725	= 1 ; </s>
-0.1760913	= 14695981039346656037ULL ; </s>
-0.1760913	* 16 ; </s>
-0.1760913	<< 56 ; }
-0.1760913	>> 8 ; G	0
-0.1249387	( ; ; )	0
-0.30103	+= H ; </s>
-0.1760913	-= H ; </s>
-0.1760913	= K ; </s>
-0.1760913	*= Y ; </s>
-0.544068	) ] ; </s>
-0.243038	) ] ; _	0
-0.09691001	1 ] ; </s>
-0.1249387	EOF ] ; </s>
-0.1249387	xor ] ; </s>
-0.1760913	!= b ; K	0
-0.09691001	* b ; </s>
-0.1249387	= b ; </s>
-0.1760913	-= bf ; b
-0.06694679	<s> break ; </s>
-0.1760913	+= d ; </s>
-0.1760913	-= d ; </s>
-0.1760913	+= e ; </s>
-0.1760913	. e ; </s>
-0.4771213	= e ; </s>
-0.30103	= e ; }
-0.05799195	* g ; </s>
-0.05115252	*= g ; </s>
-0.1760913	+= g ; </s>
-0.1249387	: gln ; </s>
-0.09691001	= gln ; </s>
-0.1249387	int i ; </s>
-0.1249387	+= l ; </s>
-0.39794	-= l ; </s>
-0.39794	-= l ; d
-0.1760913	* n ; </s>
-0.1249387	-> n ; </s>
-0.09691001	* o ; </s>
-0.04139268	*= o ; </s>
-0.1760913	= o ; </s>
-0.39794	* p ; </s>
-0.1760913	= p ; for	0
-0.1760913	. q ; </s>
-0.1760913	*= s ; </s>
-0.1760913	++ tla ; </s>
-0.4259687	= trp ; </s>
-0.30103	= trp ; xor	0
-0.1760913	= unk ; xor	0
-0.1760913	! v ; r	0
-0.1760913	. val ; ++	0
-0.6532125	. val ; </s>
-0.1249387	+= w ; </s>
-0.1760913	-= w ; </s>
-0.1249387	= x ; </s>
-0.1249387	= y ; </s>
-0.1760913	long z ; </s>
-0.1760913	15 ) < 14	0
-0.1760913	) ] < _	0
-0.1760913	_ _ < %
-0.1760913	&& s < 0	0
-0.07918125	; xor < not	0
-0.1760913	>> 32 << 8	0
-0.1760913	| b << 56	0
-0.544068	( h << 8
-0.1760913	_ ( = ,	0
-0.1760913	= , = )	0
-0.1760913	; K = K	0
-0.7403627	( O = *	0
-0.5642715	( O = 0	-0.1760913
-0.7403627	( O = 8	0
-0.4771213	, O = 3	0
-0.6532125	, O = 7	0
-0.60206	<s> Y = f	0
-0.1760913	0 ] = x
-0.3521825	1 ] = 0	-0.39794
-0.6532125	1 ] = y
-0.30103	L ] = o	-0.30103
-0.1760913	Q ] = o
-0.2218488	[ ] = {
-0.1249387	xor ] = (	-0.05799198
-0.1760913	. _ = x	0
-0.30103	( a = 0	0
-0.30103	<s> a = b	0
-0.4771213	<s> b = K	0
-0.4771213	<s> b = b	0
-0.1760913	. c = &	0
-0.2218488	<s> d = f	0
-0.1760913	) e = d	0
-0.30103	( g = 0	0
-0.9294189	<s> g = (
-0.9294189	<s> g = _	0
-0.7533277	<s> g = g	0
-0.9294189	<s> g = pow	0
-0.30103	<s> h = 14695981039346656037ULL	0
-0.4771213	( i = 0	0
-0.39794	( k = 0	0
-0.4771213	; n = (
-0.8129134	<s> o = 0
-0.8129134	<s> o = 1	0
-0.6368221	<s> o = Q	0
-0.6368221	<s> o = _	0
-0.1760913	. q = o	0
-0.1760913	<s> tyr = &	0
-0.243038	( xor = trp	0
-0.544068	( xor = unk	0
-0.30103	<s> y = N	0
-0.1760913	= y = -
-0.1760913	+ 1 == b	0
-0.1760913	) ] > _	0
-0.1760913	Q ] > 2	0
-0.1760913	( cys >> 2	0
-0.1760913	= o >> 32	0
-0.1760913	) ) ? glu	0.1249388
-0.3679768	< 0 ? 0	0
-0.1760913	z , A ,
-0.1760913	j + B ->	0
-0.1249387	) , B R	0.09691
-0.1760913	; b B &
-0.1249387	} b B &
-0.30103	Q ( C ,
-0.1760913	C * C )	0
0	X ) E3 (	0
-0.1760913	) != EOF )
-0.1760913	tyr [ EOF ]	0
-0.1760913	if ( F <
-0.1760913	R ) F (	0
-0.1760913	E , F ,
-0.09691001	J ( G (	0
-0.1760913	0 ) G (
-0.1760913	L ) G (	-0.2808266
-0.1760913	R ) G (	-0.2808266
-0.1760913	8 ; G [
-0.1760913	d += H ;
-0.1760913	) { H =
-0.1760913	V * I (	0.1249388
-0.1760913	1 - I (
-0.09691001	; b I ==
-0.09691001	R ) J (
-0.1760913	for ( K =
-0.1249387	if ( K ->
-0.1760913	E * K )	0
-0.09691001	x , K ->	-0.4771213
-0.1760913	( ; K !=	0
-0.1760913	b ; K =	0
-0.1760913	K = K ->	0.1249388
-0.1760913	b = K ;	0
-0.06694679	) ( L ,	0.05799186
-0.1760913	F ( L ,	0.01099536
-0.1760913	F0 ( L ,	0.01099536
-0.1760913	F1 ( L ,	0.01099536
-0.09691001	G ( L ,	-0.6532125
-0.1760913	K ( L ,	0.01099536
-0.1760913	M ( L ,
-0.1249387	N ( L ,	-0.1139434
-0.1760913	QR ( L ,	0.01099536
-0.1760913	QS ( L ,	0.01099536
-0.1760913	if ( L ==
-0.1760913	R ) L ,	0
-0.1760913	R , L )	0
-0.1760913	b [ L ]	-0.30103
-0.30103	z [ L ]	-0.1760913
-0.05115252	L , N ,	0
-0.1760913	y = N (
-0.1249387	&& ! O )	-0.07918125
-0.09691001	&& ( O =
-0.1760913	<s> ( O =	-0.3388186
-0.1760913	for ( O =	-0.3899711
-0.1760913	|| ( O =
-0.07918125	) , O =	-0.3467875
-0.1249387	] = O (	-0.30103
-0.1760913	o [ O +
-0.1760913	) { O =
-0.1760913	( * O0 -
-0.1760913	) , O0 +=
-0.1760913	O0 - OO )
-0.1760913	Q_ ( O_o )
-0.1249387	) ; P (
-0.1249387	++ % Q ]	-0.1760913
-0.1760913	rewind ( Q )	-0.1760913
-0.1760913	FILE * Q )	0
-0.1760913	i / Q ]
-0.1249387	o = Q (
-0.1760913	) , Q0 +=
-0.1760913	+= ! QO *
0	R ) QR (	0
-0.1760913	) ( R ,	-0.2552725
-0.1760913	) , R )
-0.01579427	L , R )	-0.1566627
-0.154902	N , R )	-0.2283148
-0.69897	N , R </s>
-0.09691001	sym_ , R )	-0.6283889
-0.09691001	, B R )	0
-0.09691001	d , T l	0
-0.1760913	O ( W )	0
-0.1760913	0 , W ,	0.1249388
-0.1760913	i - W /
-0.1760913	E3 ( X )	-0.3899711
-0.07918125	W ( X )	-0.2596373
-0.1249387	a ( X ,	-0.3222193
-0.1249387	bj ( X ,
-0.1760913	) ; X =
-0.1760913	g * Y +	0
-0.1760913	) ; Y (	0
-0.1760913	= D [ (
-0.1760913	( Q [ d	0
-0.1760913	<s> Q [ k	-0.1760913
-0.1760913	= Q [ k
-0.1760913	( W [ r
-0.2632414	( _ [ _	0
-0.4393327	( _ [ __	0.69897
-0.1760913	) _ [ _	0.3679768
-0.39794	* _ [ _	0.3679768
-0.39794	* _ [ __	0.9208188
-0.09691001	+ _ [ __	0.69897
-0.1760913	- _ [ __	0.9208188
-0.1249387	; _ [ __	0.79588
-0.1760913	< _ [ _	0.3679768
-0.1760913	<s> _ [ __	0.9208188
-0.1760913	> _ [ _	0.3679768
-0.544068	_ _ [ _	0.3679768
-0.243038	_ _ [ __	0.69897
-0.4259687	-> b [ L	0
-0.60206	-> b [ x
-0.60206	-> b [ y
-0.30103	, e [ 1	0
-0.1760913	const his [ ]	0
-1.09691	. not [ leu	0
-0.05551733	. not [ xor	0
-0.39794	, o [ 3	0.1249388
-0.4771213	; o [ g
-0.1760913	= o [ m	0
-0.1760913	? o [ g	-0.2552725
-0.1249387	^ p [ -
-0.1760913	, u [ 4	0.30103
-0.60206	; u [ 3	0.1249388
-0.4771213	= u [ 0	0.30103
-0.4771213	= u [ 1
-0.1760913	( y [ optind
-0.1760913	, y [ optind
-0.1760913	; z [ L	-0.1760913
-0.1760913	= z [ L
-0.7781513	( ) ] )
-0.7781513	( ) ] *
-0.7781513	( ) ] ;	-0.1091445
-0.7781513	( ) ] _	0.60206
-1.146128	_ ) ] )
-0.9700368	_ ) ] *	-0.1760913
-1.146128	_ ) ] +	0.1249388
-1.146128	_ ) ] ++	0.1249388
-1.146128	_ ) ] /	0
-0.9700368	_ ) ] ;	-0.3309932
-1.146128	_ ) ] >	0
-0.4929155	_ ) ] _	0.1249387
-0.1249387	g ++ ] =
-0.6532125	[ 0 ] ;
-0.4771213	[ 0 ] =	0
-0.4771213	+ 1 ] )	-0.07918125
-0.4771213	+ 1 ] .	0
-0.146128	- 1 ] =	-0.4436975
-0.7781513	[ 1 ] )
-0.7781513	[ 1 ] ,
-0.7781513	[ 1 ] ;	0.2218488
-0.6532125	[ 1 ] =	-0.1918855
-0.1760913	+ 2 ] =
-0.4259687	[ 2 ] ,
-0.60206	[ 2 ] =
-0.1760913	- 3 ] =
-0.6532125	[ 3 ] *
-0.6532125	[ 3 ] ,
-0.4771213	[ 3 ] =
-0.1760913	[ 32 ] ,
-0.7403627	[ 4 ] *=	0
-0.4393327	[ 4 ] ,
-0.39794	[ 5 ] =
-0.1760913	[ 6 ] ,
-0.1760913	[ EOF ] ;	0.1249388
-0.1760913	[ H ] =
-0.4771213	[ L ] .	0
-0.30103	[ L ] =
-0.4771213	% Q ] =	0
-0.30103	% Q ] >	0
-0.1760913	his [ ] )
-0.1760913	[ d ] .
-0.1249387	[ k ] .	0
-0.1760913	[ optind ] )	0
-0.1760913	* p ] ,
-1	[ xor ] !=	0
-1	[ xor ] &
-0.8239087	[ xor ] )	0
-0.8239087	[ xor ] ;	0
-0.69897	[ xor ] =	0
-1	[ xor ] >>
-0.1760913	= & _ f	0
-0.1249387	) ( _ [	-0.1346986
-0.1760913	* ( _ [
-0.1760913	<s> ( _ ,	1.263241
-0.09691001	_ ( _ [	-0.2596374
-1.09108	__ ( _ )	0
-0.04968778	__ ( _ ,	0.2088838
-0.02227639	____ ( _ ,	0.4393326
-0.09691001	) ) _ (	0
-0.1760913	++ ) _ (
-0.05799195	) * _ _	0.05799198
-0.1249387	] * _ [	-0.2552725
-0.1760913	) + _ [
-0.1249387	] + _ [	0.09691
-0.03218468	) , _ (	0.3010299
-0.1760913	-- , _ (
-0.1760913	3 , _ (	0.9700367
-0.1249387	6 , _ (	0.845098
-0.1249387	<s> , _ ,	0.845098
-0.09691001	L , _ )	-0.6181468
-0.1760913	R , _ )	-0.4430415
-0.6603406	_ , _ )	0.05217826
-0.1175946	_ , _ ,	-0.4666562
-1.855317	_ , _ </s>
-0.1249387	] - _ [	0
-0.1249387	{ . _ =	0
-0.1760913	] / _ [
-0.1249387	] ; _ [	0
-0.1760913	] < _ [	0
-0.1760913	g = _ (	-0.3521825
-0.1249387	o = _ (	-0.3521825
-0.1760913	] > _ [	0
-1.021189	_ [ _ (	0
-0.06694679	_ [ _ _	0
-0.03778856	) ] _ _	0
-0.1760913	( _ _ (	1.028029
-0.05799195	* _ _ (	0.60206
-0.1760913	<s> _ _ (
-0.0234811	[ _ _ (	0.2263963
-0.1249387	] _ _ _	0
-0.7781513	] _ _ __	0
-0.6532125	_ _ _ (	1.028029
-0.1760913	_ _ _ [	0
-0.1760913	= ) __ (
-0.1760913	) * __ (	0
-0.1249387	) + __ (
-0.1760913	) , __ (	-0.1091445
-0.6532125	) , __ </s>
-0.06694679	) - __ (	0
-0.01772877	_ [ __ (	0.01703334
-0.1760913	_ _ __ (	0
-0.02802872	( ) ____ (	0.05115247
-0.1760913	_ ) ____ (	0.7781513
-0.1760913	op && a ->
-0.1760913	P ( a ,
-0.09691001	for ( a =	0
-0.1760913	E * a ,	0
-0.1249387	i , a ,	-0.20412
-0.1760913	e -> a =
-0.1760913	0 ; a <
-0.1760913	) { a =
-0.1760913	gly ( ala *	0
-0.1760913	( const ala not	0
-0.1760913	% ( and )	-0.4357286
-0.09691001	( ( and )	0
-0.03778856	= ( and )	-0.2632415
-0.1760913	sizeof ( and )
-0.1760913	, const and his	0
-0.1760913	] & arg )
-0.1760913	asp - asn .	0
0	i , au )	0
-0.1760913	K != b ;	0
-0.1760913	while ( b &&
-0.1249387	, * b ;	0.09691
-0.1760913	A -> b [	-0.3521825
-0.1760913	B -> b [	-0.3521825
-0.1760913	e -> b =
-0.1249387	y -> b [	-0.39794
-0.6368221	) ; b !
-0.5118834	) ; b I	0.09691
-0.1760913	a = b ;	0.1249388
-0.1760913	b = b ->	0
-0.1760913	1 == b ->
-0.4771213	) { b bf	0
-0.39794	} } b B	0.1249388
0	) { bc (
-0.1760913	-- ) bd (
-0.1760913	be , bf )	0
-0.1760913	{ b bf &&	0
-0.1760913	) ) break ;
-0.1760913	{ . c =	0
-0.1760913	, ( char *	0.06694677
-0.1760913	phe ( const ala	0
-0.1760913	ala * const not	0
-0.1760913	pro * const his	0
-0.1760913	not , const and	0
-0.1760913	val , const pro	0
-0.1249387	n , d )	0.09691
-0.1760913	e = d +	0
-0.09691001	( T d ,	0
-0.1760913	Q [ d ]	0
-0.1760913	; return d -
-0.30103	) { d -=	0
-0.1760913	r ( e ,	0
-0.1249387	] , e [
-0.1760913	m , e ,	0
-0.146128	; } else {	-0.1426675
-0.06694679	<s> } else {	-0.5440681
-0.1760913	F ( f )
-0.1249387	W ( f )
-0.07918125	_ ( f ,	-0.4259688
-0.1760913	h , f ,
-0.1760913	Y = f (
-0.1249387	d = f (	-0.1249388
-0.1760913	& _ f }
-0.1760913	( w f ,	0
-0.09691001	) ) for (
-0.1760913	; ) for (	-0.3388186
-0.08432088	) ; for (	-0.09042789
-0.7533277	) ; for </s>
-0.1760913	++ ; for (
-0.1760913	0 ; for (
-0.1760913	p ; for (
-0.04575749	) { for (	0
-0.1760913	; } for (
-0.1760913	for ( g =	-0.1760913
-0.07918125	) * g ;	0.1249387
-0.06694679	) *= g ;	0.1091445
-0.1760913	80 + g ++	0
-0.1760913	) , g =
-0.1760913	d , g ,
-0.1760913	o -= g *	0
-0.1760913	0 ; g <
-0.1249387	g = g *	0
-0.39794	o [ g *	0
-0.39794	o [ g +
0	g = getchar (	0.1249388
-0.1760913	] != gln )	0
-0.1249387	glu : gln ;	0
-0.1760913	sec = gln ;	0.2218488
-0.1760913	not , glu )	0
-0.1249387	) ? glu :	0
0	static void gly (	0
-0.1760913	t != h +	0
-0.07918125	+ ( h <<
-0.1760913	] = h (	0
-0.1249387	o [ h *	0
-0.1760913	; } h =
-0.1760913	const and his )
-0.1760913	* const his [	0
-0.30103	( ( i =
-0.05115252	for ( i =	-0.1249387
-0.1249387	m ( i ,	-0.359022
-0.1249387	; ++ i <
-0.30103	) , i =
-0.07918125	f , i )	-0.2340832
-0.1760913	m , i ,	-0.4191293
-0.05799195	n , i ,	-0.640978
-0.1760913	<s> - i ;
-0.1760913	) ; i =
-0.30103	0 ; i <
-0.1760913	T [ i /	0
-0.1249387	<s> int i ;	0
-0.1760913	1023 | i >>
-0.1249387	) ; if (	-0.39794
-0.09691001	) { if (
-0.09691001	; } if (
-0.544068	) { int X
-0.2218488	; } int main	0
-0.1760913	_ ( j ,
-0.1760913	for ( j =
-0.1760913	i , j ,	0
-0.30103	A -> j +	-0.2552725
-0.4771213	B -> j )
-0.4771213	B -> j +	-0.2552725
-0.1760913	K ( k )	0.1249388
-0.09691001	for ( k =	-0.07918122
-0.1760913	e , k ,
-0.1760913	j , k ,
-0.30103	Q [ k ]	0.1249388
-0.1760913	_ ( l ,
-0.1760913	k , l ,
-0.1760913	d -= l ;	-0.2552725
-0.09691001	, T l )	0
-0.1760913	not [ leu ]
-0.39794	<s> unsigned long long
-0.39794	<s> unsigned long z	0
-0.1760913	: ( m >
-0.1760913	P ( m ,
-0.1760913	bh ( m ,	-0.30103
-0.1760913	o [ m *	0
-0.1249387	<s> int main (	-0.2340832
-0.1760913	} int main (	-0.2340832
-0.1760913	<s> met main (	0
-0.1760913	main ( met val	0
-0.07918125	( ( n ,	-0.5563025
-0.06694679	f ( n ,	-0.20412
-0.1249387	m , n ,	-0.30103
-0.09691001	1 - n )	0
-0.30103	K -> n )	0
-0.1760913	b -> n ;	0.1249388
-0.1760913	a [ n ]
-0.1249387	( & not ,	0
-0.07918125	) ( not .	0.4259688
-0.1760913	= ( not .	0.7269988
-0.1760913	free ( not .	0.7269988
-0.07918125	if ( not .	0.4259688
-0.1760913	phe ( not )	0
-0.1249387	( * not .	0.09691
-0.1760913	<s> ++ not .	0
-0.243038	asn . not [	0.2218487
-1.161368	not . not )	0.1249388
-1.161368	not . not =
-0.1401787	not . not [	0.07572079
-0.07918125	xor < not .	0.06694674
-0.1760913	const ala not )
-0.1760913	* const not ,	0
-0.09691001	I ( o ,
-0.1760913	Q ( o ,
-0.1760913	_ ( o ,	-0.3521825
-0.3357921	) * o +
-0.6368221	) * o -
-0.6368221	) * o ;	0.09691
-0.1760913	, * o )
-0.1760913	2 * o -
-0.09691001	) += o *
-0.1249387	] , o [
-0.1760913	n , o )
-0.1760913	) ; o [
-0.4771213	] = o >>	0
-0.4771213	] = o [	0
-0.1760913	q = o ;	0
-0.1249387	) { o =
-0.1760913	8 | o &
0	si , of )	0
-0.1760913	b -> op &&	0
-0.39794	y [ optind +	0
-0.39794	y [ optind ]	0
-0.1760913	: ( p =
-0.1249387	for ( p =
-0.1760913	h ( p [
-0.06694679	= * p ++	0
-0.1760913	W * p ]	0
-0.1760913	W , p ,
-0.1760913	F - p /
0	static void phe (	0
0	g = pow (	0
-0.1760913	, const pro *	0
-0.1760913	exit ( puts (
-0.1760913	= * q ++
-0.39794	] . q ;	0
-0.39794	] . q =	0
-0.1760913	) { q =
-0.1760913	v ; r +	0
-0.1760913	W [ r ++	0
-0.1760913	H ; return d	0
-0.1760913	bf && s <	0
-0.1760913	s *= s ;	0
-0.1760913	) + s [
-0.1760913	10 + s [
-0.1760913	* ++ s =
-0.1760913	) ; s =
-0.1760913	if ( sec )	0
-0.1760913	+ ( ser )
-0.1760913	= ( ser )
0	ze , si ,	0
-0.09691001	<s> typedef struct {	0
-0.09691001	G ( sym_ ,	0
-0.1760913	z ( t )	0
-0.1760913	r + t !=	0
-0.1760913	e , t )
-0.06694679	i , t )	-0.09691
-0.1760913	<s> ++ tla ;	0
-0.1760913	lys = trp ;	-0.2730013
-0.09691001	xor = trp ;	-0.39794
-0.1760913	= & tyr [
-0.1760913	g + u )
-0.1249387	a , u )	-0.30103
-0.30103	j , u ,	-0.1760913
-0.1760913	) ; u [
-0.1760913	be ; u [
-0.2218488	) { u [
-0.1760913	xor - unk ]
-0.1760913	xor = unk ;	0
-0.1760913	&& ! v ;
-0.1760913	k - v )
-0.7781513	not . val )	0
-0.2340832	not . val ;	0.05115265
-0.1760913	( met val ,	0
-0.39794	<s> static void gly	0
-0.39794	<s> static void phe	0
-0.1760913	( ( w )	0.30103
-0.1760913	, ( w )	0.30103
-0.1760913	q ) w (
-0.1760913	) , w (
-0.07918125	) ; w (	-0.09691003
-0.1760913	) { w *
-0.1760913	; } w f
0	) { while (
0	<s> } while (	0
-0.1760913	8 , x ,
-0.1760913	I - x )
-0.09691001	K -> x ,	0.09691
-0.1760913	e -> x =
-0.1760913	_ = x .	0
-0.1760913	) { x =
-0.06694679	for ( xor =	0
-0.06694679	; ++ xor )	0
-0.09691001	trp ; xor <	0.1760913
-0.1760913	unk ; xor <	0.30103
-1.060698	not [ xor -	0
-0.06069784	not [ xor ]	0
-0.1760913	O ( y [	0
-0.30103	w ( y ^
-0.1760913	* * y )
-0.1760913	"%s" , y [	0
-0.09691001	x , y ,
-0.2218488	K -> y )	0.1760913
-0.1760913	a -> y )
-0.1760913	e -> y =
-0.30103	] . y =
-0.1760913	h . y +	0
-0.30103	x = y =	0
-0.1760913	y = y ;	0.1249388
-0.1249387	for ( z (
-0.06694679	) ; z (
-0.1760913	16711935 ; z [	0
-0.1760913	unsigned long z ;	0
-0.7781513	( ) { }
-0.5314789	) ) { </s>
-0.9294189	) ) { a	0
-0.1249387	-- ) { </s>
-0.69897	0 ) { </s>
-0.5228788	0 ) { b
-0.69897	0 ) { for	0.5228788
-0.1760913	1 ) { </s>
-0.60206	; ) { </s>
-0.60206	; ) { for	0.5228788
-0.1760913	EOF ) { </s>
-0.1249387	NULL ) { </s>
-0.1760913	O ) { b
-0.1760913	bf ) { int
-0.1249387	gln ) { </s>
-0.1249387	glu ) { </s>
-0.09691001	l ) { d	0
-0.1760913	n ) { </s>
-0.1760913	sec ) { </s>
-0.1760913	val ) { </s>
-0.07918125	w ) { .	0
-0.06694679	xor ) { </s>
-0.09691001	<s> do { </s>
-0.3802112	} else { </s>
-0.7781513	} else { b
-0.09691001	typedef struct { </s>
-0.1760913	& 1023 | i	0
-0.1760913	<< 8 | o	0
-0.6766936	) ; } </s>
-1.102662	) ; } else
-1.278754	) ; } f
-0.8808136	) ; } int	0
-1.102662	) ; } w	0
-0.6766936	) ; } }	-0.1197991
-0.7403627	0 ; } </s>
-0.1760913	2 ; } }
-0.7533277	; } } </s>
-0.6283889	; } } b
-0.7533277	; } } }	-0.30103
-0.4771213	} } } }

\5-grams:
-0.06694679	! ! ! ! !	0.06694674
-0.20412	<s> if ( ! (
-0.1760913	( ; K != b	0
-0.1760913	[ xor ] != gln	0
-0.1760913	r + t != h	0
-0.1760913	1 , "> " ,	0
0	; z ( "#" )	0
-0.1249387	( 2 , "%s" ,	0
0	( 1 , "> "	0
-0.1760913	[ r ++ % Q	0
-0.1249387	<s> gly ( & not	0
-0.1760913	. c = & _	0
-0.1760913	<s> tyr = & tyr	0
-0.1760913	{ b bf && s
-0.1760913	b -> op && a	0
-0.1760913	, ',' , ',' ,	0.1249388
-0.1760913	* __ ( '_' ,	0.4259687
-0.1760913	, __ ( '_' ,	0.4259687
-0.5440681	( '_' , '_' )
-0.146128	( '_' , '_' ,	0.5006024
-0.6532125	, '_' , '_' )	0
-0.1091445	, '_' , '_' ,	0.1326256
-0.1760913	) ( ( ( and	0
-0.39794	and ) ( ( (	0
-0.39794	and ) ( ( and	0
-0.1249387	<s> while ( ( i	0
-0.30103	, R ) ( L	0
-0.4771213	, R ) ( R	0
-0.4393327	( and ) ( (	0
-0.3424227	( and ) ( not	0
-0.2218488	, i ) ( _	0
-0.1760913	, of ) ( (
-0.1760913	( ser ) ( (
-0.1760913	+= F * ( 1	0
-0.1760913	) ] * ( _	0
-0.1760913	_O ) + ( C
-0.1760913	* Y + ( (
-0.1760913	( L , ( ,	0
-0.1760913	? 0 : ( p	0
-0.1249387	xor ] = ( and	0.1760913
-0.1760913	X ) E3 ( X	0
-0.1760913	R ) F ( L	0
-0.09691001	J ( G ( L	0
-0.1760913	L ) G ( sym_	0.2218488
-0.1760913	R ) G ( sym_	0.2218488
-0.1760913	V * I ( o	0.1249388
-0.1760913	] = O ( -
-0.1760913	R ) QR ( L	0
-0.1760913	) ; Y ( )	0
-0.30103	) ) _ ( f	0.1249388
-0.03218468	) , _ ( )	0.1413291
-0.1760913	3 , _ ( )	-0.30103
-0.1249387	6 , _ ( )	-0.1249388
-0.1760913	g = _ ( o	0
-0.1760913	o = _ ( j	0
-0.1760913	_ [ _ ( )	0
-0.1760913	( _ _ ( )
-0.05799195	* _ _ ( )	-0.5878195
-0.0234811	[ _ _ ( )	-0.5420619
-0.1760913	_ _ _ ( )
-0.1760913	) * __ ( '_'	0
-0.1760913	) , __ ( _	0
-0.06694679	) - __ ( )	0
-0.01772877	_ [ __ ( _	0.01703334
-0.1760913	_ _ __ ( _
-0.02802872	( ) ____ ( _	0.05115247
-0.1760913	_ ) ____ ( _	0.7781513
-0.1249387	d = f ( n	0.243038
-0.1760913	; ) for ( i	0.1249388
-0.544068	) ; for ( ;
-0.845098	) ; for ( i	0
-0.6532125	) { for ( ;
-0.6532125	) { for ( g	0
-0.1760913	g = getchar ( )
-0.1760913	static void gly ( ala	0
-0.1760913	] = h ( p	0
-0.1760913	) ; if ( p
-0.1760913	<s> int main ( )	0.1249388
-0.1760913	} int main ( int
-0.1760913	<s> met main ( met	0
-0.1760913	static void phe ( const	0
-0.1760913	g = pow ( 2	0
-0.39794	) ; w ( y
-0.30103	<s> } while ( b	0
-0.1249387	z ( "#" ) )	0
-0.30103	'_' , '_' ) *	0
-0.1760913	; Y ( ) ;
-0.4771213	, _ ( ) )	-0.3979399
-0.2552725	, _ ( ) ,	-0.09691003
-0.1760913	[ _ ( ) ]
-1.190332	_ _ ( ) )
-1.190332	_ _ ( ) ,
-0.7923917	_ _ ( ) -	0
-1.01424	_ _ ( ) </s>
-1.01424	_ _ ( ) ]
-0.3452336	_ _ ( ) ____	0
-0.07918125	- __ ( ) ]	-0.07572071
-0.1760913	= getchar ( ) )
-0.1760913	<s> main ( ) {
-0.1249387	int main ( ) {
-0.1249387	( "#" ) ) ;	0
-0.60206	_ ( ) ) )
-0.30103	_ ( ) ) ,	0
-0.7781513	_ ( ) ) ;
-0.2218488	) ) ) ) </s>
-0.1760913	( , ) ) </s>
-0.1760913	, R ) ) </s>
-0.1760913	xor ] ) ) ?	0
-0.1760913	( _ ) ) _	0
-0.1760913	) ] ++ ) _	0
-0.1760913	, ( , ) )	0
-0.07918125	, _ , ) ]
-0.1760913	x , ... ) {
-0.1760913	exit ( 0 ) ;
-0.09691001	0 , 0 ) ;
-0.1760913	2 , 0 ) ;	-0.2174839
-0.1760913	X , 0 ) {	0.1249388
-0.1760913	] , 0 ) ;
-0.1760913	j , 0 ) ,
-0.1760913	k , 0 ) ;
-0.1249387	o , 0 ) ;	-0.3424227
-0.1760913	l - 1 ) ;
-0.1760913	1 & 15 ) <	0
-0.1760913	o , 16 ) ;	0.1249388
-0.1760913	i ( 4 ) +=	0
-0.1760913	w ( 41 ) ;
-0.1760913	i ( 5 ) +=	0
-0.1760913	j , 6 ) ;	0
-0.1249387	( ; ; ) {
-0.1760913	= , = ) __	0
-0.1760913	C * C ) ;	0
-0.1760913	E * K ) </s>
-0.1760913	R , L ) G	0
-0.1760913	&& ! O ) {
-0.1760913	rewind ( Q ) ;	0
-0.1760913	FILE * Q ) </s>
-0.9542425	L , R ) )	0
-0.6532125	L , R ) </s>
-1.130334	L , R ) F	0
-1.130334	L , R ) G	0
-0.8293038	L , R ) J	0.09691
-1.130334	L , R ) QR	0
-0.544068	N , R ) </s>
-0.544068	N , R ) L	0
-0.09691001	sym_ , R ) (	0.07918119
-0.30103	, B R ) ,
-0.1760913	O ( W ) </s>
-0.1760913	E3 ( X ) </s>
-0.2218488	W ( X ) ;
-0.1760913	+ 1 ] ) ;	0
-0.1760913	[ optind ] ) ;	0
-0.1760913	[ xor ] ) )	0
-0.1249387	__ ( _ ) )	0
-0.09691001	L , _ ) ,	-0.4259688
-0.1760913	R , _ ) </s>
-0.8939466	_ , _ ) *	0
-1.194977	_ , _ ) +
-0.9731278	_ , _ ) ,	-0.4259688
-1.371068	_ , _ ) </s>
-0.2407341	_ , _ ) ]	0
-1.194977	_ , _ ) ____	0
-0.1760913	% ( and ) 16u	0
-0.30103	( ( and ) (	-0.2138799
-0.1383027	= ( and ) (	0.1383027
-0.1760913	i , au ) [
-0.1760913	be , bf ) {	0
-0.1249387	n , d ) ;	0
-0.1760913	] != gln ) {	0
-0.1760913	not , glu ) ;	0
-0.07918125	f , i ) (	0
-0.1760913	K ( k ) ;	0
-0.09691001	, T l ) {	0
-0.1249387	1 - n ) ;	0
-0.1760913	K -> n ) {	0
-0.1760913	phe ( not ) ;	0
-0.1760913	not . not ) ;	0.1249388
-0.1760913	si , of ) (	0
-0.1760913	if ( sec ) {	0
-0.1760913	z ( t ) ;	0
-0.30103	i , t ) )
-0.1249387	a , u ) (
-0.1760913	not . val ) {	0
-0.1760913	( ( w ) {	0.30103
-0.1760913	, ( w ) {	0.30103
-0.06694679	; ++ xor ) {	0
-0.1249387	K -> y ) ;	0.1760913
-0.1760913	<s> if ( * not	0
-0.1760913	, '_' ) * __	0
-0.06694679	, _ ) * _	0
-0.4771213	, char * * y	0
-0.1760913	/ 2 , * Q3
-0.1760913	* a , * b	0
-0.1760913	( ( 2 * o	0
-0.1760913	] > 2 * u
-0.1760913	( O = * p	0
-0.1760913	_ ) ] * _	0.1249388
-0.1760913	gly ( ala * const	0
-0.1760913	, ( char * )
-0.1760913	o -= g * 16	0
-0.1249387	g = g * Y	0
-0.1760913	o [ g * 80	0
-0.1249387	o [ h * 80	0
-0.1760913	o [ m * 80	0
-0.1760913	, const pro * const	0
-0.1760913	[ 4 ] *= -	0
-0.1760913	) ] ) + _	0
-0.1760913	] * 10 + s	0
-0.1249387	h * 80 + m
-0.1760913	m * 80 + n
-0.1760913	g * Y + (	0
-0.1760913	_ ) ] + _	0.1249388
-0.1760913	e = d + i
-0.1760913	t != h + 1
-0.1760913	A -> j + B	0
-0.1760913	B -> j + 3
-0.1760913	y [ optind + 1	0
-0.1760913	v ; r + t	0
-0.1760913	h . y + 1
-0.06694679	. val ; ++ xor	0
-0.1760913	_ ) ] ++ )
-0.1760913	80 + g ++ ]	0
-0.544068	= * p ++ )
-0.544068	= * p ++ ,
-0.544068	= * p ++ -
-0.1760913	W [ r ++ %	0
-0.1760913	( 4 ) += o	0
-0.1760913	( 5 ) += o	0
-0.1760913	, "> " , 2	0
-0.1760913	2 , "%s" , y	0
-0.1249387	',' , ',' , ','	0
-0.05799195	__ ( '_' , '_'	0
-0.0234811	'_' , '_' , '_'	0
-0.1760913	L , ( , )	0
-1.021189	_ ( ) , (
-0.845098	_ ( ) , O	0
-0.4191293	_ ( ) , _	0
-0.845098	_ ( ) , __	0
-0.30103	( ) ) , Q
-0.1249387	) ) ) , Q
-0.4771213	, _ ) , B	0
-0.2552725	, _ ) , __	0
-0.39794	0 , 0 , 0	-0.1760913
-0.39794	0 , 0 , W	0
-0.1760913	write ( 1 , ">	0
-0.30103	err ( 2 , "%s"	0
-0.4771213	err ( 2 , 0	0
-0.1760913	O = 3 , _	0
-0.1760913	O = 6 , _	0
-0.1760913	_ ( = , =	0
-0.544068	) ( L , (	0
-0.544068	) ( L , N
-0.544068	) ( L , R	0.9700367
-0.1760913	F ( L , R	0.9700367
-0.1760913	F0 ( L , R	0.9700367
-0.1760913	F1 ( L , R	0.9700367
-0.09691001	G ( L , _	0
-0.1760913	K ( L , R	0.9700367
-0.1249387	N ( L , R	0.845098
-0.1760913	QR ( L , R	0.9700367
-0.1760913	QS ( L , R	0.9700367
-0.1760913	R ) L , N	0
-0.05115252	L , N , R	0
-0.1760913	) ( R , _	0
-0.1760913	0 , W , p
-0.1760913	a ( X , 0	0
-0.1760913	<s> ( _ , _	0.4771213
-0.01296498	__ ( _ , _	-0.5642714
-0.02227639	____ ( _ , _	0.4536401
-0.1760913	<s> , _ , _	0.0764921
-1.515874	_ , _ , )	0
-0.01618676	_ , _ , _	0.005429268
-0.1760913	E * a , *	0
-0.1249387	i , a , u	0
-0.09691001	( T d , T	0
-0.1760913	r ( e , t	0
-0.1760913	m , e , k	0
-0.07918125	_ ( f , i	0
-0.1760913	( w f , w
-0.1249387	m ( i , a	0
-0.1760913	m , i , au	0
-0.06694679	n , i , t	0
-0.1760913	i , j , k	0
-0.1760913	bh ( m , e	0
-0.07918125	( ( n , i	0.06694674
-0.30103	f ( n , d	0
-0.1249387	m , n , o	0
-0.1760913	( & not , glu	0
-0.1760913	* const not , const	0
-0.1760913	_ ( o , 16	0
-0.1760913	ze , si , of	0
-0.09691001	G ( sym_ , R	0
-0.1760913	j , u , 1
-0.1760913	( met val , const	0
-0.1249387	K -> x , K	0.09691
-0.07918125	_ ( ) - __	0
-0.1760913	& 63 ) - 32	0
-0.1760913	4 ] *= - 1
-0.1760913	* ( 1 - n	0
-0.1760913	not [ xor - unk	0
-0.1760913	) { d -= l	0
-0.1760913	j + B -> j	0
-0.09691001	x , K -> y	0
-0.1760913	K = K -> n	0
-0.1760913	b = b -> n	0
-0.1760913	+ 1 ] . y
-0.1760913	[ L ] . q	0
-0.1760913	[ k ] . y	0
-0.1760913	asp - asn . not	0
-0.07918125	) ( not . not	-0.07918125
-0.1760913	= ( not . not	0.2218488
-0.1760913	free ( not . not	-0.4149733
-0.07918125	if ( not . not	0
-0.1249387	( * not . not
-0.1760913	<s> ++ not . not	0
-0.07918125	xor < not . val	0
-0.1760913	_ = x . _
-0.2218488	w ) { . _	0
-0.1760913	w x , ... )	0
-0.1760913	/ 2. ) / p
-0.1760913	_ ) ] / _	0
-0.1760913	T [ i / Q	0
-0.1760913	) exit ( 0 )	0
-0.1249387	<s> i ( 0 )
-0.1760913	<s> while ( 0 <
-0.39794	, 0 , 0 )	0
-0.30103	, 0 , 0 ,	0
-0.1760913	, 1 , 0 ,
-0.1760913	( 2 , 0 )	0
-0.1760913	( X , 0 )	0
-0.1760913	( j , 0 )	0
-0.1760913	( o , 0 )	0.1249388
-0.1760913	= 0 : 0 ,
-0.1760913	&& s < 0 )
-0.1760913	( O = 0 ;	0
-0.09691001	1 ] = 0 ;
-0.1760913	( a = 0 ;	0
-0.1760913	( g = 0 ;	0
-0.09691001	( i = 0 ;	0
-0.1760913	( k = 0 ;	0
-0.1249387	< 0 ? 0 :
-0.1760913	= u [ 0 ]	-0.2552725
-0.1760913	F * ( 1 -
-0.1249387	<s> i ( 1 )
-0.1760913	/ 4 + 1 ,
-0.1760913	[ optind + 1 ]	0
-0.1760913	y = - 1 ;
-0.1760913	p [ - 1 ]	0.30103
-0.1249387	u [ - 1 ]	0.1760913
-0.1760913	<< l - 1 )	0
-0.1760913	<s> o = 1 -
-0.1760913	, e [ 1 ]
-0.1760913	15 ) < 14 &
0	<s> h = 14695981039346656037ULL ;	0
-0.1760913	- 1 & 15 )	0
-0.1760913	= __ & 15 ,
-0.1760913	-= g * 16 ;	0
-0.1760913	( o , 16 )	0
0	( and ) 16u )
-0.09691001	<s> err ( 2 ,	0.07918119
-0.1249387	<s> i ( 2 )
-0.1760913	= pow ( 2 ,
-0.1760913	"> " , 2 )
-0.1760913	Q ] > 2 *	0
-0.1760913	( cys >> 2 )
-0.1249387	<s> i ( 3 )
-0.1760913	, O = 3 ,	0
-0.1760913	, o [ 3 ]
-0.1760913	; u [ 3 ]	0
-0.1760913	63 ) - 32 )
-0.1760913	= o >> 32 <<	0
-0.1249387	<s> i ( 4 )	0
-0.1760913	, u [ 4 ]	-0.2552725
-0.1249387	<s> i ( 5 )	0
-0.1760913	( u / 5 )
-0.1760913	| b << 56 ;	0
-0.1760913	( j , 6 )	0
-0.1760913	, O = 7 ,
-0.1760913	>> 32 << 8 |	0
-0.1760913	( O = 8 ,
-0.1760913	[ g * 80 +
-0.1249387	[ h * 80 +	0
-0.1760913	[ m * 80 +	0
-0.1760913	] = 0 : 0
-0.1760913	by ? 0 : (	0
-0.1249387	) ? glu : gln	0
-0.4771213	; for ( ; n
-0.39794	<s> for ( ; ;	0.1249388
-0.39794	<s> for ( ; K	0
-0.1760913	"#" ) ) ; z
-0.60206	( 0 ) ; </s>
-0.60206	( 0 ) ; }
-0.3467875	, 0 ) ; </s>
-0.1760913	, 1 ) ; </s>
-0.30103	- 1 ) ; </s>
-0.1249387	, 16 ) ; </s>
-0.1760913	, 6 ) ; </s>
-0.1760913	* C ) ; </s>
-0.1760913	( Q ) ; </s>
-0.1760913	, SEEK_SET ) ; </s>
-0.1760913	1 ] ) ; </s>
-0.1760913	optind ] ) ; </s>
-0.1249387	, d ) ; </s>
-0.1760913	, gln ) ; </s>
-0.1760913	, glu ) ; </s>
-0.09691001	, j ) ; </s>
-0.1760913	( k ) ; </s>
-0.1249387	, n ) ; </s>
-0.1249387	- n ) ; </s>
-0.1760913	( not ) ; </s>
-0.1249387	. not ) ; </s>
-0.1760913	( t ) ; }	0
-0.1760913	>> unk ) ; </s>
-0.07918125	-> y ) ; </s>
-0.1760913	O = 0 ; O
-0.39794	] = 0 ; }
-0.1760913	a = 0 ; a	0
-0.1760913	g = 0 ; g	0
-0.1249387	i = 0 ; i	-0.1760913
-0.30103	j = 0 ; </s>
-0.1760913	k = 0 ; k
-0.1760913	<s> return 0 ; </s>
-0.39794	= - 1 ; </s>
-0.1760913	h = 14695981039346656037ULL ; </s>
-0.1760913	g * 16 ; </s>
-0.1760913	b << 56 ; }
-0.1249387	for ( ; ; )	0
-0.1760913	b = K ; </s>
-0.1760913	( ) ] ; _	0.1249388
-0.1760913	_ ) ] ; </s>
-0.1760913	[ 1 ] ; </s>
-0.1760913	[ EOF ] ; </s>
-0.1249387	[ xor ] ; </s>
-0.1760913	K != b ; K	0
-0.1249387	, * b ; </s>
-0.1760913	a = b ; </s>
-0.07918125	) * g ; </s>
-0.06694679	) *= g ; </s>
-0.1249387	glu : gln ; </s>
-0.1760913	sec = gln ; </s>
-0.1249387	<s> int i ; </s>
-0.1760913	d -= l ; d
-0.1760913	b -> n ; </s>
-0.1249387	) * o ; </s>
-0.1760913	q = o ; </s>
-0.1760913	] . q ; </s>
-0.1760913	s *= s ; </s>
-0.1760913	<s> ++ tla ; </s>
-0.1760913	lys = trp ; </s>
-0.09691001	xor = trp ; xor	0
-0.1760913	xor = unk ; xor	0
-0.20412	not . val ; ++	0.06694674
-0.60206	not . val ; </s>
-0.1760913	y = y ; </s>
-0.1760913	unsigned long z ; </s>
-0.1760913	& 15 ) < 14	0
-0.1760913	bf && s < 0	0
-0.1249387	trp ; xor < not	0.1760913
-0.1760913	unk ; xor < not	0.30103
-0.1760913	o >> 32 << 8	0
-0.1760913	( = , = )	0
-0.1760913	b ; K = K	0
-0.1760913	<s> ( O = 0	0
-0.1760913	for ( O = *	0
-0.39794	) , O = 3	0
-0.39794	) , O = 7	0
-0.1760913	[ 0 ] = x
-0.09691001	- 1 ] = 0	0
-0.30103	[ 1 ] = y
-0.1760913	% Q ] = o
-0.1249387	[ xor ] = (	0
-0.1760913	{ . _ = x	0
-0.30103	for ( a = 0	0
-0.1760913	{ . c = &	0
-0.1760913	for ( g = 0	0
-0.30103	for ( i = 0	0
-0.30103	for ( k = 0	0
-0.1760913	] . q = o	0
-0.243038	for ( xor = trp	0
-0.544068	for ( xor = unk	0
-0.1760913	x = y = -
-0.1760913	_ ) ] > _	0
-0.1760913	% Q ] > 2	0
-0.1760913	] = o >> 32	0
-0.1760913	] ) ) ? glu	0
-0.1760913	-> j + B ->	0
-0.1249387	_ ) , B R	0
-0.1760913	} } b B &
-0.1760913	* C * C )	0
0	( X ) E3 (	0
-0.1760913	) ) != EOF )
-0.1760913	, R ) F (	0
-0.1760913	, E , F ,
-0.1760913	, L ) G (	0
-0.1760913	, R ) G (	0
-0.1760913	>> 8 ; G [
-0.1760913	; d += H ;
-0.1249387	) ; b I ==
-0.09691001	, R ) J (
-0.1249387	<s> if ( K ->
-0.1760913	( E * K )	0
-0.09691001	-> x , K ->	0
-0.1760913	for ( ; K !=	0
-0.1760913	!= b ; K =	0
-0.1760913	; K = K ->	0
-0.1760913	<s> b = K ;	0
-0.1249387	R ) ( L ,	-0.3309932
-0.1760913	) F ( L ,	0
-0.09691001	( G ( L ,	0
-0.1760913	( N ( L ,	0.1249388
-0.1760913	) QR ( L ,	0
-0.1760913	; if ( L ==
-0.1760913	, R ) L ,	0
-0.1760913	( R , L )	0
-0.1760913	-> b [ L ]	0
-0.1760913	; z [ L ]	0
-0.07918125	( L , N ,	0.1760913
-0.1760913	) L , N ,	0.4771213
-0.1760913	<s> y = N (
-0.1760913	) && ( O =
-0.1760913	; for ( O =	0
-0.1760913	) || ( O =
-0.1249387	( ) , O =
-0.1760913	) ) , O =
-0.1760913	* O0 - OO )
-0.1760913	= Q_ ( O_o )
-0.1760913	r ++ % Q ]	0
-0.1760913	<s> rewind ( Q )	0
-0.1760913	( FILE * Q )	0
-0.1760913	[ i / Q ]
-0.1249387	<s> o = Q (
0	, R ) QR (	0
-0.1760913	R ) ( R ,	0
-0.01579427	( L , R )	0
-0.1760913	, N , R )	-0.02996321
-0.6532125	, N , R </s>
-0.09691001	( sym_ , R )	0
-0.1249387	) , B R )	-0.1760913
-0.09691001	T d , T l	0
-0.1760913	, 0 , W ,	0
-0.1760913	) E3 ( X )	0
-0.1760913	} W ( X )	-0.07918125
-0.1760913	; a ( X ,
-0.1760913	= g * Y +	0
-0.1760913	) ( _ [ _	0.3679768
-0.1249387	_ ( _ [ _	0.243038
-0.1760913	] * _ [ _	0
-0.1249387	] + _ [ __	0.09691
-0.1760913	] - _ [ __	0
-0.1249387	] ; _ [ __	0
-0.1760913	] < _ [ _	0
-0.1760913	] > _ [ _	0
-0.544068	_ _ _ [ _	0
-0.243038	_ _ _ [ __	0
-0.1760913	A -> b [ x
-0.1760913	B -> b [ y
-0.1249387	y -> b [ L	0
-0.1760913	* const his [ ]	0
-0.09691001	asn . not [ xor	0.1856366
-1.021189	not . not [ leu	0
-0.06694679	not . not [ xor	0.08297443
-0.1760913	] = o [ m	0
-0.1760913	O ( y [ optind
-0.1760913	"%s" , y [ optind
-0.1760913	16711935 ; z [ L	0
-0.39794	_ ( ) ] )
-0.544068	__ ( ) ] _	0
-1.130334	, _ ) ] )
-0.9542425	, _ ) ] *	0
-1.130334	, _ ) ] +	0
-1.130334	, _ ) ] ++	0
-1.130334	, _ ) ] /	0
-1.130334	, _ ) ] ;	0
-1.130334	, _ ) ] >	0
-0.4771213	, _ ) ] _	0
-0.1760913	+ g ++ ] =
-0.39794	u [ 0 ] ;
-0.1760913	optind + 1 ] )	0
-0.07918125	[ - 1 ] =	0
-0.1760913	n - 3 ] =
-0.1760913	u [ 3 ] =
-0.39794	u [ 4 ] *=	0
-0.39794	u [ 4 ] ,
-0.1760913	tyr [ EOF ] ;	0
-0.1760913	b [ L ] .	0
-0.1760913	z [ L ] =
-0.1760913	++ % Q ] >
-0.1760913	const his [ ] )
-0.1760913	Q [ d ] .
-0.1760913	Q [ k ] .
-0.1760913	y [ optind ] )	0
-0.1760913	W * p ] ,
-1	not [ xor ] !=	0
-1	not [ xor ] &
-0.8239087	not [ xor ] )	0
-0.8239087	not [ xor ] ;	0
-0.69897	not [ xor ] =	0
-1	not [ xor ] >>
-0.1760913	c = & _ f	0
-0.1249387	i ) ( _ [	0
-0.1760913	] * ( _ [
-0.1760913	; _ ( _ [	0.1249388
-0.1760913	% __ ( _ ,	1.054358
-0.09691001	, __ ( _ ,	0.8325089
-0.01703334	[ __ ( _ ,	0.1165055
-0.02482358	) ____ ( _ ,	0.04575753
-0.1760913	<s> ____ ( _ ,	0.8239088
-0.1760913	_ ) ) _ (
-0.1760913	] ++ ) _ (
-0.07918125	_ ) * _ _	0.146128
-0.1249387	) ] * _ [	0
-0.1760913	] ) + _ [
-0.1249387	) ] + _ [	0
-0.05115252	( ) , _ (	0.1918855
-0.1760913	= 3 , _ (	0
-0.1760913	= 6 , _ (	0.1249388
-0.09691001	( L , _ )	0
-0.1760913	( R , _ )	0
-1.033424	( _ , _ )	0.1492191
-0.05115252	( _ , _ ,	0.5246482
-0.5835766	, _ , _ )	0.03862929
-0.1423679	, _ , _ ,	0.1503863
-1.905796	, _ , _ </s>
-0.1249387	) ] - _ [	0
-0.1249387	) { . _ =	0
-0.1760913	) ] / _ [
-0.1249387	) ] ; _ [	0
-0.1760913	) ] < _ [	0
-0.1760913	<s> g = _ (	0
-0.1249387	<s> o = _ (	0
-0.1760913	) ] > _ [	0
-0.06694679	( _ [ _ _	0.4336556
-0.1760913	) _ [ _ _	0.8016324
-0.1760913	* _ [ _ _	0.8016324
-0.1760913	< _ [ _ _	0.8016324
-0.1760913	> _ [ _ _	0.8016324
-0.1760913	_ _ [ _ _	0.8016324
-0.1760913	( ) ] _ _	0.1249388
-0.05115252	_ ) ] _ _	-0.30103
-0.06694679	) * _ _ (	0.05799198
-0.0234811	_ [ _ _ (	0
-0.1249387	) ] _ _ _	0
-0.7781513	) ] _ _ __	0
-0.6532125	] _ _ _ (	0
-0.1760913	] _ _ _ [	0
-0.1760913	, = ) __ (
-0.1760913	'_' ) * __ (	0
-0.1760913	( ) , __ (
-0.09691001	_ ) , __ (	-0.2218488
-0.07918125	( ) - __ (	0.06694674
-0.09691001	( _ [ __ (	0.69897
-0.1760913	* _ [ __ (	0.9208188
-0.09691001	+ _ [ __ (	0.69897
-0.1760913	- _ [ __ (	0.9208188
-0.1249387	; _ [ __ (	0.79588
-0.1760913	<s> _ [ __ (	0.9208188
-0.09691001	_ _ [ __ (	0.69897
-0.1760913	] _ _ __ (	0
-0.02996322	_ ( ) ____ (	0.02802873
-0.1760913	, _ ) ____ (	0
-0.1760913	-> op && a ->
-0.1760913	; P ( a ,
-0.1760913	<s> E * a ,	0
-0.1249387	( i , a ,	0
-0.1760913	<s> e -> a =
-0.1760913	= 0 ; a <
-0.1760913	) ) { a =
-0.1760913	void gly ( ala *	0
-0.1760913	phe ( const ala not	0
-0.1760913	( ( ( and )
-0.1760913	) ( ( and )
-0.07918125	] = ( and )	-0.2138798
-0.1760913	not , const and his	0
-0.1760913	( asp - asn .	0
0	, i , au )	0
-0.1760913	; K != b ;	0
-0.1760913	} while ( b &&
-0.1760913	a , * b ;	0.1249388
-0.1760913	<s> e -> b =
-0.1249387	<s> y -> b [	0
-0.1760913	1 ) ; b I	0.1249388
-0.1760913	<s> a = b ;	0
-0.1760913	<s> b = b ->	0
-0.1760913	+ 1 == b ->
-0.1760913	) { b bf &&	0
-0.1760913	void phe ( const ala	0
-0.1760913	( ala * const not	0
-0.1760913	const pro * const his	0
-0.1760913	const not , const and	0
-0.1760913	met val , const pro	0
-0.1249387	( n , d )	0
-0.1760913	) e = d +	0
-0.1760913	( Q [ d ]	0
-0.1760913	H ; return d -
-0.30103	l ) { d -=	0
-0.1760913	( m , e ,	0
-0.1249387	) _ ( f ,	0.1760913
-0.1760913	, h , f ,
-0.1760913	<s> Y = f (
-0.1249387	<s> d = f (	0
-0.1760913	= & _ f }
-0.1760913	" ) ; for (	-0.4101745
-0.1760913	( ) ; for (
-0.1760913	0 ) ; for (
-0.1760913	= 0 ; for (
-0.1760913	= p ; for (
-0.1760913	0 ) { for (
-0.1760913	; ) { for (
-0.1760913	{ for ( g =	0
-0.1760913	, d , g ,
-0.1760913	<s> o -= g *	0
-0.1760913	= 0 ; g <
-0.1249387	<s> g = g *	0
-0.1760913	? o [ g *	0
-0.1760913	xor ] != gln )	0
-0.1249387	? glu : gln ;	0
-0.1760913	& not , glu )	0
-0.1760913	) ) ? glu :	0.1249388
0	<s> static void gly (	0
-0.1760913	+ t != h +	0
-0.07918125	) + ( h <<
-0.1760913	, const and his )
-0.1760913	pro * const his [	0
-0.1249387	while ( ( i =
-0.1249387	) for ( i =
-0.1760913	; for ( i =
-0.1760913	{ m ( i ,	0.1249388
-0.07918125	( f , i )	0
-0.1760913	( m , i ,	0
-0.06694679	( n , i ,	0
-0.30103	= 0 ; i <
-0.1760913	& 1023 | i >>
-0.2218488	) ; } int main	0
-0.1760913	= _ ( j ,
-0.1760913	, i , j ,	0
-0.1760913	+ B -> j +	0
-0.1760913	<s> K ( k )	0
-0.1249387	<s> for ( k =
-0.1760913	, e , k ,
-0.1760913	, j , k ,
-0.1760913	<s> Q [ k ]	0
-0.1760913	{ d -= l ;	0
-0.09691001	d , T l )	0
-0.1760913	. not [ leu ]
-0.1760913	= o [ m *	0
-0.1760913	; } int main (	0
-0.1760913	met main ( met val	0
-0.1249387	) ( ( n ,	0.1760913
-0.06694679	= f ( n ,	0
-0.1249387	, m , n ,	0
-0.09691001	( 1 - n )	0
-0.1760913	= K -> n )	0
-0.1760913	= b -> n ;	0
-0.1249387	gly ( & not ,	0
-0.07918125	and ) ( not .	0
-0.1760913	<s> free ( not .	0
-0.07918125	<s> if ( not .	0
-0.1760913	<s> phe ( not )	0
-0.1760913	if ( * not .	0.1249388
-0.1760913	- asn . not [	0.2218488
-0.8750613	( not . not )	0
-0.09691001	( not . not [	-0.2340832
-0.1760913	++ not . not [	0.3679768
-0.07918125	<s> not . not [	0.146128
-0.07918125	; xor < not .	0
-0.1760913	( const ala not )
-0.1760913	ala * const not ,	0
-0.1249387	* I ( o ,
-0.1760913	= _ ( o ,	0
-0.1760913	( 2 * o -
-0.1760913	4 ) += o *
-0.1760913	5 ) += o *
-0.1760913	, n , o )
-0.1760913	"Q" ) ; o [
-0.1760913	L ] = o >>	0
-0.1760913	. q = o ;	0
-0.1760913	<< 8 | o &
0	, si , of )	0
-0.1760913	0 : ( p =
-0.1760913	; for ( p =
-0.1760913	= h ( p [
-0.1760913	O = * p ++	-0.3309932
-0.1760913	[ W * p ]	0
-0.1760913	, W , p ,
0	<s> static void phe (	0
0	<s> g = pow (	0
-0.1760913	val , const pro *	0
-0.1760913	<s> exit ( puts (
-0.1760913	L ] . q =	0
-0.1760913	! v ; r +	0
-0.1760913	<s> s *= s ;	0
-0.1760913	] ) + s [
-0.1760913	* 10 + s [
-0.1760913	( * ++ s =
-0.1760913	<s> if ( sec )	0
0	( ze , si ,	0
-0.09691001	) G ( sym_ ,	0
-0.1760913	; r + t !=	0
-0.1760913	( e , t )
-0.06694679	, i , t )	0
-0.09691001	( xor = trp ;	0
-0.1760913	tyr = & tyr [
-0.1249387	, a , u )	0
-0.30103	( j , u ,	0
-0.1760913	[ xor - unk ]
-0.1760913	( xor = unk ;	0
-0.1760913	( k - v )
-0.07918125	< not . val ;	-0.3521825
-0.1760913	= not . val ;	-0.3521825
-0.1760913	main ( met val ,	0
-0.1760913	) ; } w f
-0.1760913	>> 8 , x ,
-0.1760913	( I - x )
-0.09691001	, K -> x ,	0
-0.1760913	<s> e -> x =
-0.1760913	. _ = x .	0
-0.06694679	<s> for ( xor =	0
-0.06694679	val ; ++ xor )	0
-0.09691001	= trp ; xor <	0
-0.1760913	= unk ; xor <	0
-1.060698	. not [ xor -	0
-0.06069784	. not [ xor ]	0
-0.1760913	= O ( y [	0
-0.1760913	char * * y )
-0.1760913	, "%s" , y [	0
-0.1760913	, x , y ,
-0.1249387	, K -> y )	0
-0.1760913	<s> e -> y =
-0.1760913	k ] . y =
-0.1760913	; for ( z (
-0.1760913	<s> unsigned long z ;	0
-0.1249387	) ) ) { </s>
-0.1249387	, 0 ) { b
-0.1760913	== NULL ) { </s>
-0.1760913	! O ) { b
-0.1760913	, bf ) { int
-0.1760913	!= gln ) { </s>
-0.1760913	& glu ) { </s>
-0.09691001	T l ) { d	0
-0.1760913	-> n ) { </s>
-0.1760913	( sec ) { </s>
-0.1760913	. val ) { </s>
-0.07918125	( w ) { .	0
-0.06694679	++ xor ) { </s>
-0.39794	; } else { b
-0.07918125	<s> } else { </s>
-0.09691001	<s> typedef struct { </s>
-0.1760913	32 << 8 | o	0
-0.39794	) ) ; } int	-0.07918125
-0.1760913	t ) ; } w	0
-0.4259687	) ; } } </s>
-0.1760913	; } } } }

\6-grams:
-0.07918125	! ! ! ! ! !	0.07918125
-0.1760913	for ( ; K != b	0
-0.1760913	not [ xor ] != gln	0
-0.1760913	; r + t != h	0
-0.1760913	( 1 , "> " ,	0
-0.1249387	err ( 2 , "%s" ,	0
0	write ( 1 , "> "	0
-0.1760913	W [ r ++ % Q	0
-0.1760913	{ . c = & _	0
-0.1760913	) { b bf && s
-0.1760913	',' , ',' , ',' ,	0
-0.1760913	) * __ ( '_' ,	0
-0.5440681	__ ( '_' , '_' )
-0.146128	__ ( '_' , '_' ,	0
-0.6532125	'_' , '_' , '_' )	0
-0.1091445	'_' , '_' , '_' ,	0
-0.1760913	and ) ( ( ( and	0
-0.39794	( and ) ( ( (	0
-0.39794	( and ) ( ( and	0
-0.39794	sym_ , R ) ( L	0.1249388
-0.39794	sym_ , R ) ( R	0
-0.1760913	( ( and ) ( not	0.30103
-0.4259687	= ( and ) ( (	-0.2552725
-0.4259687	= ( and ) ( not	0.1760913
-0.2218488	f , i ) ( _	0
-0.1760913	si , of ) ( (
-0.1760913	g * Y + ( (
-0.1760913	) ( L , ( ,	0
-0.1760913	by ? 0 : ( p	0
-0.1249387	[ xor ] = ( and	0
-0.1760913	( X ) E3 ( X	0
-0.1760913	, R ) F ( L	0
-0.1760913	, L ) G ( sym_	0
-0.1760913	, R ) G ( sym_	0
-0.1760913	, R ) QR ( L	0
-0.05115252	( ) , _ ( )	-0.4423591
-0.1760913	= 3 , _ ( )	0
-0.1760913	= 6 , _ ( )	0
-0.1760913	<s> g = _ ( o	0
-0.1760913	<s> o = _ ( j	0
-0.06694679	) * _ _ ( )	0.05799186
-0.0234811	_ [ _ _ ( )	0
-0.1760913	] _ _ _ ( )
-0.1760913	'_' ) * __ ( '_'	0
-0.09691001	_ ) , __ ( _	0
-0.07918125	( ) - __ ( )	0
-0.09691001	( _ [ __ ( _	0.69897
-0.1760913	* _ [ __ ( _	0.9208188
-0.09691001	+ _ [ __ ( _	0.69897
-0.1760913	- _ [ __ ( _	0.9208188
-0.1249387	; _ [ __ ( _	0.79588
-0.1760913	<s> _ [ __ ( _	0.9208188
-0.09691001	_ _ [ __ ( _	0.69897
-0.1760913	] _ _ __ ( _
-0.02996322	_ ( ) ____ ( _	0.02802873
-0.1760913	, _ ) ____ ( _	0
-0.1249387	<s> d = f ( n	0
-0.1760913	" ) ; for ( i	0
-0.1760913	<s> static void gly ( ala	0
-0.1760913	; } int main ( int
-0.1760913	<s> static void phe ( const	0
-0.1760913	<s> g = pow ( 2	0
-0.1249387	; z ( "#" ) )	0
-0.30103	, '_' , '_' ) *
-0.1760913	) ; Y ( ) ;
-0.8129134	) , _ ( ) )	-0.07918125
-0.1597008	) , _ ( ) ,	-0.5563025
-0.1760913	3 , _ ( ) )
-0.1760913	6 , _ ( ) ,
-0.1760913	_ [ _ ( ) ]
-0.60206	* _ _ ( ) ,
-0.20412	* _ _ ( ) ____	0.39794
-0.6532125	[ _ _ ( ) -	0.07918125
-0.9542425	[ _ _ ( ) </s>
-0.9542425	[ _ _ ( ) ]
-0.30103	[ _ _ ( ) ____	0.1760913
-0.07918125	) - __ ( ) ]	0
-0.1760913	<s> int main ( ) {
-0.1249387	z ( "#" ) ) ;	0
-0.5228788	, _ ( ) ) )
-0.2218488	, _ ( ) ) ,	0
-0.1760913	, ( , ) ) </s>
-0.1760913	L , R ) ) </s>
-0.1760913	[ xor ] ) ) ?	0
-0.1760913	__ ( _ ) ) _	0
-0.1760913	L , ( , ) )	0
-0.07918125	_ , _ , ) ]
-0.1760913	w x , ... ) {
-0.1760913	) exit ( 0 ) ;
-0.09691001	, 0 , 0 ) ;
-0.1760913	( 2 , 0 ) ;	0
-0.1760913	( X , 0 ) {	0
-0.1760913	( j , 0 ) ,
-0.1760913	( o , 0 ) ;	0.1249388
-0.1760913	<< l - 1 ) ;
-0.1760913	- 1 & 15 ) <	0
-0.1760913	( o , 16 ) ;	0
-0.1760913	<s> i ( 4 ) +=	0
-0.1760913	<s> i ( 5 ) +=	0
-0.1760913	( j , 6 ) ;	0
-0.1249387	for ( ; ; ) {
-0.1760913	( = , = ) __	0
-0.1760913	* C * C ) ;	0
-0.1760913	( E * K ) </s>
-0.1760913	( R , L ) G	0
-0.1760913	<s> rewind ( Q ) ;	0
-0.1760913	( FILE * Q ) </s>
-0.9542425	( L , R ) )	0
-0.6532125	( L , R ) </s>
-1.130334	( L , R ) F	0
-1.130334	( L , R ) G	0
-0.8293038	( L , R ) J	0
-1.130334	( L , R ) QR	0
-0.4771213	, N , R ) L	0
-0.09691001	( sym_ , R ) (	0
-0.1760913	) , B R ) ,
-0.1760913	) E3 ( X ) </s>
-0.1760913	} W ( X ) ;
-0.1760913	optind + 1 ] ) ;	0
-0.1760913	y [ optind ] ) ;	0
-0.1760913	not [ xor ] ) )	0
-0.09691001	( L , _ ) ,	0
-0.1760913	( R , _ ) </s>
-0.39794	( _ , _ ) ]
-0.9344984	, _ , _ ) *	0.06694674
-1.156347	, _ , _ ) +
-1.031408	, _ , _ ) ,	0.07918125
-1.332438	, _ , _ ) </s>
-0.2355285	, _ , _ ) ]	-0.1127043
-1.156347	, _ , _ ) ____	0
-0.07918125	] = ( and ) (	-0.1760913
-0.1760913	, i , au ) [
-0.1249387	( n , d ) ;	0
-0.1760913	xor ] != gln ) {	0
-0.1760913	& not , glu ) ;	0
-0.07918125	( f , i ) (	0
-0.1760913	<s> K ( k ) ;	0
-0.09691001	d , T l ) {	0
-0.1249387	( 1 - n ) ;	0
-0.1760913	= K -> n ) {	0
-0.1760913	<s> phe ( not ) ;	0
-0.1760913	( not . not ) ;	0
-0.1760913	, si , of ) (	0
-0.1760913	<s> if ( sec ) {	0
-0.30103	, i , t ) )
-0.1249387	, a , u ) (
-0.06694679	val ; ++ xor ) {	0
-0.1249387	, K -> y ) ;	0
-0.1760913	'_' , '_' ) * __	0
-0.06694679	_ , _ ) * _	0
-0.1760913	E * a , * b	0
-0.1760913	Q ] > 2 * u
-0.1760913	for ( O = * p	0
-0.1760913	, _ ) ] * _	0
-0.1760913	void gly ( ala * const	0
-0.1760913	<s> o -= g * 16	0
-0.1249387	<s> g = g * Y	0
-0.1760913	? o [ g * 80	0
-0.1760913	= o [ m * 80	0
-0.1760913	val , const pro * const	0
-0.1760913	u [ 4 ] *= -	0
-0.1249387	[ h * 80 + m
-0.1760913	[ m * 80 + n
-0.1760913	= g * Y + (	0
-0.1760913	, _ ) ] + _	0
-0.1760913	) e = d + i
-0.1760913	+ t != h + 1
-0.1760913	+ B -> j + 3
-0.1760913	! v ; r + t	0
-0.07918125	not . val ; ++ xor	0.06694674
-0.1760913	, _ ) ] ++ )
-0.1760913	O = * p ++ -
-0.1760913	i ( 4 ) += o	0
-0.1760913	i ( 5 ) += o	0
-0.1760913	1 , "> " , 2	0
-0.1760913	( 2 , "%s" , y	0
-0.1760913	, ',' , ',' , ','
-0.1760913	* __ ( '_' , '_'	0.06694677
-0.1760913	, __ ( '_' , '_'
-0.07918125	( '_' , '_' , '_'	-0.1249387
-0.03218468	, '_' , '_' , '_'	0
-0.1760913	( L , ( , )	0
-0.8750613	, _ ( ) , O	0.1249388
-0.3309932	, _ ( ) , _	0.05115253
-0.8750613	, _ ( ) , __	0
-0.30103	_ ( ) ) , Q
-0.1249387	L , _ ) , B	0
-0.07918125	_ , _ ) , __	0
-0.39794	, 0 , 0 , 0	0
-0.39794	, 0 , 0 , W	0
-0.39794	<s> err ( 2 , "%s"	0.1249388
-0.39794	<s> err ( 2 , 0	0
-0.1760913	, O = 3 , _	0
-0.1760913	R ) ( L , (	0
-0.1760913	) F ( L , R	0
-0.09691001	( G ( L , _	0
-0.1760913	( N ( L , R	0.1249388
-0.1760913	) QR ( L , R	0
-0.1760913	, R ) L , N	0
-0.07918125	( L , N , R	-0.30103
-0.1760913	) L , N , R	-0.3679768
-0.1760913	R ) ( R , _	0
-0.1760913	, 0 , W , p
-0.1760913	% __ ( _ , _	1.041393
-0.09691001	, __ ( _ , _	0.8195439
-0.01703334	[ __ ( _ , _	0.1035405
-0.02482358	) ____ ( _ , _	0.04830468
-0.1760913	<s> ____ ( _ , _
-1.389166	( _ , _ , )	0.30103
-0.02743825	( _ , _ , _	0.05217814
-1.587337	, _ , _ , )	0.1760913
-0.01523997	, _ , _ , _	0.1483197
-0.1760913	<s> E * a , *	0
-0.1249387	( i , a , u	0
-0.1760913	( m , e , k	0
-0.1249387	) _ ( f , i	0.1760913
-0.1760913	{ m ( i , a	0.1249388
-0.1760913	( m , i , au	0
-0.06694679	( n , i , t	0
-0.1760913	, i , j , k	0
-0.1249387	) ( ( n , i	0.1760913
-0.30103	= f ( n , d	0
-0.1249387	, m , n , o	0
-0.1760913	gly ( & not , glu	0
-0.1760913	ala * const not , const	0
-0.1760913	= _ ( o , 16	0
-0.1760913	( ze , si , of	0
-0.09691001	) G ( sym_ , R	0
-0.1760913	( j , u , 1
-0.1760913	main ( met val , const	0
-0.1249387	, K -> x , K	0
-0.07918125	_ _ ( ) - __	0
-0.1760913	[ 4 ] *= - 1
-0.1760913	. not [ xor - unk	0
-0.1760913	l ) { d -= l	0
-0.1760913	-> j + B -> j	0
-0.09691001	-> x , K -> y	0
-0.1760913	; K = K -> n	0
-0.1760913	<s> b = b -> n	0
-0.1760913	b [ L ] . q	0
-0.1760913	( asp - asn . not	0
-0.07918125	and ) ( not . not	0
-0.1760913	<s> free ( not . not	0
-0.07918125	<s> if ( not . not	0
-0.1760913	if ( * not . not
-0.07918125	; xor < not . val	0
-0.1760913	. _ = x . _
-0.2218488	( w ) { . _	0
-0.1760913	, _ ) ] / _	0
-0.1760913	0 , 0 , 0 ,
-0.1760913	err ( 2 , 0 )	0
-0.1760913	a ( X , 0 )	0
-0.1760913	bf && s < 0 )
-0.1760913	<s> ( O = 0 ;	0
-0.09691001	- 1 ] = 0 ;
-0.1760913	for ( a = 0 ;	0
-0.1760913	for ( g = 0 ;	0
-0.09691001	for ( i = 0 ;	0
-0.1760913	for ( k = 0 ;	0
-0.1760913	+= F * ( 1 -
-0.1760913	y [ optind + 1 ]	0
-0.1760913	& 15 ) < 14 &
-0.1760913	o -= g * 16 ;	0
-0.1760913	_ ( o , 16 )	0
0	% ( and ) 16u )
-0.1760913	g = pow ( 2 ,
-0.1760913	, "> " , 2 )
-0.1760913	% Q ] > 2 *	0
-0.1760913	) , O = 3 ,	0
-0.1760913	& 63 ) - 32 )
-0.1760913	] = o >> 32 <<	0
-0.1760913	) , O = 7 ,
-0.1760913	o >> 32 << 8 |	0
-0.1760913	o [ g * 80 +
-0.1249387	o [ h * 80 +	0
-0.1760913	o [ m * 80 +	0
-0.1760913	) ) ? glu : gln	0.1249388
-0.1760913	( "#" ) ) ; z
-0.1760913	2 , 0 ) ; </s>
-0.1249387	o , 0 ) ; </s>
-0.1760913	o , 16 ) ; </s>
-0.1760913	j , 6 ) ; </s>
-0.1760913	C * C ) ; </s>
-0.1760913	rewind ( Q ) ; </s>
-0.1760913	+ 1 ] ) ; </s>
-0.1760913	[ optind ] ) ; </s>
-0.1249387	n , d ) ; </s>
-0.1760913	not , glu ) ; </s>
-0.1760913	K ( k ) ; </s>
-0.1249387	1 - n ) ; </s>
-0.1760913	phe ( not ) ; </s>
-0.1760913	not . not ) ; </s>
-0.1760913	z ( t ) ; }	0
-0.1249387	K -> y ) ; </s>
-0.1760913	( O = 0 ; O
-0.1760913	( a = 0 ; a	0
-0.1760913	( g = 0 ; g	0
-0.1249387	( i = 0 ; i	0
-0.1760913	( k = 0 ; k
-0.1760913	<s> h = 14695981039346656037ULL ; </s>
-0.1760913	-= g * 16 ; </s>
-0.1760913	| b << 56 ; }
-0.1760913	<s> for ( ; ; )	0.1249388
-0.1760913	<s> b = K ; </s>
-0.1760913	, _ ) ] ; </s>
-0.1760913	tyr [ EOF ] ; </s>
-0.1249387	not [ xor ] ; </s>
-0.1760913	; K != b ; K	0
-0.1760913	a , * b ; </s>
-0.1760913	<s> a = b ; </s>
-0.1249387	? glu : gln ; </s>
-0.1760913	{ d -= l ; d
-0.1760913	= b -> n ; </s>
-0.1760913	. q = o ; </s>
-0.1760913	<s> s *= s ; </s>
-0.09691001	( xor = trp ; xor	0
-0.1760913	( xor = unk ; xor	0
-0.07918125	< not . val ; ++	0
-0.1760913	= not . val ; </s>
-0.1760913	<s> unsigned long z ; </s>
-0.1760913	1 & 15 ) < 14	0
-0.1249387	= trp ; xor < not	0
-0.1760913	= unk ; xor < not	0
-0.1760913	= o >> 32 << 8	0
-0.1760913	_ ( = , = )	0
-0.1760913	!= b ; K = K	0
-0.1760913	; for ( O = *	0
-0.09691001	[ - 1 ] = 0	0
-0.1249387	not [ xor ] = (	0
-0.1760913	) { . _ = x	0
-0.1760913	{ for ( g = 0	0
-0.1760913	L ] . q = o	0
-0.243038	<s> for ( xor = trp	0
-0.544068	<s> for ( xor = unk	0
-0.1760913	, _ ) ] > _	0
-0.1760913	L ] = o >> 32	0
-0.1760913	xor ] ) ) ? glu	0
-0.1760913	A -> j + B ->	0
-0.1249387	, _ ) , B R	0
-0.1760913	L , R ) F (	0
-0.1760913	R , L ) G (	0
-0.1760913	L , R ) G (	0
-0.1760913	1 ) ; b I ==
-0.1249387	L , R ) J (
-0.1249387	K -> x , K ->	0.09691
-0.1760913	<s> for ( ; K !=	0
-0.1760913	K != b ; K =	0
-0.1760913	b ; K = K ->	0
-0.1249387	, R ) ( L ,	0
-0.1760913	R ) F ( L ,	0
-0.09691001	J ( G ( L ,	0
-0.1760913	R ) QR ( L ,	0
-0.1760913	N , R ) L ,	0
-0.1760913	y -> b [ L ]	0
-0.1760913	16711935 ; z [ L ]	0
-0.1760913	R ) L , N ,	0
-0.1249387	_ ( ) , O =
-0.1760913	[ r ++ % Q ]	0
-0.1760913	T [ i / Q ]
0	L , R ) QR (	0
-0.1760913	, R ) ( R ,	0
-0.1760913	) ( L , R )
-0.1760913	F ( L , R )	-0.3679768
-0.1760913	F0 ( L , R )
-0.1760913	F1 ( L , R )
-0.1760913	K ( L , R )
-0.1249387	N ( L , R )
-0.1760913	QR ( L , R )	-0.3679768
-0.1760913	QS ( L , R )
-0.1760913	L , N , R )	0
-0.6532125	L , N , R </s>
-0.09691001	G ( sym_ , R )	0
-0.1249387	_ ) , B R )	0
-0.09691001	( T d , T l	0
-0.1760913	0 , 0 , W ,	0
-0.1760913	X ) E3 ( X )	0
-0.1760913	g = g * Y +	0
-0.1760913	i ) ( _ [ _	0
-0.1760913	; _ ( _ [ _	0.1249388
-0.1760913	) ] * _ [ _	0
-0.1249387	) ] + _ [ __	0
-0.1760913	) ] - _ [ __	0
-0.1249387	) ] ; _ [ __	0
-0.1760913	) ] < _ [ _	0
-0.1760913	) ] > _ [ _	0
-0.544068	] _ _ _ [ _	0
-0.243038	] _ _ _ [ __	0
-0.1249387	<s> y -> b [ L	0
-0.1760913	pro * const his [ ]	0
-0.1760913	- asn . not [ xor	0.2218488
-0.03778856	( not . not [ xor	-0.2397603
-0.1760913	++ not . not [ xor	0.3245111
-0.09691001	<s> not . not [ xor	0.1995723
-0.1760913	= O ( y [ optind
-0.1760913	, "%s" , y [ optind
-0.39794	- __ ( ) ] _	0
-1.130334	_ , _ ) ] )
-0.9542425	_ , _ ) ] *	0
-1.130334	_ , _ ) ] +	0
-1.130334	_ , _ ) ] ++	0
-1.130334	_ , _ ) ] /	0
-1.130334	_ , _ ) ] ;	0
-1.130334	_ , _ ) ] >	0
-0.4771213	_ , _ ) ] _	0
-0.1760913	80 + g ++ ] =
-0.1760913	= u [ 0 ] ;
-0.1760913	[ optind + 1 ] )	0
-0.1760913	p [ - 1 ] =
-0.1249387	u [ - 1 ] =	0.09691
-0.1760913	; u [ 3 ] =
-0.1760913	, u [ 4 ] ,
-0.1760913	-> b [ L ] .	0
-0.1760913	; z [ L ] =
-0.1760913	r ++ % Q ] >
-0.1760913	* const his [ ] )
-0.1760913	( Q [ d ] .
-0.1760913	<s> Q [ k ] .
-0.1760913	[ W * p ] ,
-1	. not [ xor ] !=	0
-1	. not [ xor ] &
-0.8239087	. not [ xor ] )	0
-0.8239087	. not [ xor ] ;	0
-0.69897	. not [ xor ] =	0
-1	. not [ xor ] >>
-0.1760913	. c = & _ f	0
-0.1249387	, i ) ( _ [	0
-0.1760913	) ] * ( _ [
-0.09691001	) , __ ( _ ,	0
-0.01772877	_ [ __ ( _ ,	0.01703334
-0.02802872	( ) ____ ( _ ,	0.05115247
-0.1760913	_ ) ____ ( _ ,	0.7781513
-0.1760913	( _ ) ) _ (
-0.1760913	) ] ++ ) _ (
-0.07918125	, _ ) * _ _	0
-0.1760913	_ ) ] * _ [
-0.1760913	) ] ) + _ [
-0.1760913	_ ) ] + _ [	0.1249388
-0.05115252	_ ( ) , _ (	0
-0.1760913	O = 3 , _ (	0
-0.1760913	O = 6 , _ (	0
-0.09691001	G ( L , _ )	0
-0.1760913	) ( R , _ )	0
-0.1760913	<s> ( _ , _ ,	0.7359536
-0.01336396	__ ( _ , _ ,	0.1716821
-0.6766936	____ ( _ , _ )	-0.07918122
-0.1326256	____ ( _ , _ ,	0.03698349
-0.1760913	<s> , _ , _ ,	0.9852768
-0.5781478	_ , _ , _ )	0
-0.1444923	_ , _ , _ ,	0.007552862
-1.900367	_ , _ , _ </s>
-0.1249387	w ) { . _ =	0
-0.1760913	_ ) ] / _ [
-0.1760913	( ) ] ; _ [	0.1249388
-0.1760913	_ ) ] > _ [	0
-0.1760913	) ( _ [ _ _	0.3679768
-0.1249387	_ ( _ [ _ _	0.243038
-0.1760913	] * _ [ _ _	0
-0.1760913	] < _ [ _ _	0
-0.1760913	] > _ [ _ _	0
-0.1760913	_ _ _ [ _ _	0
-0.1760913	__ ( ) ] _ _	0
-0.05115252	, _ ) ] _ _	0
-0.09691001	_ ) * _ _ (	0.146128
-0.06694679	( _ [ _ _ (	0.4336556
-0.1760913	) _ [ _ _ (	0.8016324
-0.1760913	* _ [ _ _ (	0.8016324
-0.1760913	< _ [ _ _ (	0.8016324
-0.1760913	> _ [ _ _ (	0.8016324
-0.1760913	_ _ [ _ _ (	0.8016324
-0.1760913	( ) ] _ _ _
-0.05799195	_ ) ] _ _ _	-0.06694677
-0.6532125	) ] _ _ _ (	0
-0.1760913	) ] _ _ _ [	0
-0.1760913	= , = ) __ (
-0.1760913	, '_' ) * __ (	0
-0.1760913	_ ( ) , __ (
-0.09691001	, _ ) , __ (	0
-0.07918125	_ ( ) - __ (	0
-0.1249387	] + _ [ __ (	0.09691
-0.1760913	] - _ [ __ (	0
-0.1249387	] ; _ [ __ (	0
-0.09691001	_ _ _ [ __ (	0
-0.1760913	) ] _ _ __ (	0
-0.02996322	_ _ ( ) ____ (	0
-0.1760913	_ , _ ) ____ (	0
-0.1760913	b -> op && a ->
-0.1249387	m ( i , a ,	0
-0.1760913	a = 0 ; a <
-0.1760913	static void gly ( ala *	0
-0.1760913	void phe ( const ala not	0
-0.1760913	) ( ( ( and )
-0.1760913	and ) ( ( and )
-0.1249387	xor ] = ( and )	0.1760913
-0.1760913	const not , const and his	0
0	m , i , au )	0
-0.1760913	( ; K != b ;	0
-0.1760913	<s> } while ( b &&
-0.1760913	* a , * b ;	0
-0.1760913	static void phe ( const ala	0
-0.1760913	gly ( ala * const not	0
-0.1760913	, const pro * const his	0
-0.1760913	* const not , const and	0
-0.1760913	( met val , const pro	0
-0.1249387	f ( n , d )	0
-0.30103	T l ) { d -=	0
-0.1760913	bh ( m , e ,	0
-0.1760913	) ) _ ( f ,	0.1249388
-0.1760913	c = & _ f }
-0.1760913	) { for ( g =	0
-0.1760913	g = 0 ; g <
-0.1760913	[ xor ] != gln )	0
-0.1249387	) ? glu : gln ;	0
-0.1760913	( & not , glu )	0
-0.1760913	] ) ) ? glu :	0
-0.1760913	r + t != h +	0
-0.1760913	not , const and his )
-0.1760913	const pro * const his [	0
-0.1249387	<s> while ( ( i =
-0.1760913	; ) for ( i =
-0.1760913	) ; for ( i =
-0.07918125	_ ( f , i )	0
-0.07918125	( ( n , i ,	0.06694674
-0.1760913	i = 0 ; i <
-0.1760913	) ) ; } int main
-0.1760913	o = _ ( j ,
-0.1760913	j + B -> j +	0
-0.1760913	m , e , k ,
-0.1760913	i , j , k ,
-0.1760913	) { d -= l ;	0
-0.09691001	T d , T l )	0
-0.1760913	not . not [ leu ]
-0.1760913	] = o [ m *	0
-0.1760913	) ; } int main (	0
-0.1760913	<s> met main ( met val	0
-0.1249387	d = f ( n ,	-0.30103
-0.09691001	* ( 1 - n )	0
-0.1760913	K = K -> n )	0
-0.1760913	b = b -> n ;	0
-0.1249387	<s> gly ( & not ,	0
-0.07918125	( and ) ( not .	0
-0.1760913	<s> if ( * not .	0
-0.1760913	asp - asn . not [	0
-0.07918125	) ( not . not [	0.3010299
-0.1760913	= ( not . not [	0.60206
-0.1760913	free ( not . not )	0
-0.09691001	if ( not . not [	0.4771212
-0.1760913	<s> ++ not . not [	0
-0.1249387	trp ; xor < not .	0.1760913
-0.1760913	unk ; xor < not .	0.30103
-0.1760913	phe ( const ala not )
-0.1760913	( ala * const not ,	0
-0.1760913	V * I ( o ,
-0.1760913	g = _ ( o ,	0
-0.1760913	( ( 2 * o -
-0.1760913	( 4 ) += o *
-0.1760913	( 5 ) += o *
-0.1760913	m , n , o )
-0.1760913	] . q = o ;	0
-0.1760913	32 << 8 | o &
0	ze , si , of )	0
-0.1760913	? 0 : ( p =
-0.1760913	] = h ( p [
-0.1760913	( O = * p ++	0
-0.1760913	met val , const pro *	0
-0.1760913	[ L ] . q =	0
-0.1760913	] * 10 + s [
-0.1760913	L ) G ( sym_ ,	0.2218488
-0.1760913	R ) G ( sym_ ,	0.2218488
-0.1760913	v ; r + t !=	0
-0.1760913	r ( e , t )
-0.06694679	n , i , t )	0
-0.09691001	for ( xor = trp ;	0
-0.1760913	<s> tyr = & tyr [
-0.1249387	i , a , u )	0
-0.1760913	not [ xor - unk ]
-0.1760913	for ( xor = unk ;	0
-0.07918125	xor < not . val ;	0
-0.1760913	met main ( met val ,	0
-0.1760913	t ) ; } w f
-0.1760913	{ . _ = x .	0
-0.06694679	. val ; ++ xor )	0
-0.09691001	xor = trp ; xor <	0
-0.1760913	xor = unk ; xor <	0
-0.09691001	asn . not [ xor ]	-0.5314789
-0.9777236	not . not [ xor -	0
-0.07463362	not . not [ xor ]	-0.146128
-0.1760913	, char * * y )
-0.1760913	2 , "%s" , y [	0
-0.1249387	x , K -> y )	0
-0.1760913	[ k ] . y =
-0.1760913	X , 0 ) { b
-0.1760913	be , bf ) { int
-0.1760913	] != gln ) { </s>
-0.09691001	, T l ) { d	0
-0.1760913	K -> n ) { </s>
-0.1760913	if ( sec ) { </s>
-0.1760913	not . val ) { </s>
-0.1760913	( ( w ) { .
-0.1760913	, ( w ) { .	-0.07918125
-0.06694679	; ++ xor ) { </s>
-0.1760913	>> 32 << 8 | o	0
-0.1760913	( t ) ; } w	0

\7-grams:
-0.09691001	! ! ! ! ! ! !
-0.1760913	<s> for ( ; K != b
-0.1760913	. not [ xor ] != gln
-0.1760913	v ; r + t != h
-0.1760913	write ( 1 , "> " ,
-0.1760913	<s> err ( 2 , "%s" ,
-0.1760913	'_' ) * __ ( '_' ,
-0.1760913	* __ ( '_' , '_' ,
-0.07918125	( '_' , '_' , '_' ,
-0.5118834	, '_' , '_' , '_' )
-0.1597008	, '_' , '_' , '_' ,
-0.1760913	( and ) ( ( ( and
-0.1760913	= ( and ) ( ( and
-0.39794	( sym_ , R ) ( L
-0.39794	( sym_ , R ) ( R
-0.4771213	] = ( and ) ( (
-0.30103	] = ( and ) ( not
-0.2218488	( f , i ) ( _
-0.1760913	, si , of ) ( (
-0.1760913	= g * Y + ( (
-0.1760913	R ) ( L , ( ,
-0.1249387	not [ xor ] = ( and
-0.1760913	L , R ) F ( L
-0.1760913	R , L ) G ( sym_
-0.1760913	L , R ) G ( sym_
-0.1760913	L , R ) QR ( L
-0.05115252	_ ( ) , _ ( )
-0.1760913	O = 3 , _ ( )
-0.1760913	O = 6 , _ ( )
-0.09691001	_ ) * _ _ ( )
-0.06694679	( _ [ _ _ ( )
-0.1760913	) _ [ _ _ ( )
-0.1760913	* _ [ _ _ ( )
-0.1760913	< _ [ _ _ ( )
-0.1760913	> _ [ _ _ ( )
-0.1760913	_ _ [ _ _ ( )
-0.1760913	) ] _ _ _ ( )
-0.1760913	, '_' ) * __ ( '_'
-0.09691001	, _ ) , __ ( _
-0.07918125	_ ( ) - __ ( )
-0.1249387	] + _ [ __ ( _
-0.1760913	] - _ [ __ ( _
-0.1249387	] ; _ [ __ ( _
-0.09691001	_ _ _ [ __ ( _
-0.1760913	) ] _ _ __ ( _
-0.02996322	_ _ ( ) ____ ( _
-0.1760913	_ , _ ) ____ ( _
-0.1760913	) ; } int main ( int
-0.30103	'_' , '_' , '_' ) *
-0.05115252	( ) , _ ( ) ,
-0.1760913	= 3 , _ ( ) )
-0.1760913	= 6 , _ ( ) ,
-0.544068	) * _ _ ( ) ,
-0.243038	) * _ _ ( ) ____
-0.6532125	_ [ _ _ ( ) -
-0.9542425	_ [ _ _ ( ) </s>
-0.9542425	_ [ _ _ ( ) ]
-0.30103	_ [ _ _ ( ) ____
-0.07918125	( ) - __ ( ) ]
-0.1249387	; z ( "#" ) ) ;
-0.1760913	) , _ ( ) ) ,
-0.1760913	L , ( , ) ) </s>
-0.1760913	( L , R ) ) </s>
-0.1760913	not [ xor ] ) ) ?
-0.1760913	( L , ( , ) )
-0.1760913	( _ , _ , ) ]
-0.1249387	, _ , _ , ) ]
-0.1760913	err ( 2 , 0 ) ;
-0.1760913	a ( X , 0 ) {
-0.1760913	_ ( o , 16 ) ;
-0.1760913	<s> for ( ; ; ) {
-0.1760913	_ ( = , = ) __
-0.1760913	F ( L , R ) </s>
-0.1760913	QR ( L , R ) </s>
-0.4771213	L , N , R ) L
-0.09691001	G ( sym_ , R ) (
-0.1760913	_ ) , B R ) ,
-0.1760913	X ) E3 ( X ) </s>
-0.1760913	[ optind + 1 ] ) ;
-0.1760913	. not [ xor ] ) )
-0.09691001	G ( L , _ ) ,
-0.1760913	) ( R , _ ) </s>
-0.30103	____ ( _ , _ ) ]
-0.9344984	_ , _ , _ ) *
-1.156347	_ , _ , _ ) +
-1.031408	_ , _ , _ ) ,
-1.332438	_ , _ , _ ) </s>
-0.2355285	_ , _ , _ ) ]
-1.156347	_ , _ , _ ) ____
-0.1249387	xor ] = ( and ) (
-0.1760913	m , i , au ) [
-0.1249387	f ( n , d ) ;
-0.1760913	[ xor ] != gln ) {
-0.1760913	( & not , glu ) ;
-0.07918125	_ ( f , i ) (
-0.09691001	T d , T l ) {
-0.1249387	* ( 1 - n ) ;
-0.1760913	K = K -> n ) {
-0.1760913	free ( not . not ) ;
-0.1760913	ze , si , of ) (
-0.30103	n , i , t ) )
-0.1249387	i , a , u ) (
-0.06694679	. val ; ++ xor ) {
-0.1249387	x , K -> y ) ;
-0.07918125	, _ , _ ) * _
-0.1760913	<s> E * a , * b
-0.1760913	% Q ] > 2 * u
-0.1760913	; for ( O = * p
-0.1760913	_ , _ ) ] * _
-0.1760913	static void gly ( ala * const
-0.1760913	] = o [ m * 80
-0.1760913	met val , const pro * const
-0.1249387	o [ h * 80 + m
-0.1760913	o [ m * 80 + n
-0.1760913	g = g * Y + (
-0.1760913	_ , _ ) ] + _
-0.1760913	r + t != h + 1
-0.1760913	j + B -> j + 3
-0.07918125	< not . val ; ++ xor
-0.1760913	_ , _ ) ] ++ )
-0.1760913	( O = * p ++ -
-0.1760913	<s> i ( 4 ) += o
-0.1760913	<s> i ( 5 ) += o
-0.1760913	( 1 , "> " , 2
-0.1760913	err ( 2 , "%s" , y
-0.1760913	',' , ',' , ',' , ','
-0.1760913	) * __ ( '_' , '_'
-0.07918125	__ ( '_' , '_' , '_'
-0.03218468	'_' , '_' , '_' , '_'
-0.1760913	) ( L , ( , )
-0.1760913	) , _ ( ) , _
-0.6532125	) , _ ( ) , __
-0.30103	, _ ( ) ) , Q
-0.1249387	( L , _ ) , B
-0.09691001	, _ , _ ) , __
-0.1760913	) , O = 3 , _
-0.1760913	, R ) ( L , (
-0.1760913	R ) F ( L , R
-0.09691001	J ( G ( L , _
-0.1760913	R ) QR ( L , R
-0.1760913	N , R ) L , N
-0.1760913	R ) L , N , R
-0.1760913	, R ) ( R , _
-0.1760913	0 , 0 , W , p
-0.09691001	) , __ ( _ , _
-0.01772877	_ [ __ ( _ , _
-0.02802872	( ) ____ ( _ , _
-0.1760913	_ ) ____ ( _ , _
-0.1760913	<s> ( _ , _ , _
-1.217484	__ ( _ , _ , )
-0.04139268	__ ( _ , _ , _
-0.02996322	____ ( _ , _ , _
-0.1760913	<s> , _ , _ , _
-1.579784	_ , _ , _ , )
-0.01551217	_ , _ , _ , _
-0.1249387	m ( i , a , u
-0.1760913	bh ( m , e , k
-0.1760913	) ) _ ( f , i
-0.07918125	( ( n , i , t
-0.1249387	d = f ( n , d
-0.1760913	<s> gly ( & not , glu
-0.1760913	( ala * const not , const
-0.1760913	g = _ ( o , 16
-0.1760913	L ) G ( sym_ , R
-0.1760913	R ) G ( sym_ , R
-0.1760913	met main ( met val , const
-0.09691001	[ _ _ ( ) - __
-0.1760913	u [ 4 ] *= - 1
-0.1760913	not . not [ xor - unk
-0.1760913	T l ) { d -= l
-0.1760913	A -> j + B -> j
-0.1249387	K -> x , K -> y
-0.1760913	b ; K = K -> n
-0.1760913	-> b [ L ] . q
-0.07918125	( and ) ( not . not
-0.1760913	<s> if ( * not . not
-0.1249387	trp ; xor < not . val
-0.1760913	unk ; xor < not . val
-0.1760913	{ . _ = x . _
-0.1760913	, ( w ) { . _
-0.1760913	_ , _ ) ] / _
-0.1760913	, 0 , 0 , 0 ,
-0.1760913	<s> err ( 2 , 0 )
-0.09691001	[ - 1 ] = 0 ;
-0.1760913	{ for ( g = 0 ;
-0.1760913	1 & 15 ) < 14 &
-0.1760913	<s> o -= g * 16 ;
-0.1760913	= _ ( o , 16 )
-0.1760913	<s> g = pow ( 2 ,
-0.1760913	1 , "> " , 2 )
-0.1760913	L ] = o >> 32 <<
-0.1760913	= o >> 32 << 8 |
-0.1760913	? o [ g * 80 +
-0.1760913	= o [ m * 80 +
-0.1760913	] ) ) ? glu : gln
-0.1760913	z ( "#" ) ) ; z
-0.1760913	( 2 , 0 ) ; </s>
-0.1760913	( o , 0 ) ; </s>
-0.1760913	( o , 16 ) ; </s>
-0.1760913	( j , 6 ) ; </s>
-0.1760913	* C * C ) ; </s>
-0.1760913	<s> rewind ( Q ) ; </s>
-0.1760913	optind + 1 ] ) ; </s>
-0.1760913	y [ optind ] ) ; </s>
-0.1249387	( n , d ) ; </s>
-0.1760913	& not , glu ) ; </s>
-0.1760913	<s> K ( k ) ; </s>
-0.1249387	( 1 - n ) ; </s>
-0.1760913	<s> phe ( not ) ; </s>
-0.1760913	( not . not ) ; </s>
-0.1249387	, K -> y ) ; </s>
-0.1760913	<s> ( O = 0 ; O
-0.1760913	for ( a = 0 ; a
-0.1760913	for ( g = 0 ; g
-0.1249387	for ( i = 0 ; i
-0.1760913	for ( k = 0 ; k
-0.1760913	o -= g * 16 ; </s>
-0.1760913	_ , _ ) ] ; </s>
-0.1249387	. not [ xor ] ; </s>
-0.1760913	( ; K != b ; K
-0.1760913	* a , * b ; </s>
-0.1249387	) ? glu : gln ; </s>
-0.1760913	) { d -= l ; d
-0.1760913	b = b -> n ; </s>
-0.1760913	] . q = o ; </s>
-0.09691001	for ( xor = trp ; xor
-0.1760913	for ( xor = unk ; xor
-0.07918125	xor < not . val ; ++
-0.1760913	- 1 & 15 ) < 14
-0.1249387	xor = trp ; xor < not
-0.1760913	xor = unk ; xor < not
-0.1760913	] = o >> 32 << 8
-0.1760913	K != b ; K = K
-0.1249387	u [ - 1 ] = 0
-0.1249387	. not [ xor ] = (
-0.1760913	w ) { . _ = x
-0.1760913	) { for ( g = 0
-0.1760913	[ L ] . q = o
-0.1760913	_ , _ ) ] > _
-0.1760913	[ xor ] ) ) ? glu
-0.1249387	L , _ ) , B R
-0.1760913	( L , R ) F (
-0.1760913	( R , L ) G (
-0.1760913	( L , R ) G (
-0.1249387	( L , R ) J (
-0.1249387	, K -> x , K ->
-0.1760913	; K != b ; K =
-0.1760913	!= b ; K = K ->
-0.1760913	sym_ , R ) ( L ,
-0.1760913	, R ) F ( L ,
-0.1760913	, R ) QR ( L ,
-0.1760913	, N , R ) L ,
-0.1760913	<s> y -> b [ L ]
-0.1760913	, R ) L , N ,
-0.1760913	, _ ( ) , O =
-0.1760913	W [ r ++ % Q ]
0	( L , R ) QR (
-0.1760913	sym_ , R ) ( R ,
-0.1760913	) F ( L , R )
-0.1760913	( N ( L , R )
-0.1760913	) QR ( L , R )
-0.07918125	( L , N , R )
-0.1760913	) L , N , R </s>
-0.09691001	) G ( sym_ , R )
-0.1249387	, _ ) , B R )
-0.1760913	, 0 , 0 , W ,
-0.1760913	( X ) E3 ( X )
-0.1760913	<s> g = g * Y +
-0.1760913	, i ) ( _ [ _
-0.1760913	_ ) ] + _ [ __
-0.1760913	( ) ] ; _ [ __
-0.1760913	_ ) ] > _ [ _
-0.544068	) ] _ _ _ [ _
-0.243038	) ] _ _ _ [ __
-0.1760913	const pro * const his [ ]
-0.1760913	asp - asn . not [ xor
-0.07918125	) ( not . not [ xor
-0.1760913	= ( not . not [ xor
-0.1249387	if ( not . not [ xor
-0.1760913	<s> ++ not . not [ xor
-0.1760913	2 , "%s" , y [ optind
-0.39794	) - __ ( ) ] _
-1.09691	, _ , _ ) ] )
-0.9208187	, _ , _ ) ] *
-1.09691	, _ , _ ) ] +
-1.09691	, _ , _ ) ] /
-1.09691	, _ , _ ) ] ;
-0.4436975	, _ , _ ) ] _
-0.1760913	y [ optind + 1 ] )
-0.1760913	y -> b [ L ] .
-0.1760913	16711935 ; z [ L ] =
-0.1760913	[ r ++ % Q ] >
-0.1760913	pro * const his [ ] )
-0.1249387	asn . not [ xor ] )
-0.90309	not . not [ xor ] !=
-0.90309	not . not [ xor ] &
-0.7269987	not . not [ xor ] ;
-0.7269987	not . not [ xor ] =
-0.90309	not . not [ xor ] >>
-0.1760913	{ . c = & _ f
-0.1249387	f , i ) ( _ [
-0.09691001	_ ) , __ ( _ ,
-0.09691001	( _ [ __ ( _ ,
-0.1760913	* _ [ __ ( _ ,
-0.09691001	+ _ [ __ ( _ ,
-0.1760913	- _ [ __ ( _ ,
-0.1249387	; _ [ __ ( _ ,
-0.1760913	<s> _ [ __ ( _ ,
-0.09691001	_ _ [ __ ( _ ,
-0.02996322	_ ( ) ____ ( _ ,
-0.1760913	, _ ) ____ ( _ ,
-0.1760913	__ ( _ ) ) _ (
-0.07918125	_ , _ ) * _ _
-0.1760913	, _ ) ] * _ [
-0.1760913	, _ ) ] + _ [
-0.05799195	, _ ( ) , _ (
-0.1760913	, O = 3 , _ (
-0.09691001	( G ( L , _ )
-0.1760913	R ) ( R , _ )
-0.1760913	% __ ( _ , _ ,
-0.09691001	, __ ( _ , _ ,
-0.01703334	[ __ ( _ , _ ,
-0.7533277	) ____ ( _ , _ )
-0.1165056	) ____ ( _ , _ ,
-1.070038	( _ , _ , _ )
-0.04884857	( _ , _ , _ ,
-0.4732949	, _ , _ , _ )
-0.1957459	, _ , _ , _ ,
-1.752048	, _ , _ , _ </s>
-0.1249387	( w ) { . _ =
-0.1760913	, _ ) ] / _ [
-0.1760913	, _ ) ] > _ [
-0.1760913	i ) ( _ [ _ _
-0.1760913	; _ ( _ [ _ _
-0.1760913	) ] * _ [ _ _
-0.1760913	) ] < _ [ _ _
-0.1760913	) ] > _ [ _ _
-0.1760913	] _ _ _ [ _ _
-0.1760913	- __ ( ) ] _ _
-0.05115252	_ , _ ) ] _ _
-0.09691001	, _ ) * _ _ (
-0.1760913	) ( _ [ _ _ (
-0.1249387	_ ( _ [ _ _ (
-0.1760913	] * _ [ _ _ (
-0.1760913	] < _ [ _ _ (
-0.1760913	] > _ [ _ _ (
-0.1760913	_ _ _ [ _ _ (
-0.1760913	__ ( ) ] _ _ _
-0.05799195	, _ ) ] _ _ _
-0.146128	_ ) ] _ _ _ [
-0.1760913	( = , = ) __ (
-0.1760913	'_' , '_' ) * __ (
-0.1760913	, _ ( ) , __ (
-0.09691001	_ , _ ) , __ (
-0.07918125	_ _ ( ) - __ (
-0.1249387	) ] + _ [ __ (
-0.1760913	) ] - _ [ __ (
-0.1249387	) ] ; _ [ __ (
-0.09691001	] _ _ _ [ __ (
-0.07918125	* _ _ ( ) ____ (
-0.04575749	[ _ _ ( ) ____ (
-0.1760913	, _ , _ ) ____ (
-0.1760913	{ m ( i , a ,
-0.1760913	( a = 0 ; a <
-0.1760913	<s> static void gly ( ala *
-0.1760913	static void phe ( const ala not
-0.1760913	and ) ( ( ( and )
-0.1760913	( and ) ( ( and )
-0.1249387	[ xor ] = ( and )
-0.1760913	* const not , const and his
0	( m , i , au )
-0.1760913	for ( ; K != b ;
-0.1760913	E * a , * b ;
-0.1760913	<s> static void phe ( const ala
-0.1760913	void gly ( ala * const not
-0.1760913	val , const pro * const his
-0.1760913	ala * const not , const and
-0.1760913	main ( met val , const pro
-0.1249387	= f ( n , d )
-0.30103	, T l ) { d -=
-0.1760913	. c = & _ f }
-0.1760913	( g = 0 ; g <
-0.1760913	not [ xor ] != gln )
-0.1760913	) ) ? glu : gln ;
-0.1760913	gly ( & not , glu )
-0.1760913	xor ] ) ) ? glu :
-0.1760913	; r + t != h +
-0.1760913	const not , const and his )
-0.1760913	, const pro * const his [
-0.1760913	" ) ; for ( i =
-0.1249387	) _ ( f , i )
-0.1249387	) ( ( n , i ,
-0.1760913	( i = 0 ; i <
-0.1760913	<s> o = _ ( j ,
-0.1760913	-> j + B -> j +
-0.1760913	( m , e , k ,
-0.1760913	, i , j , k ,
-0.1760913	l ) { d -= l ;
-0.09691001	( T d , T l )
-0.1249387	<s> d = f ( n ,
-0.1760913	; K = K -> n )
-0.1760913	<s> b = b -> n ;
-0.1760913	( ( and ) ( not .
-0.1249387	= ( and ) ( not .
-0.1760913	( asp - asn . not [
-0.07918125	and ) ( not . not [
-0.1760913	<s> free ( not . not )
-0.09691001	<s> if ( not . not [
-0.1249387	= trp ; xor < not .
-0.1760913	= unk ; xor < not .
-0.1760913	void phe ( const ala not )
-0.1760913	gly ( ala * const not ,
-0.1760913	<s> g = _ ( o ,
-0.1760913	i ( 4 ) += o *
-0.1760913	i ( 5 ) += o *
-0.1760913	, m , n , o )
-0.1760913	L ] . q = o ;
-0.1760913	>> 32 << 8 | o &
0	( ze , si , of )
-0.1760913	by ? 0 : ( p =
-0.1760913	for ( O = * p ++
-0.1760913	( met val , const pro *
-0.1760913	b [ L ] . q =
-0.1760913	, L ) G ( sym_ ,
-0.1760913	, R ) G ( sym_ ,
-0.1760913	! v ; r + t !=
-0.06694679	( n , i , t )
-0.09691001	<s> for ( xor = trp ;
-0.1249387	( i , a , u )
-0.1760913	. not [ xor - unk ]
-0.1760913	<s> for ( xor = unk ;
-0.07918125	; xor < not . val ;
-0.1760913	<s> met main ( met val ,
-0.1760913	( t ) ; } w f
-0.1760913	) { . _ = x .
-0.07918125	not . val ; ++ xor )
-0.09691001	( xor = trp ; xor <
-0.1760913	( xor = unk ; xor <
-0.1760913	- asn . not [ xor ]
-0.04139268	( not . not [ xor ]
-0.1760913	++ not . not [ xor ]
-0.1249387	<s> not . not [ xor ]
-0.1760913	( 2 , "%s" , y [
-0.1249387	-> x , K -> y )
-0.1760913	( X , 0 ) { b
-0.1760913	xor ] != gln ) { </s>
-0.09691001	d , T l ) { d
-0.1760913	= K -> n ) { </s>
-0.1760913	<s> if ( sec ) { </s>
-0.06694679	val ; ++ xor ) { </s>
-0.1760913	o >> 32 << 8 | o
-0.1760913	z ( t ) ; } w

\end\
