
\data\
ngram 1=941
ngram 2=5330
ngram 3=2462
ngram 4=1448
ngram 5=820
ngram 6=505
ngram 7=333
ngram 8=232
ngram 9=162

\1-grams:
-2.346399	!	-99
-2.997064	!=	-99
-2.81342	"	-99
-4.275818	"!:E%;!ea!!!WqE0z!f/y}!%!!Qi6!uzt!n}?]!bl!ak!SetR<"	-99
-4.275818	"!pv!;!Hm%Ro4"	-99
-3.43072	""	-99
-3.798697	"#"	-99
-3.798697	"$"	-99
-4.275818	"%."	-99
-4.275818	"%c"	-99
-3.974788	"%d	-99
-4.275818	"%d,%dd%d\n"	-99
-4.275818	"%d\n"	-99
-4.275818	"%da%d,%d\n"	-99
-4.275818	"%da%d\n"	-99
-4.275818	"%dd%d\n"	-99
-4.275818	"%f,%f,"	-99
-3.576848	"%s"	-99
-4.275818	"('A)"	-99
-3.974788	"('A`)"	-99
-4.275818	"(A`)"	-99
-4.275818	"(O**"	-99
-4.275818	")"	-99
-4.275818	")$"	-99
-4.275818	");"	-99
-4.275818	"*"	-99
-4.275818	"*_[512],**p=_,**d,b,q;for(b=0;b"	-99
-4.275818	"*p=#b,P[9999],*d=P,*e[]="	-99
-4.275818	"++<512;p=_+q)_[q"	-99
-4.275818	"-"	-99
-4.275818	"/"	-99
-4.275818	"/*;;	-99
-4.275818	"11\x80"	-99
-4.275818	"258EAFA5-"	-99
-4.275818	"8!@dP,!!o+fb"	-99
-3.798697	";"	-99
-4.275818	";;"	-99
-4.275818	";Gam"	-99
-4.275818	";GlockQ18"	-99
-4.275818	";Heca"	-99
-4.275818	";Time:Q"	-99
-4.275818	";^Q<d|8=o;]Q<dj8<Pk8<c]'?;QQdi8?P'Q)d8<9`8?c;Qdh8=P']Q<`c8>PQ9_8"	-99
-4.275818	"<	-99
-4.275818	"<"	-99
-4.275818	"<;iQ=/*do<;dQ=ook8?boc;aQ=odr8>oc;_Q<ox8>oc"	-99
-4.275818	"<o_Q<o_QBdo`QQ';`Q=9`]8=bobQ_o_Q<o]8=';bQC(88cQ`bcgQ>oP']8<;cQ>98)^Q?''oc`Q>"	-99
-4.275818	"=(p-_+1)*9%512]=(O*)p;"	-99
-4.275818	"=:$"	-99
-3.798697	">	-99
-4.275818	">b;og8=''`Q<`b8?'QQ9_8?c;dPe8dQa8<P]Q<``8=;'f8>QQ`]8?ocQQ_8=''_Q`8aQ"	-99
-4.275818	"?guhljL!^P%	-99
-4.275818	"@"	-99
-4.275818	"@+-"	-99
-4.275818	"@CADBEHI"	-99
-4.275818	"C:"	-99
-4.275818	"CYOUQWIN!]Q=;of8BQQ)88bc]QA98P'Qo]8>oQQ_8CP;QQ98b`_8@P8(Q`]'^Q=`']QB)88"	-99
-4.275818	"E914-47DA-95CA-C5AB0DC85B"	-99
-4.275818	"HTTP/1.1	-99
-4.275818	"M@K~|JOEF\\^~_NHI]"	-99
-4.275818	"NBLF\1Nblfgjmf\1"	-99
-3.673758	"Q"	-99
-4.275818	"Q(j"	-99
-4.275818	"Q(jam"	-99
-4.275818	"Zj$x!~V!n&g8!cK!	-99
-4.275818	"\",\"%s\",\"%s\"},	-99
-4.275818	"\40main(){O"	-99
-4.275818	"\n"	-99
-4.275818	"\n\n\n"	-99
-4.275818	"\xe2%c%c\r\n"	-99
-4.275818	"a"	-99
-4.275818	"bQQ]`8J;QQ`88bc99bd(`8iQ@''QQo^8E'`8c;QQ'Q``8?QQ`'kQ<o]8B9PQQ`';_Q<`_8<cbQ"	-99
-3.974788	"d"	-99
-4.275818	"e.6!r!%l6G!n~^<i=%pEwL%P!'<!FQt%u	-99
-4.275818	"e:|	-99
-4.275818	"eQII:"	-99
-4.275818	"eQover."	-99
-4.275818	"etu"	-99
-4.275818	"f\n"	-99
-4.275818	"fl!"	-99
-4.275818	"hello	-99
-4.275818	"laugh"	-99
-4.275818	"m"	-99
-4.275818	"me"	-99
-4.275818	"med);"	-99
-4.275818	"n:}nkD!Q!kN"	-99
-4.275818	"o("	-99
-4.275818	"oc']Q]8<;cQ>`8bbQA``QQ''`Q?88P;dQ=`)nQ?*/;;"	-99
-4.275818	"oid	-99
-3.673758	"r"	-99
-4.275818	"rn+0;}\n"	-99
-4.275818	"syntax_error!"	-99
-4.275818	"t"	-99
-4.275818	"throw	-99
-4.275818	"usage:	-99
-4.275818	"{;}"	-99
-4.275818	"{\"%s\",	-99
-4.275818	"|~0y'vWtA@:LcO9d}y.!uL!Gd+ml(<+Ds!J"	-99
-4.275818	"}$"	-99
-2.271497	%	-99
-3.673758	%=	-99
-4.275818	%d\n"	-99
-4.275818	%s	-99
-4.275818	%u/%u	-99
-2.200271	&	-99
-2.362004	&&	-99
-4.275818	&=	-99
-3.234425	'	-99
-4.275818	'(	-99
-3.974788	'128'	-99
-4.275818	'2O	-99
-4.275818	'2d'	-99
-4.275818	'7M{N^kh	-99
-4.275818	'='	-99
-4.275818	'Q]	-99
-3.974788	'\n'	-99
-4.275818	'_3a	-99
-4.275818	'a'	-99
-4.275818	'b5sc!e"	-99
-4.275818	'c'	-99
-4.275818	'd'	-99
-4.275818	'h(Q]0h#	-99
-4.275818	'lQ	-99
-4.275818	'nSM8	-99
-4.275818	'width:256px;height:256px'	-99
-4.275818	'ws'	-99
-4.275818	'|'	-99
-1.149362	(	-99
-1.122308	)	-99
-1.534666	*	-99
-2.642349	*=	-99
-4.275818	*m,!*m?H:"	-99
-1.862518	+	-99
-2.207632	++	-99
-4.275818	+99*!	-99
-2.234425	+=	-99
-1.305471	,	-99
-4.275818	,101	-99
-1.805996	-	-99
-2.568248	--	-99
-2.642349	-=	-99
-2.395004	->	-99
-2.185913	.	-99
-3.798697	...	-99
-4.275818	.0	-99
-3.798697	.05	-99
-3.798697	.1	-99
-4.275818	.27	-99
-3.798697	.5	-99
-2.372728	/	-99
-3.576848	/=	-99
-1.876144	0	-99
-3.798697	0.5	-99
-4.275818	0.7	-99
-4.275818	01	-99
-4.275818	02	-99
-4.275818	024	-99
-4.275818	03	-99
-4.275818	040	-99
-4.275818	061	-99
-4.275818	075	-99
-4.275818	0d:`184>b)^15)OM	-99
-3.974788	0u	-99
-4.275818	0x1	-99
-4.275818	0x3f0	-99
-4.275818	0x67452301	-99
-4.275818	0x820008202625a0	-99
-4.275818	0x98BADCFE	-99
-4.275818	0xEFCDAB89	-99
-4.275818	0xf	-99
-4.275818	0xfc0	-99
-4.275818	0xfe0	-99
-4.275818	0xff00ff00ff	-99
-4.275818	0xffff	-99
-2.013367	1	-99
-4.275818	1.159922023e9	-99
-3.974788	1.5	-99
-4.275818	1.6937441874215991e190	-99
-3.161875	10	-99
-4.275818	1008	-99
-3.798697	1023	-99
-4.275818	1024	-99
-4.275818	1024.	-99
-4.275818	105	-99
-3.798697	11	-99
-4.275818	1103515245	-99
-4.275818	112	-99
-4.275818	1152	-99
-3.275818	12	-99
-4.275818	123	-99
-4.275818	12359778	-99
-4.275818	12365733	-99
-4.275818	124	-99
-4.275818	127	-99
-3.673758	128	-99
-4.275818	128L	-99
-4.275818	13	-99
-4.275818	138	-99
-3.497667	14	-99
-4.275818	14202379	-99
-3.974788	14695981039346656037ULL	-99
-3.43072	15	-99
-4.275818	158	-99
-2.974788	16	-99
-4.275818	1600	-99
-3.798697	16711935	-99
-4.275818	16774143	-99
-3.974788	16u	-99
-3.798697	17	-99
-3.576848	18	-99
-4.275818	19	-99
-4.275818	1912	-99
-4.275818	19205553	-99
-4.275818	193	-99
-4.275818	1933008	-99
-4.275818	194	-99
-4.275818	1954	-99
-4.275818	196	-99
-4.275818	197	-99
-4.275818	198	-99
-3.974788	1LL	-99
-4.275818	1l	-99
-3.974788	1u	-99
-2.218913	2	-99
-3.974788	2.	-99
-4.275818	2.271681097355226e15	-99
-3.372728	20	-99
-4.275818	204	-99
-4.275818	205	-99
-3.974788	21	-99
-3.974788	22	-99
-3.974788	23	-99
-4.275818	234	-99
-3.43072	24	-99
-4.275818	25	-99
-4.275818	250	-99
-3.497667	255	-99
-3.673758	256	-99
-4.275818	256L	-99
-4.275818	257	-99
-4.275818	258063	-99
-3.974788	26	-99
-4.275818	27	-99
-4.275818	275	-99
-4.275818	276	-99
-4.275818	28	-99
-4.275818	287	-99
-4.275818	2L	-99
-4.275818	2l	-99
-2.372728	3	-99
-4.275818	3'	-99
-4.275818	3.135045272e9	-99
-4.275818	3.9999e5	-99
-3.43072	30	-99
-4.275818	304	-99
-4.275818	308438	-99
-3.673758	31	-99
-2.895607	32	-99
-3.974788	32768	-99
-4.275818	3285377520	-99
-3.974788	33	-99
-3.974788	333	-99
-4.275818	3352537	-99
-3.798697	34	-99
-3.576848	35	-99
-3.798697	36	-99
-3.974788	37	-99
-3.974788	38	-99
-4.275818	384	-99
-4.275818	39	-99
-4.275818	3920	-99
-2.400757	4	-99
-4.275818	4.023233417e9	-99
-4.275818	4.294967296e9	-99
-4.275818	4.5	-99
-4.275818	4.503599627370496e15	-99
-4.275818	4.522871578970112e217	-99
-4.275818	4.6727004911171048e-153	-99
-3.372728	40	-99
-4.275818	4092	-99
-3.974788	41	-99
-4.275818	41088	-99
-3.974788	4190208	-99
-4.275818	4194304	-99
-3.576848	42	-99
-4.275818	44	-99
-3.974788	45	-99
-4.275818	48	-99
-4.275818	480	-99
-4.275818	488848	-99
-4.275818	4L	-99
-3.974788	4u	-99
-2.744339	5	-99
-4.275818	50	-99
-4.275818	5000	-99
-4.275818	504	-99
-4.275818	508	-99
-4.275818	51	-99
-3.673758	512	-99
-4.275818	512L	-99
-4.275818	516	-99
-3.974788	5200	-99
-4.275818	5298487	-99
-4.275818	55	-99
-3.798697	56	-99
-4.275818	57	-99
-3.974788	58	-99
-3.974788	59	-99
-4.275818	5toG57j/3"	-99
-2.696034	6	-99
-3.372728	60	-99
-4.275818	60.	-99
-3.798697	61	-99
-3.974788	62	-99
-3.673758	63	-99
-4.275818	63504	-99
-3.196637	64	-99
-4.275818	64u	-99
-4.275818	65280	-99
-4.275818	65307	-99
-3.974788	65536	-99
-4.275818	65544	-99
-4.275818	667	-99
-4.275818	67	-99
-4.275818	69	-99
-4.275818	6990400	-99
-2.770668	7	-99
-4.275818	7.5	-99
-4.275818	7.90055321525613e115	-99
-4.275818	70	-99
-3.974788	74	-99
-4.275818	75	-99
-4.275818	76	-99
-3.673758	768	-99
-3.974788	77	-99
-3.673758	79	-99
-2.551542	8	-99
-4.275818	8.44396048e8	-99
-3.12969	80	-99
-4.275818	8000	-99
-3.798697	81	-99
-4.275818	82	-99
-4.275818	84	-99
-3.974788	85	-99
-3.974788	86400	-99
-4.275818	881	-99
-4.275818	89	-99
-4.275818	8u	-99
-2.877878	9	-99
-3.974788	90	-99
-4.275818	91	-99
-3.576848	92	-99
-4.275818	93	-99
-4.275818	96	-99
-3.798697	97	-99
-4.275818	98	-99
-4.275818	9858122	-99
-3.974788	99	-99
-4.275818	9999	-99
-4.275818	99999	-99
-2.120482	:	-99
-4.275818	:23h)QN<'	-99
-1.181696	;	-99
-4.275818	;b'	-99
-2.132803	<	-99
-1.233242	</s>
-2.519943	<<	-99
-4.275818	<<=	-99
-3.372728	<=	-99
-4.275818	<P~6"	-99
-99	<s>	-99
-99	<unk>
-1.359364	=	-99
-2.543424	==	-99
-2.456274	>	-99
-3.43072	>=	-99
-2.559815	>>	-99
-3.798697	>>=	-99
-2.218913	?	-99
-4.275818	?"	-99
-2.469638	A	-99
-4.275818	Acce	-99
-4.275818	Alan	-99
-2.456274	B	-99
-4.275818	BUFSIZ	-99
-2.559815	C	-99
-3.974788	COLS	-99
-2.576848	D	-99
-4.275818	DefaultGC	-99
-4.275818	DefaultVisual	-99
-4.275818	Display	-99
-2.60372	E	-99
-4.275818	E0	-99
-3.974788	E3	-99
-3.234425	EOF	-99
-4.275818	EX	-99
-2.622605	F	-99
-3.974788	F0	-99
-3.974788	F1	-99
-4.275818	F2	-99
-3.576848	FILE	-99
-4.275818	FILENAME_MAX	-99
-4.275818	FV	-99
-3.974788	F_	-99
-2.73175	G	-99
-2.469638	H	-99
-4.275818	HP	-99
-4.275818	HY	-99
-4.275818	H_1	-99
-2.51239	I	-99
-2.82866	J	-99
-2.469638	K	-99
-4.275818	KrgR'8@c]!%-q9V.3fa[E8X%dY'w!#H	-99
-2.120482	L	-99
-3.798697	LINES	-99
-4.275818	LP	-99
-4.275818	L_tmpnam	-99
-2.719515	M	-99
-4.275818	M8q;k'	-99
-4.275818	MJ	-99
-4.275818	MK6lM	-99
-4.275818	McPc	-99
-4.275818	MkQN	-99
-2.504966	N	-99
-4.275818	N4	-99
-4.275818	N8b	-99
-4.275818	N9	-99
-4.275818	N9b	-99
-3.798697	NULL	-99
-4.275818	NUO	-99
-4.275818	N_1'	-99
-4.275818	N_7vN	-99
-2.293547	O	-99
-3.161875	O0	-99
-3.43072	O1	-99
-3.43072	O2	-99
-3.497667	O3	-99
-4.275818	O3NF	-99
-3.576848	O4	-99
-3.497667	O5	-99
-3.673758	O6	-99
-3.673758	O7	-99
-3.798697	O8	-99
-3.798697	O9	-99
-4.275818	OMQ	-99
-4.275818	OMaMch	-99
-4.275818	OMp	-99
-4.275818	ON8r	-99
-3.196637	OO	-99
-4.275818	O^ln	-99
-3.321575	O_	-99
-3.673758	O_o	-99
-4.275818	OaaD	-99
-4.275818	Ok	-99
-4.275818	On	-99
-4.275818	OsR	-99
-2.632365	P	-99
-2.367333	Q	-99
-3.196637	Q0	-99
-3.497667	Q1	-99
-3.43072	Q2	-99
-3.497667	Q3	-99
-3.673758	Q4	-99
-3.673758	Q5	-99
-3.673758	Q6	-99
-3.673758	Q7	-99
-3.798697	Q8	-99
-3.974788	Q9	-99
-4.275818	QH	-99
-4.275818	QL	-99
-3.196637	QO	-99
-3.321575	QQ	-99
-3.974788	QR	-99
-3.974788	QS	-99
-3.497667	Q_	-99
-4.275818	Qr	-99
-2.2266	R	-99
-4.275818	R8	-99
-4.275818	RAFT	-99
-4.275818	RGB	-99
-4.275818	RI4	-99
-4.275818	RM	-99
-4.275818	RMPmSk	-99
-4.275818	RP	-99
-4.275818	RlMG	-99
-4.275818	RmM	-99
-4.275818	RmPQ	-99
-4.275818	RootWindow	-99
-2.632365	S	-99
-4.275818	SDL_AudioSpec	-99
-4.275818	SDL_BlitSurface	-99
-4.275818	SDL_CreateRGBSurface	-99
-4.275818	SDL_Delay	-99
-4.275818	SDL_Event	-99
-4.275818	SDL_FillRect	-99
-4.275818	SDL_Flip	-99
-4.275818	SDL_Init	-99
-4.275818	SDL_LoadWAV	-99
-4.275818	SDL_MixAudio	-99
-4.275818	SDL_OpenAudio	-99
-4.275818	SDL_PauseAudio	-99
-4.275818	SDL_PollEvent	-99
-4.275818	SDL_Rect	-99
-4.275818	SDL_SetVideoMode	-99
-4.275818	SDL_Surface	-99
-3.974788	SEEK_SET	-99
-4.275818	SNH	-99
-4.275818	SOPm	-99
-4.275818	SPEED	-99
-4.275818	Sec	-99
-4.275818	SlM90	-99
-4.275818	So	-99
-2.30269	T	-99
-4.275818	TIMESTEP	-99
-4.275818	TIOCGWINSZ	-99
-4.275818	TMP_MAX	-99
-4.275818	TmS	-99
-4.275818	TmSt	-99
-4.275818	Turing	-99
-4.275818	Type	-99
-2.60372	U	-99
-4.275818	UV_DROP	-99
-4.275818	Uint8Array	-99
-4.275818	Upgrade	-99
-2.535455	V	-99
-2.280183	W	-99
-3.974788	WebSocket	-99
-4.275818	Window	-99
-2.456274	X	-99
-4.275818	XCheckWindowEvent	-99
-4.275818	XCreateImage	-99
-4.275818	XCreateSimpleWindow	-99
-4.275818	XEvent	-99
-4.275818	XImage	-99
-4.275818	XLookupKeysym	-99
-4.275818	XMapWindow	-99
-4.275818	XOpenDisplay	-99
-4.275818	XPutImage	-99
-4.275818	XSelectInput	-99
-2.551542	Y	-99
-2.707616	Z	-99
-1.872697	[	-99
-4.275818	[-d]	-99
-4.275818	\""	-99
-4.275818	\n\t"	-99
-1.834909	]	-99
-2.663034	^	-99
-3.576848	^=	-99
-2.203936	_	-99
-4.275818	_){putchar(_);}O"	-99
-3.321575	_0	-99
-4.275818	_8	-99
-4.275818	_KK3	-99
-3.275818	_O	-99
-3.275818	_Q	-99
-4.275818	_Zadat57	-99
-3.045369	__	-99
-4.275818	__LINE__	-99
-3.974788	__STDC_VERSION__	-99
-3.974788	__STDC__	-99
-4.275818	__TIME__	-99
-3.974788	_a	-99
-3.974788	_b	-99
-3.974788	_c	-99
-3.974788	_d	-99
-3.974788	_f	-99
-4.275818	_h	-99
-3.974788	_i	-99
-3.974788	_k	-99
-4.275818	_o	-99
-4.275818	_t	-99
-4.275818	_z	-99
-2.068992	a	-99
-3.974788	a_	-99
-3.974788	abs	-99
-4.275818	ageX	-99
-3.43072	ala	-99
-2.744339	and	-99
-3.576848	arg	-99
-3.673758	argh	-99
-3.161875	asn	-99
-3.798697	asp	-99
-3.673758	asx	-99
-4.275818	ay	-99
-2.068992	b	-99
-4.275818	b1g	-99
-4.275818	b4	-99
-4.275818	b5g	-99
-3.576848	bA	-99
-3.673758	bB	-99
-3.673758	bC	-99
-3.798697	bD	-99
-3.576848	bE	-99
-4.275818	b\nq(%s)\n"	-99
-3.798697	ba	-99
-3.497667	bb	-99
-3.576848	bc	-99
-3.798697	bd	-99
-3.372728	be	-99
-3.196637	bf	-99
-3.673758	bg	-99
-3.673758	bh	-99
-4.275818	bh'	-99
-3.974788	bi	-99
-4.275818	binary	-99
-3.798697	bj	-99
-3.673758	bk	-99
-3.798697	bl	-99
-3.974788	bm	-99
-3.974788	bn	-99
-3.974788	bo	-99
-3.372728	bp	-99
-3.974788	bq	-99
-3.974788	br	-99
-3.045369	break	-99
-3.798697	bs	-99
-3.497667	bt	-99
-3.497667	bu	-99
-3.673758	buf	-99
-3.974788	bv	-99
-4.275818	bw	-99
-3.974788	bx	-99
-3.497667	by	-99
-3.576848	bz	-99
-2.21512	c	-99
-3.974788	c8	-99
-4.275818	c9	-99
-4.275818	cN	-99
-4.275818	c_X	-99
-4.275818	c_kah%0d9`b'	-99
-3.673758	calloc	-99
-3.275818	case	-99
-4.275818	cb	-99
-2.707616	char	-99
-4.275818	ckQaOrON	-99
-4.275818	close	-99
-2.933395	const	-99
-4.275818	continue	-99
-3.798697	cos	-99
-4.275818	cq	-99
-4.275818	crea	-99
-4.275818	curs_set	-99
-3.497667	cys	-99
-2.035269	d	-99
-4.275818	d2	-99
-4.275818	d77sNOsd	-99
-3.673758	d8	-99
-4.275818	d8ak	-99
-4.275818	dA	-99
-4.275818	dB	-99
-4.275818	dC	-99
-4.275818	d_C	-99
-4.275818	dat	-99
-4.275818	data	-99
-3.798697	default	-99
-4.275818	defined	-99
-3.673758	do	-99
-4.275818	double	-99
-3.974788	dstr	-99
-4.275818	dup	-99
-3.974788	dup2	-99
-2.207632	e	-99
-4.275818	eep	-99
-2.81342	efine	-99
-2.953599	else	-99
-4.275818	elta_u	-99
-4.275818	elta_v	-99
-4.275818	epne	-99
-4.275818	er	-99
-3.576848	err	-99
-4.275818	errx	-99
-3.576848	exit	-99
-3.798697	exp	-99
-3.798697	extern	-99
-2.21512	f	-99
-4.275818	f3	-99
-4.275818	fabs	-99
-4.275818	fclose	-99
-4.275818	fgetc	-99
-4.275818	fgets	-99
-4.275818	file1	-99
-4.275818	file2"	-99
-4.275818	flash	-99
-3.43072	float	-99
-4.275818	float_	-99
-4.275818	flu	-99
-3.798697	fopen	-99
-2.43072	for	-99
-4.275818	fputc	-99
-3.974788	fread	-99
-3.497667	free	-99
-4.275818	fscanf	-99
-3.974788	fseek	-99
-4.275818	function	-99
-3.673758	fw	-99
-2.196637	g	-99
-4.275818	getC	-99
-4.275818	getch	-99
-3.673758	getchar	-99
-4.275818	getopt	-99
-3.071698	gln	-99
-3.275818	glu	-99
-3.974788	glx	-99
-3.497667	gly	-99
-4.275818	goofy	-99
-3.673758	goto	-99
-2.462904	h	-99
-4.275818	halting	-99
-4.275818	height	-99
-3.43072	his	-99
-4.275818	ho	-99
-4.275818	href	-99
-2.008646	i	-99
-2.42456	if	-99
-3.576848	ile	-99
-4.275818	in	-99
-4.275818	initscr	-99
-2.383723	int	-99
-4.275818	int_	-99
-4.275818	intw	-99
-4.275818	ioctl	-99
-4.275818	ipt	-99
-2.230495	j	-99
-4.275818	jQ	-99
-4.275818	j_la	-99
-4.275818	j_laaaN	-99
-4.275818	jmp_buf	-99
-2.321575	k	-99
-4.275818	k8b	-99
-4.275818	k9	-99
-4.275818	kP8	-99
-4.275818	k_	-99
-4.275818	kccMcOP	-99
-4.275818	kckQ	-99
-4.275818	kd	-99
-4.275818	ket	-99
-3.974788	key	-99
-4.275818	keysym	-99
-4.275818	kf	-99
-4.275818	kg	-99
-2.289046	l	-99
-3.974788	lM	-99
-4.275818	lNRmO_loa8	-99
-4.275818	lQ	-99
-4.275818	lQoOa	-99
-4.275818	l_	-99
-4.275818	lea	-99
-3.673758	leu	-99
-4.275818	lf	-99
-4.275818	location	-99
-2.91409	long	-99
-4.275818	longjmp	-99
-4.275818	lpeoqempepneu	-99
-4.275818	lrand48	-99
-3.974788	lu	-99
-4.275818	luN	-99
-4.275818	luelue	-99
-3.798697	lv	-99
-4.275818	lwg	-99
-3.321575	lys	-99
-2.51239	m	-99
-3.974788	mR	-99
-4.275818	mR8	-99
-4.275818	mRMmO	-99
-4.275818	mRh	-99
-3.974788	mS	-99
-4.275818	mageData	-99
-3.071698	main	-99
-3.974788	malloc	-99
-4.275818	memcmp	-99
-3.974788	memcpy	-99
-4.275818	memset	-99
-3.321575	met	-99
-4.275818	mkM	-99
-4.275818	mq9l8b	-99
-4.275818	mva	-99
-4.275818	mvaddstr	-99
-3.974788	mvinch	-99
-4.275818	mvinsch	-99
-2.172014	n	-99
-4.275818	nR	-99
-4.275818	nRmUd	-99
-3.974788	ndif	-99
-3.974788	new	-99
-4.275818	nk	-99
-2.280183	not	-99
-4.275818	np	-99
-2.068992	o	-99
-4.275818	o(O	-99
-4.275818	oM	-99
-4.275818	oNS	-99
-4.275818	ocket	-99
-4.275818	oec	-99
-4.275818	offsetLeft	-99
-4.275818	offsetTop	-99
-4.275818	og	-99
-4.275818	on	-99
-4.275818	onmousemove	-99
-4.275818	ontext	-99
-3.321575	op	-99
-3.974788	open	-99
-3.497667	optind	-99
-2.193033	p	-99
-4.275818	pOpM866OsRlm	-99
-4.275818	pQaM8m	-99
-4.275818	pRM7O	-99
-4.275818	pageY	-99
-4.275818	peoqemtemw	-99
-3.673758	phe	-99
-4.275818	pixels	-99
-3.798697	pow	-99
-4.275818	pread	-99
-4.275818	prin	-99
-3.196637	printf	-99
-3.576848	pro	-99
-4.275818	pt	-99
-4.275818	ptj9	-99
-4.275818	putImageData	-99
-3.576848	putchar	-99
-3.43072	puts	-99
-4.275818	px	-99
-3.974788	pyl	-99
-2.469638	q	-99
-4.275818	qN	-99
-4.275818	qQ	-99
-2.535455	r	-99
-3.798697	rQ	-99
-4.275818	rR	-99
-3.974788	rand	-99
-4.275818	re	-99
-4.275818	rea	-99
-3.974788	read	-99
-3.673758	realloc	-99
-4.275818	refresh	-99
-2.757304	return	-99
-3.974788	rewind	-99
-4.275818	round	-99
-4.275818	rror	-99
-2.178908	s	-99
-4.275818	sM	-99
-3.974788	sN	-99
-4.275818	sTaa	-99
-4.275818	s_4	-99
-4.275818	scanf	-99
-4.275818	scr	-99
-4.275818	script	-99
-3.321575	sec	-99
-4.275818	send	-99
-3.234425	ser	-99
-4.275818	set	-99
-4.275818	setjmp	-99
-4.275818	shi	-99
-3.974788	short	-99
-4.275818	signal	-99
-3.974788	sin	-99
-4.275818	size_t	-99
-3.12969	sizeof	-99
-4.275818	slice	-99
-4.275818	slltwzh	-99
-4.275818	sprintf	-99
-4.275818	sqrt	-99
-4.275818	st_mtime	-99
-4.275818	st_size	-99
-3.798697	stat	-99
-3.497667	static	-99
-4.275818	stdin	-99
-4.275818	stdout	-99
-3.798697	strchr	-99
-4.275818	strcmp	-99
-3.798697	strlen	-99
-4.275818	strtol	-99
-3.321575	struct	-99
-4.275818	style	-99
-4.275818	subs	-99
-3.673758	switch	-99
-4.275818	sym	-99
-3.576848	sym_	-99
-4.275818	system	-99
-2.367333	t	-99
-4.275818	tQ	-99
-4.275818	tYv	-99
-4.275818	tape	-99
-4.275818	teI	-99
-4.275818	tf	-99
-4.275818	tgANs	-99
-3.372728	thr	-99
-4.275818	timeout	-99
-3.673758	tla	-99
-4.275818	tmpfile	-99
-4.275818	tr	-99
-3.275818	trp	-99
-4.275818	turnY_	-99
-4.275818	typ	-99
-3.974788	type	-99
-3.12969	typedef	-99
-3.275818	tyr	-99
-2.185913	u	-99
-4.275818	uU	-99
-3.974788	union	-99
-3.196637	unk	-99
-3.321575	unsigned	-99
-4.275818	up"	-99
-4.275818	upgrade	-99
-4.275818	usl	-99
-4.275818	usleep	-99
-4.275818	utchar	-99
-2.31203	v	-99
-4.275818	vOwwRor	-99
-4.275818	vQ	-99
-4.275818	va_arg	-99
-4.275818	va_end	-99
-4.275818	va_list	-99
-4.275818	va_start	-99
-4.275818	vad	-99
-2.82866	val	-99
-2.860845	void	-99
-4.275818	voidw	-99
-4.275818	volatile	-99
-4.275818	vpr	-99
-2.372728	w	-99
-4.275818	webso	-99
-2.933395	while	-99
-4.275818	width	-99
-4.275818	window	-99
-4.275818	wnS	-99
-4.275818	world!"	-99
-3.798697	write	-99
-2.275818	x	-99
-4.275818	xa6	-99
-4.275818	xkey	-99
-3.974788	xle	-99
-2.622605	xor	-99
-4.275818	xv	-99
-2.30269	y	-99
-4.275818	yN	-99
-2.406586	z	-99
-1.825569	{	-99
-2.594577	|	-99
-3.798697	|=	-99
-2.895607	||	-99
-1.82866	}	-99
-2.757304	~	-99

\2-grams:
-0.9294189	! !	-0.6446124
-0.7252989	! (	-0.05210976
-1.929419	! )
-1.628389	! *
-1.929419	! --
-1.452298	! </s>
-1.929419	! D
-1.929419	! H
-1.929419	! K
-1.151268	! O	-0.725299
-1.628389	! O9	0
-1.929419	! P
-1.929419	! Q
-1.929419	! Q0
-1.929419	! Q2
-1.452298	! QO	-0.3521825
-1.929419	! _0
-1.452298	! b
-1.929419	! c
-1.628389	! g
-1.628389	! i
-1.628389	! j
-1.929419	! k
-1.628389	! l
-1.929419	! memcmp
-1.628389	! n
-1.929419	! o
-1.929419	! printf
-1.628389	! s
-1.929419	! setjmp
-1.929419	! stat
-1.929419	! strcmp
-1.628389	! t
-1.230449	! u	-0.6846119
-1.628389	! x
-1.929419	! z
-1.278754	!= '
-1.278754	!= -
-1.278754	!= 0
-1.278754	!= 98
-1.278754	!= B
-0.9777236	!= EOF	-0.2138799
-1.278754	!= NULL
-0.9777236	!= b	-0.4286579
-1.278754	!= bk
-1.278754	!= f
-0.9777236	!= gln	-0.3143939
-1.278754	!= mvinch
-1.278754	!= sizeof
-1.278754	!= trp
-1.278754	!= u
-1.278754	!= v
-0.559308	" "
-1.462398	" "%d
-1.462398	" %d\n"
-1.462398	" %u/%u
-0.860338	" )	-0.5691239
-0.860338	" ,	-0.2968248
-1.462398	" ,101
-1.462398	" </s>
-1.462398	" Type
-1.462398	" \n\t"
-1.462398	" c
-1.462398	" ipt
-1.462398	" ket
-1.462398	" mageData
-1.462398	" ontext
-1.462398	" teI
0	"!:E%;!ea!!!WqE0z!f/y}!%!!Qi6!uzt!n}?]!bl!ak!SetR<" </s>
0	"!pv!;!Hm%Ro4" "n:}nkD!Q!kN"
-0.845098	"" "@CADBEHI"
-0.845098	"" ,
-0.544068	"" :
-0.3679768	"" </s>
0	"#" )	-0.5509837
0	"$" ,
0	"%." "f\n"
0	"%c" ,
0	"%d "
0	"%d,%dd%d\n" ,
0	"%d\n" ,
0	"%da%d,%d\n" ,
0	"%da%d\n" ,
0	"%dd%d\n" ,
0	"%f,%f," ,
-0.69897	"%s" "\",\"%s\",\"%s\"},
-0.09691001	"%s" ,	-0.2968248
0	"('A)" ,
-0.30103	"('A`)" </s>
-0.30103	"('A`)" }
0	"(A`)" ,
0	"(O**" </s>
0	")" )
0	")$" ;
0	");" )
0	"*" ""
0	"*_[512],**p=_,**d,b,q;for(b=0;b" "++<512;p=_+q)_[q"
0	"*p=#b,P[9999],*d=P,*e[]=" "{\"%s\",
0	"++<512;p=_+q)_[q" </s>
0	"-" ,
0	"/" )
0	"/*;; "
0	"11\x80" [
0	"258EAFA5-" "E914-47DA-95CA-C5AB0DC85B"
0	"8!@dP,!!o+fb" </s>
-0.4771213	";" )
-0.4771213	";" :
-0.4771213	";" </s>
0	";;" )
0	";Gam" "eQover."
0	";GlockQ18" "C:"
0	";Heca" "t"
0	";Time:Q" )
0	";^Q<d|8=o;]Q<dj8<Pk8<c]'?;QQdi8?P'Q)d8<9`8?c;Qdh8=P']Q<`c8>PQ9_8" </s>
0	"< "
0	"<" ,
0	"<;iQ=/*do<;dQ=ook8?boc;aQ=odr8>oc;_Q<ox8>oc" </s>
0	"<o_Q<o_QBdo`QQ';`Q=9`]8=bobQ_o_Q<o]8=';bQC(88cQ`bcgQ>oP']8<;cQ>98)^Q?''oc`Q>" </s>
0	"=(p-_+1)*9%512]=(O*)p;" )
0	"=:$" ,
0	"> "	-0.4126633
0	">b;og8=''`Q<`b8?'QQ9_8?c;dPe8dQa8<P]Q<``8=;'f8>QQ`]8?ocQQ_8=''_Q`8aQ" </s>
0	"?guhljL!^P% ?"
0	"@" ,
0	"@+-" ,
0	"@CADBEHI" )
0	"C:" "Q"
0	"CYOUQWIN!]Q=;of8BQQ)88bc]QA98P'Qo]8>oQQ_8CP;QQ98b`_8@P8(Q`]'^Q=`']QB)88" </s>
0	"E914-47DA-95CA-C5AB0DC85B" "11\x80"
0	"HTTP/1.1 "
0	"M@K~|JOEF\\^~_NHI]" ;
0	"NBLF\1Nblfgjmf\1" ,
0	"Q" )	-0.4722139
0	"Q(j" "a"
0	"Q(jam" </s>
0	"Zj$x!~V!n&g8!cK! KrgR'8@c]!%-q9V.3fa[E8X%dY'w!#H
0	"\",\"%s\",\"%s\"}, b\nq(%s)\n"
0	"\40main(){O" ""
0	"\n" )
0	"\n\n\n" </s>
0	"\xe2%c%c\r\n" O_
0	"a" "m"
0	"bQQ]`8J;QQ`88bc99bd(`8iQ@''QQo^8E'`8c;QQ'Q``8?QQ`'kQ<o]8B9PQQ`';_Q<`_8<cbQ" </s>
-0.30103	"d" ")"
-0.30103	"d" )
0	"e.6!r!%l6G!n~^<i=%pEwL%P!'<!FQt%u 5toG57j/3"
0	"e:| 'b5sc!e"
0	"eQII:" "Q"
0	"eQover." </s>
0	"etu" "rn+0;}\n"
0	"f\n" ,
0	"fl!" [
0	"hello world!"
0	"laugh" )
0	"m" "me"
0	"me" "d"
0	"med);" )
0	"n:}nkD!Q!kN" </s>
0	"o(" )
0	"oc']Q]8<;cQ>`8bbQA``QQ''`Q?88P;dQ=`)nQ?*/;;" ;
0	"oid o(O
-0.1249387	"r" )	-0.426045
-0.60206	"r" </s>
0	"rn+0;}\n" )
0	"syntax_error!" </s>
0	"t" "eQII:"
0	"throw up"
0	"usage: %s
0	"{;}" :
0	"{\"%s\", \""
0	"|~0y'vWtA@:LcO9d}y.!uL!Gd+ml(<+Ds!J" </s>
0	"}$" :
-1.703291	% %
-2.004321	% &
-1.5272	% (	-0.4699211
-2.004321	% -
-2.004321	% .27
-2.004321	% /
-2.004321	% 03
-1.703291	% 16
-2.004321	% 198
-1.004321	% 2	-0.448245
-1.159223	% 3	-0.6580114
-2.004321	% 32
-2.004321	% 384
-1.305351	% 4
-1.5272	% 5
-2.004321	% 512
-2.004321	% 6
-1.402261	% 64
-2.004321	% 7
-2.004321	% 768
-1.5272	% 8
-2.004321	% 86400
-2.004321	% 93
-2.004321	% :
-1.402261	% </s>
-2.004321	% I
-1.703291	% M
-2.004321	% N
-2.004321	% N4
-2.004321	% N8b
-2.004321	% N9b
-1.703291	% O
-2.004321	% O3
-2.004321	% O4
-1.703291	% QQ
-2.004321	% Qr
-2.004321	% R
-2.004321	% ]
-2.004321	% ^
-2.004321	% _
-2.004321	% _h
-2.004321	% c
-2.004321	% c9
-2.004321	% d8
-2.004321	% dA
-2.004321	% dB
-2.004321	% dC
-1.305351	% g
-2.004321	% lNRmO_loa8
-2.004321	% mR
-2.004321	% mRMmO
-2.004321	% mRh
-2.004321	% mS
-2.004321	% n
-2.004321	% q
-2.004321	% rQ
-2.004321	% s
-2.004321	% strlen
-2.004321	% w
-1.703291	% {
-0.60206	%= 1
-0.60206	%= 64
-0.60206	%= 8
-0.60206	%= z
0	%d\n" ,
0	%s [-d]
0	%u/%u "
-2.075547	& !
-2.075547	& %
-1.774517	& (
-2.075547	& *
-2.075547	& --
-2.075547	& 0x3f0
-2.075547	& 0xf
-2.075547	& 0xfe0
-2.075547	& 0xff00ff00ff
-1.376577	& 1	-0.2785037
-2.075547	& 1008
-1.598426	& 1023	0
-2.075547	& 12
-2.075547	& 128
-2.075547	& 14
-1.376577	& 15	-0.154902
-1.774517	& 16
-1.774517	& 16711935
-2.075547	& 16774143
-1.297396	& 3	-0.5993371
-2.075547	& 31
-2.075547	& 32
-2.075547	& 4
-2.075547	& 4092
-1.774517	& 4190208	0
-2.075547	& 6
-1.473487	& 63	0
-2.075547	& 64
-2.075547	& 65280
-2.075547	& 7
-2.075547	& 8
-2.075547	& 9
-2.075547	& ;
-2.075547	& <
-1.473487	& </s>
-2.075547	& B
-2.075547	& C
-2.075547	& L
-1.774517	& M
-1.774517	& N
-2.075547	& O
-1.774517	& OO
-1.774517	& Q
-2.075547	& S
-2.075547	& T
-2.075547	& TmS
-2.075547	& ^
-1.473487	& _	-0.2898458
-2.075547	& a
-1.774517	& arg	0.2218488
-2.075547	& asn
-2.075547	& bE
-2.075547	& bn
-2.075547	& bo
-2.075547	& bv
-1.774517	& c
-2.075547	& d
-2.075547	& e
-1.774517	& glu	-0.1760913
-2.075547	& h
-2.075547	& i
-2.075547	& k
-2.075547	& kccMcOP
-2.075547	& kckQ
-1.598426	& not	-0.5749078
-1.774517	& o
-2.075547	& p
-2.075547	& pRM7O
-2.075547	& r
-1.774517	& tyr	-0.3222193
-2.075547	& u
-2.075547	& v
-2.075547	& w
-1.774517	& x
-2.075547	& y
-1.774517	& z	-0.465222
-1.774517	& ~	-0.3899711
-1.068716	&& !	-0.2112462
-0.4514159	&& (	-0.3133137
-1.612784	&& *
-1.913814	&& ++
-1.913814	&& 0
-1.913814	&& 258063
-1.913814	&& 34
-1.612784	&& </s>
-1.436693	&& A	-0.3785115
-1.913814	&& B
-1.913814	&& F
-1.913814	&& G
-1.913814	&& R
-1.913814	&& T
-1.913814	&& Z
-1.913814	&& _
-1.913814	&& _0
-1.436693	&& a	-0.4606271
-1.913814	&& b
-1.913814	&& bf
-1.913814	&& bg
-1.913814	&& d
-1.913814	&& fscanf
-1.913814	&& g
-1.612784	&& n
-1.612784	&& o	-0.394147
-1.913814	&& putchar
-1.913814	&& q
-1.913814	&& r
-1.913814	&& read
-1.311754	&& s	-0.2940251
-1.436693	&& v	-0.4478319
-1.913814	&& x
-1.612784	&& y	-0.4582359
0	&= z
-0.4393327	' '	-0.2138798
-1.041393	' )
-0.7403627	' </s>
-1.041393	' M8q;k'
-1.041393	' Q
-1.041393	' nR
-1.041393	' ||
0	'( 0d:`184>b)^15)OM
-0.30103	'128' height
-0.30103	'128' style
0	'2O 3'
0	'2d' )
0	'7M{N^kh '
0	'=' )
0	'Q] bh'
0	'\n' )
0	'_3a N_1'
0	'a' ,
0	'b5sc!e" </s>
0	'c' width
0	'd' :
0	'h(Q]0h# c_kah%0d9`b'
0	'lQ O^ln
0	'nSM8 '
0	'width:256px;height:256px' </s>
0	'ws' +
0	'|' :
-1.922336	( !	-0.191155
-2.825426	( "
-3.126456	( ""
-2.649335	( "#"	0
-3.126456	( "%."
-3.126456	( "%c"
-3.126456	( "%d,%dd%d\n"
-3.126456	( "%d\n"
-3.126456	( "%da%d,%d\n"
-3.126456	( "%da%d\n"
-3.126456	( "%dd%d\n"
-3.126456	( "%s"
-3.126456	( "(O**"
-3.126456	( ");"
-3.126456	( "*"
-3.126456	( "-"
-3.126456	( "/*;;
-2.825426	( ";"
-3.126456	( ";Heca"
-3.126456	( ";Time:Q"
-3.126456	( "<
-3.126456	( "<"
-3.126456	( ">
-3.126456	( "@"
-3.126456	( "@+-"
-3.126456	( "HTTP/1.1
-2.825426	( "Q"	0
-3.126456	( "\n"
-3.126456	( "hello
-3.126456	( "laugh"
-3.126456	( "o("
-3.126456	( "r"
-3.126456	( "throw
-2.524396	( %
-2.126456	( &	-0.2747011
-3.126456	( '
-3.126456	( '2d'
-3.126456	( 'ws'
-1.386093	( (	-0.2656318
-1.162668	( )	-0.8526563
-1.535391	( *	-0.3684269
-2.524396	( ++
-2.825426	( ,	-0.4747901
-2.223366	( -
-3.126456	( .05
-2.825426	( .5
-2.825426	( /
-1.784033	( 0	-1.010935
-3.126456	( 075
-1.746245	( 1	-0.5851215
-3.126456	( 10
-3.126456	( 105
-2.825426	( 12
-3.126456	( 13
-2.825426	( 16	-0.4065402
-3.126456	( 1912
-3.126456	( 1LL
-1.847703	( 2	-0.6368221
-3.126456	( 22
-3.126456	( 24
-3.126456	( 255
-3.126456	( 256L
-3.126456	( 2l
-2.012513	( 3	-0.40583
-3.126456	( 30
-2.825426	( 32
-3.126456	( 34
-3.126456	( 38
-2.126456	( 4	-0.4960065
-3.126456	( 40
-2.825426	( 41	0
-2.825426	( 42	0.2218488
-3.126456	( 45
-2.427486	( 5	-0.5688916
-3.126456	( 59
-2.825426	( 6
-2.825426	( 60
-2.825426	( 64	-0.2430381
-3.126456	( 67
-3.126456	( 7
-3.126456	( 70
-2.649335	( 8	-0.4518154
-2.427486	( 9
-3.126456	( 97
-3.126456	( 99999
-1.871184	( ;	-0.7573813
-1.711483	( </s>
-3.126456	( =
-2.172214	( A	-0.2272438
-2.281358	( B	-0.4147202
-1.871184	( C	-0.2382392
-2.281358	( D	-0.2710668
-2.649335	( E	-0.3732251
-2.126456	( F	-0.3748162
-2.825426	( FILE	0
-3.126456	( F_
-2.524396	( G	-0.1091444
-2.085063	( H	-0.08031074
-2.427486	( I	-0.6598179
-2.825426	( J
-2.085063	( K	-0.2632414
-1.394062	( L	-0.9387856
-3.126456	( LINES
-2.348305	( M	-0.2498775
-2.281358	( N	-0.5656078
-1.825426	( O	-0.3521826
-3.126456	( O0
-2.524396	( O2	-0.1549019
-3.126456	( O3
-3.126456	( O4
-2.825426	( O5
-3.126456	( O6
-2.825426	( OO
-2.649335	( O_o	0
-2.047275	( P	-0.9270902
-1.922336	( Q	-0.4519821
-2.649335	( Q0	-0.3521825
-2.825426	( Q1
-3.126456	( Q2
-3.126456	( Q5
-3.126456	( Q6
-2.649335	( QO	-0.4259688
-3.126456	( QQ
-2.172214	( R	-0.4235385
-3.126456	( RAFT
-1.922336	( T	-1.028173
-2.524396	( U	-0.6179368
-2.427486	( V
-2.348305	( W	-0.4727121
-1.728516	( X	-0.5926366
-3.126456	( XCheckWindowEvent
-3.126456	( XMapWindow
-2.427486	( Y	-0.187769
-2.348305	( Z
-3.126456	( ^
-2.012513	( _	-0.4131292
-2.427486	( _O	-0.1249387
-2.825426	( _Q
-2.524396	( __
-3.126456	( __LINE__
-3.126456	( __STDC_VERSION__
-1.711483	( a	-0.09544319
-2.825426	( ala	-0.3309932
-1.784033	( and	-0.9094301
-2.649335	( argh	-0.1760913
-2.524396	( asn	0.1139433
-2.825426	( asp	0
-3.126456	( asx
-1.980328	( b	-0.4511855
-3.126456	( be
-2.825426	( bk	-0.1760913
-3.126456	( br
-2.825426	( bu
-2.825426	( buf
-3.126456	( by
-2.172214	( c	-0.1891118
-3.126456	( cN
-3.126456	( calloc
-3.126456	( cb
-2.172214	( char	-0.473191
-2.649335	( const	-0.4357286
-3.126456	( cos
-3.126456	( curs_set
-2.524396	( cys	-0.2218488
-1.980328	( d	-0.3527369
-3.126456	( dup2
-2.172214	( e	-0.1372892
-3.126456	( elta_u
-3.126456	( elta_v
-1.871184	( f	-0.467576
-3.126456	( float_
-3.126456	( flu
-1.950365	( g	-0.4831116
-3.126456	( gln
-3.126456	( glu
-2.126456	( h	-0.4733934
-1.607942	( i	-0.3099369
-2.649335	( ile
-2.012513	( int	-0.1700171
-3.126456	( int_
-1.804237	( j	-0.6510335
-1.871184	( k	-0.6434528
-1.980328	( l	-0.1665349
-3.126456	( lQ
-3.126456	( lQoOa
-3.126456	( luN
-2.825426	( lys
-2.085063	( m	-0.5567182
-3.126456	( memcpy
-3.126456	( memset
-2.427486	( met	-0.4259687
-1.764728	( n	-0.2240658
-1.825426	( not	-0.9600525
-1.950365	( o	-0.6094154
-3.126456	( open
-1.950365	( p	-0.2342327
-3.126456	( pread
-3.126456	( prin
-3.126456	( printf
-3.126456	( pro
-2.825426	( puts	0.3679768
-2.348305	( q	-0.2730013
-3.126456	( qQ
-2.427486	( r
-3.126456	( rR
-2.126456	( s	-0.1968208
-2.825426	( sec	-0.2218488
-2.223366	( ser	-0.3899711
-3.126456	( short
-2.825426	( sizeof	0.3679768
-3.126456	( stdout
-2.524396	( sym_	0
-2.047275	( t	-0.20412
-3.126456	( tQ
-3.126456	( tla
-2.281358	( u	-0.3033775
-3.126456	( uU
-3.126456	( usl
-1.950365	( v	-0.2470655
-3.126456	( va_arg
-3.126456	( val
-2.825426	( void
-1.871184	( w	-0.4456042
-1.950365	( x	-0.1371732
-2.223366	( xor	-0.5286311
-1.950365	( y	-0.288135
-2.348305	( z	-0.4999841
-3.126456	( {
-3.126456	( }
-3.126456	( ~
-2.45454	) !=	-0.1735441
-3.15351	) "\xe2%c%c\r\n"
-2.039567	) %	-0.2759534
-2.45454	) &
-1.874756	) &&	-0.1096672
-1.530261	) (	-0.3435426
-0.9548529	) )	-0.532992
-1.272696	) *	-0.3323223
-2.375359	) *=	-0.7556976
-1.676389	) +	-0.2120127
-2.25042	) +=	-0.2639587
-1.189722	) ,	-0.2551003
-1.898237	) -	-0.2200194
-3.15351	) --
-2.45454	) -=
-2.85248	) .	-0.447914
-3.15351	) .0
-2.074329	) /	-0.2405492
-3.15351	) 0
-3.15351	) 0u
-2.85248	) 16u	0
-2.85248	) 1u
-3.15351	) 21
-3.15351	) 64u
-3.15351	) 8u
-1.738537	) :	-0.3059373
-0.5876622	) ;	-0.3467878
-2.308412	) <	-0.1398338
-1.245025	) </s>
-2.199267	) <<	-0.2069679
-2.55145	) =
-2.55145	) ==
-2.375359	) >	-0.2523381
-2.676389	) >=
-2.45454	) >>	-0.305186
-2.007382	) ?	-0.1602865
-2.375359	) B	-0.69897
-2.85248	) E3	0
-2.85248	) F	-0.3290587
-3.15351	) F0
-3.15351	) F1
-2.074329	) G	-0.4893556
-2.308412	) J	-0.544068
-3.15351	) K
-2.55145	) L	-0.1094818
-3.15351	) O
-3.15351	) O5
-2.55145	) O_	0.2552725
-3.15351	) P
-2.85248	) Q
-2.85248	) QR	0
-3.15351	) QS
-3.15351	) Q_
-2.85248	) R
-3.15351	) S
-3.15351	) U
-2.85248	) W	-0.2668159
-3.15351	) X
-3.15351	) Y
-2.676389	) [
-3.15351	) ]
-2.85248	) ^
-3.15351	) _d
-2.85248	) a
-2.85248	) asx
-2.85248	) b
-2.85248	) bd	0
-2.676389	) break	0.6283889
-3.15351	) bt
-3.15351	) by
-3.15351	) c
-3.15351	) continue
-2.85248	) d
-2.85248	) d8
-2.85248	) e	-0.4132568
-3.15351	) err
-2.676389	) exit	0
-2.112117	) for	0.1638569
-3.15351	) g
-3.15351	) glx
-2.85248	) h
-2.55145	) i
-2.375359	) if	0.7051303
-2.85248	) int
-3.15351	) j
-3.15351	) k
-2.676389	) l	-0.4588325
-3.15351	) lys
-3.15351	) n
-2.85248	) not
-3.15351	) o
-3.15351	) printf
-3.15351	) putchar
-2.85248	) q
-2.676389	) r	-0.3802113
-2.85248	) return
-2.45454	) s	-0.137776
-3.15351	) scanf
-3.15351	) sec
-3.15351	) t
-3.15351	) typedef
-2.676389	) tyr
-2.676389	) u	-0.3556991
-2.85248	) v
-2.676389	) w	-0.4842999
-3.15351	) x
-2.676389	) z
-0.807157	) {	-0.1043798
-2.308412	) |	-0.1415804
-2.55145	) ||	-0.4771213
-2.85248	) ~
-1.963	* !	-0.08552141
-1.097699	* (	-0.1905703
-1.66197	* )	-0.06617929
-1.627208	* *	-0.06859171
-2.741152	* +
-1.838062	* ++	-0.5713005
-2.741152	* ,
-2.741152	* -
-2.26403	* --
-2.741152	* .1
-2.741152	* .5
-2.440122	* 0
-2.741152	* 1.6937441874215991e190
-2.440122	* 10	-0.4045706
-2.741152	* 11
-2.741152	* 1103515245
-2.741152	* 12
-2.139091	* 16	-0.2304489
-2.741152	* 17
-2.741152	* 193
-1.786909	* 2
-2.741152	* 23
-2.042181	* 3	-0.19382
-2.741152	* 32
-2.741152	* 39
-1.595024	* 4	-0.2487904
-2.741152	* 4.522871578970112e217
-2.741152	* 4.6727004911171048e-153
-2.440122	* 42
-2.741152	* 51
-2.741152	* 512L
-2.741152	* 5298487
-2.741152	* 6
-2.440122	* 7
-2.741152	* 7.90055321525613e115
-2.440122	* 768	-0.1760913
-2.26403	* 8
-1.741152	* 80	-0.455932
-2.741152	* 81
-2.741152	* 881
-2.26403	* 9
-2.741152	* 92
-1.379424	* </s>
-2.139091	* A	-0.2507249
-2.440122	* B
-2.139091	* C	-0.6264194
-2.741152	* D
-1.896054	* E	-0.08681404
-2.440122	* H
-2.139091	* I	-0.4918445
-1.896054	* K	-0.3099848
-2.139091	* L	-0.2760277
-2.741152	* L_tmpnam
-1.963	* N	-0.3964653
-2.26403	* O	-0.424269
-2.042181	* O0	-0.5392692
-2.440122	* O3
-2.741152	* O4
-2.440122	* O6
-1.786909	* Q	-0.231394
-2.741152	* Q0
-2.741152	* Q1
-2.741152	* Q2
-2.139091	* Q3	-0.1249387
-2.741152	* Q5
-2.741152	* Q7
-2.741152	* Q9
-2.741152	* QO
-2.440122	* QQ	-0.30103
-2.440122	* R
-2.440122	* S
-1.326178	* T	-0.697118
-2.741152	* U
-2.741152	* V
-2.440122	* W
-2.042181	* Y	-0.2051431
-2.741152	* ]
-1.838062	* _	-0.3915132
-2.139091	* _0
-2.741152	* _O
-1.66197	* a	-0.528773
-1.786909	* b	-0.2068091
-2.741152	* bD
-2.741152	* ba
-2.26403	* bb	-0.30103
-2.741152	* be
-2.741152	* br
-2.741152	* bx
-1.963	* c	-0.1646114
-2.741152	* c_X
-2.042181	* const	-0.6118199
-1.595024	* d	-0.1744241
-1.699759	* e	-0.3473439
-1.741152	* f	-0.541362
-1.786909	* g	-0.560803
-2.26403	* i
-2.440122	* j
-2.139091	* k	-0.2218487
-2.139091	* l
-2.440122	* m
-1.963	* n	-0.6520711
-2.042181	* not	-0.4667628
-1.24979	* o	-0.7158995
-1.293994	* p	-0.4135907
-2.741152	* printf
-1.56506	* q	-0.2730012
-2.26403	* r	-0.4527619
-1.699759	* s	-0.07710823
-2.741152	* sin
-2.139091	* sizeof	0.544068
-2.26403	* t
-2.440122	* tyr
-1.699759	* u	-0.2568389
-2.440122	* x
-2.042181	* y	-0.338626
-2.440122	* z
-1.633469	*= (
-1.332438	*= -	-0.4104198
-1.633469	*= 0
-1.633469	*= 0.7
-1.633469	*= 02
-1.156347	*= 1	-0.4373866
-1.633469	*= 256
-1.633469	*= C
-1.633469	*= I
-0.8553172	*= Q	-0.700041
-1.332438	*= Y	-0.4156032
-1.633469	*= _
-0.7303784	*= g	-0.861833
-0.6334684	*= o	-0.9744459
-1.332438	*= s	-0.4371161
-1.633469	*= u
-1.633469	*= z
0	*m,!*m?H:" upgrade
-2.11227	+ !
-2.4133	+ "fl!"
-0.8947858	+ (	-0.3319334
-1.71433	+ )	-0.6246413
-1.81124	+ *
-2.4133	+ ,
-1.936179	+ 0
-2.4133	+ 0.5
-1.01536	+ 1	-0.8337634
-2.4133	+ 1.5
-2.4133	+ 11
-2.4133	+ 12
-2.4133	+ 128L
-2.4133	+ 138
-2.11227	+ 16
-2.4133	+ 18
-2.4133	+ 19205553
-1.4133	+ 2	-0.1819772
-2.4133	+ 20
-2.4133	+ 287
-2.4133	+ 2L
-1.635149	+ 3	-0.20412
-2.4133	+ 32
-2.11227	+ 4	-0.3263359
-2.4133	+ 4.5
-2.4133	+ 42
-2.4133	+ 44
-2.4133	+ 4L
-1.936179	+ 5	-0.4227636
-2.11227	+ 512
-2.4133	+ 58
-2.4133	+ 6
-2.4133	+ 667
-2.11227	+ 7
-2.4133	+ 74
-2.4133	+ 79
-2.11227	+ 8
-2.4133	+ 84
-2.4133	+ 86400
-2.4133	+ 99
-1.459057	+ </s>
-2.4133	+ A
-2.11227	+ B	-0.4210053
-2.4133	+ C
-2.4133	+ E
-2.4133	+ EOF
-1.936179	+ F
-1.936179	+ H
-2.4133	+ J
-1.936179	+ N	-0.3994097
-2.4133	+ O4
-2.4133	+ P
-2.4133	+ Q
-2.4133	+ Q0
-2.4133	+ Q5
-2.4133	+ R
-2.4133	+ TMP_MAX
-2.4133	+ V
-2.4133	+ X
-2.4133	+ Y
-2.4133	+ _Q
-2.11227	+ __STDC__
-1.568202	+ a	-0.4643469
-2.4133	+ abs
-2.4133	+ asn
-2.4133	+ b
-1.81124	+ c
-2.4133	+ cos
-1.936179	+ d	-0.4212635
-1.936179	+ e
-2.11227	+ f
-1.81124	+ g	-0.2900346
-1.299356	+ i	-0.581838
-2.11227	+ j	-0.4611821
-1.936179	+ k	-0.39794
-2.11227	+ l
-2.4133	+ location
-1.936179	+ m
-1.71433	+ n	-0.2008304
-1.568202	+ o
-2.11227	+ p
-2.4133	+ q
-1.635149	+ s	-0.7604225
-2.4133	+ sTaa
-2.4133	+ t
-1.71433	+ u	-0.6520339
-2.4133	+ unk
-2.11227	+ v
-2.4133	+ wnS
-1.81124	+ x	-0.1760913
-2.4133	+ y
-1.936179	+ z	-0.5716774
-1.936179	+ ~
-2.068186	++ &
-2.068186	++ &&
-0.7894323	++ )	0.004687101
-1.767156	++ *
-2.068186	++ +=
-1.290035	++ ,	-0.4672451
-1.767156	++ -
-2.068186	++ /
-1.767156	++ :	-0.4390565
-0.9890046	++ ;	-0.1023309
-1.290035	++ <
-1.369216	++ </s>
-2.068186	++ <=
-1.026793	++ =	-0.3306842
-2.068186	++ ==
-2.068186	++ ?
-1.767156	++ N
-1.466126	++ T	-0.5783222
-1.113943	++ ]	-0.2640989
-2.068186	++ c
-2.068186	++ f
-1.591065	++ i	-0.562775
-2.068186	++ ile
-1.466126	++ j
-2.068186	++ l
-2.068186	++ leu
-1.591065	++ not	-0.2449141
-2.068186	++ p
-2.068186	++ q
-1.767156	++ s	-0.3930485
-2.068186	++ s_4
-1.767156	++ tla	-0.1760913
-2.068186	++ u
-2.068186	++ v
-1.290035	++ xor	-0.7716691
0	+99*! *m,!*m?H:"
-1.439333	+= !	-0.2854249
-2.041393	+= 'a'
-1.041393	+= (	-0.2049712
-2.041393	+= .05
-2.041393	+= .1
-2.041393	+= 0.5
-1.564271	+= 1	-0.4021909
-2.041393	+= 1.5
-2.041393	+= 16
-2.041393	+= 194
-1.439333	+= 2	-0.4427823
-2.041393	+= 21
-2.041393	+= 4
-2.041393	+= 4u
-2.041393	+= 5
-2.041393	+= 7
-2.041393	+= A
-1.740363	+= E	-0.4070834
-1.740363	+= F	-0.447158
-1.439333	+= H	-0.6003602
-2.041393	+= K
-2.041393	+= M
-1.439333	+= O1
-2.041393	+= O8
-2.041393	+= Q
-1.740363	+= U
-2.041393	+= UV_DROP
-1.740363	+= V	-0.3995164
-1.564271	+= Y	-0.4518154
-2.041393	+= _
-1.564271	+= a	-0.4434817
-1.740363	+= be	-0.05115253
-1.740363	+= bf	-0.30103
-2.041393	+= bt
-2.041393	+= c
-1.564271	+= d	-0.4212635
-1.740363	+= e	-0.4045706
-1.439333	+= g	-0.2086205
-2.041393	+= h
-1.342423	+= i	-0.6249229
-1.342423	+= l	-0.3302464
-1.08715	+= o	-0.4463866
-1.740363	+= p
-2.041393	+= printf
-2.041393	+= r
-1.740363	+= s	-0.4593925
-1.740363	+= u
-1.740363	+= v
-1.564271	+= w	-0.5563025
-2.970347	, !
-2.970347	, "
-2.970347	, ""
-2.493226	, "$"	0
-2.493226	, "%s"	0.09691
-2.970347	, "('A)"
-2.970347	, "('A`)"
-2.970347	, "(A`)"
-2.970347	, "=:$"
-2.669317	, ">	0
-2.970347	, "d"
-2.493226	, "r"	0
-2.970347	, "usage:
-1.856403	, &	-0.06518957
-1.691593	, (	-0.224514
-2.271377	, )	-0.1707725
-1.317134	, *	-0.2610145
-2.493226	, ++	-0.4620138
-2.493226	, ,
-2.368287	, -	-0.5353585
-2.970347	, --
-2.493226	, ...	0
-1.185017	, 0	-1.475561
-2.970347	, 0x98BADCFE
-2.970347	, 0xEFCDAB89
-1.648128	, 1	-1.108986
-2.970347	, 128
-2.493226	, 16	-0.4471581
-2.016104	, 2	-0.6897295
-2.970347	, 24
-2.970347	, 256
-2.271377	, 3	-0.19382
-2.970347	, 3.9999e5
-2.970347	, 30
-2.970347	, 308438
-2.493226	, 32	-0.4191293
-2.970347	, 3285377520
-2.970347	, 4
-2.970347	, 5
-2.669317	, 6	-0.3597357
-2.970347	, 60
-2.970347	, 65544
-2.669317	, 8
-2.970347	, 85
-2.970347	, 9
-2.970347	, <
-1.289106	, </s>
-2.192196	, A	-0.3143939
-2.016104	, B	-0.8336687
-1.928954	, C	-0.2673974
-2.368287	, D
-2.970347	, DefaultGC
-2.970347	, DefaultVisual
-2.368287	, E	-0.241716
-2.970347	, EOF
-2.192196	, F	-0.4149733
-2.970347	, F_
-2.669317	, G	-0.3802113
-2.271377	, H	-0.5648879
-2.368287	, I	-0.5198733
-2.493226	, J
-1.856403	, K	-0.9412318
-2.192196	, L	-0.5418932
-2.368287	, M	-0.1249387
-1.928954	, N	-0.4746607
-1.824219	, O	-0.3222193
-2.192196	, O0	-0.4301247
-2.970347	, O1
-2.669317	, O2
-2.970347	, O3
-2.970347	, O4
-2.669317	, O5
-2.970347	, O6
-2.970347	, O7
-2.970347	, O8
-2.970347	, O9
-2.669317	, OO
-2.493226	, P
-1.928954	, Q	-0.01751425
-2.368287	, Q0	-0.4648868
-2.669317	, Q1
-2.493226	, Q2	-0.3309932
-2.970347	, Q3
-2.493226	, Q4
-2.970347	, Q5
-2.669317	, Q6
-2.970347	, Q7
-2.970347	, Q8
-2.970347	, Q9
-2.493226	, QO	-0.39794
-2.970347	, QQ
-2.970347	, QS
-1.347098	, R	-1.362402
-2.970347	, RootWindow
-2.192196	, S
-2.669317	, SEEK_SET	0
-2.192196	, T	-0.4582359
-2.970347	, TIOCGWINSZ
-2.368287	, U	-0.542746
-2.669317	, V
-2.271377	, W	-0.3707878
-2.669317	, X
-2.493226	, Y	-0.4430415
-1.478985	, _	-0.6369637
-2.970347	, _0
-2.493226	, _O	-0.3802113
-2.493226	, _Q	-0.3802113
-2.368287	, __	-0.2466723
-2.970347	, _f
-2.970347	, _i
-1.970347	, a	-0.311688
-2.970347	, a_
-2.970347	, arg
-1.970347	, b	-0.1453566
-2.669317	, bA
-2.669317	, bB
-2.669317	, bC
-2.669317	, bD
-2.970347	, bb
-2.970347	, be
-2.669317	, bf	-0.30103
-2.970347	, bg
-2.970347	, bi
-2.970347	, bo
-2.970347	, bq
-2.970347	, bt
-2.970347	, bu
-2.970347	, bv
-2.669317	, bz
-2.016104	, c	-0.532034
-2.970347	, c8
-2.016104	, char	-0.4274335
-2.368287	, const	-0.4357286
-1.627924	, d	-0.4282092
-2.669317	, dstr	0
-2.970347	, dup
-1.891166	, e	-0.3912066
-2.970347	, eep
-2.067257	, f	-0.8380274
-2.970347	, fopen
-2.970347	, fw
-2.192196	, g	-0.6334684
-2.669317	, gln	-0.3143939
-2.493226	, glu	-0.1760913
-2.192196	, h	-0.4495378
-2.970347	, halting
-2.970347	, ho
-1.715074	, i	-0.4898446
-2.125249	, int	-0.1232652
-2.970347	, intw
-2.970347	, ioctl
-1.856403	, j	-0.3768289
-1.970347	, k	-0.3187588
-2.016104	, l	-0.5356725
-2.970347	, lea
-2.970347	, longjmp
-2.669317	, lu
-2.669317	, lv
-2.970347	, lys
-1.970347	, m	-0.5153255
-1.648128	, n	-0.2270157
-2.970347	, np
-1.856403	, o	-0.9365011
-2.970347	, oec
-2.970347	, op
-1.824219	, p	-0.2032218
-2.970347	, pow
-2.493226	, q
-2.016104	, r	-0.4926335
-2.970347	, rand
-2.125249	, s	-0.4845845
-2.970347	, shi
-2.368287	, sizeof	0.146128
-2.970347	, sprintf
-2.970347	, strlen
-2.970347	, sym_
-1.928954	, t	-0.2942756
-2.970347	, tape
-1.794256	, u	-0.8776428
-2.970347	, unk
-2.970347	, usleep
-2.016104	, v	-0.1153934
-2.970347	, vad
-2.970347	, val
-2.970347	, vpr
-2.067257	, w	-0.1303338
-2.970347	, write
-1.794256	, x	-0.3733718
-2.016104	, y	-0.4178073
-2.368287	, z
0	,101 +99*!
-2.168792	- &
-1.390641	- (	-0.2141579
-2.469822	- )
-2.168792	- *
-2.469822	- .05
-2.469822	- 0.5
-0.8465727	- 1	-0.2547449
-2.469822	- 12
-2.469822	- 128
-2.469822	- 14202379
-2.469822	- 158
-2.469822	- 16
-2.469822	- 19
-2.469822	- 1933008
-1.770852	- 2	-0.1819772
-2.469822	- 205
-2.469822	- 22
-2.469822	- 24
-2.469822	- 257
-1.566732	- 3	-0.1760912
-2.469822	- 30
-2.469822	- 304
-1.992701	- 32	-0.4259688
-2.168792	- 33	0
-2.469822	- 35
-2.469822	- 37
-2.469822	- 4
-2.469822	- 488848
-2.469822	- 4u
-2.469822	- 5
-2.469822	- 508
-2.469822	- 59
-1.770852	- 6	-0.1861332
-2.469822	- 60
-2.469822	- 64
-1.992701	- 7
-2.469822	- 7.5
-2.168792	- 8
-2.469822	- 89
-1.867762	- 9	-0.1335389
-2.168792	- 90
-1.469822	- </s>
-2.168792	- A
-2.469822	- Acce
-2.168792	- B
-1.992701	- D
-2.168792	- E
-1.992701	- EOF
-2.469822	- F
-1.867762	- H
-1.992701	- I	-0.3669058
-2.469822	- K
-2.469822	- L
-2.469822	- M
-2.469822	- O1
-2.469822	- O7
-2.168792	- OO	-0.39794
-2.469822	- P
-2.469822	- Q
-2.469822	- Q0
-2.469822	- QO
-2.469822	- R
-2.168792	- V
-1.992701	- W	-0.4637573
-2.469822	- WebSocket
-2.469822	- Y
-2.469822	- _O
-2.469822	- _Q
-1.992701	- __	-0.4227636
-1.691671	- a	-0.4434816
-2.168792	- asn	0.3357921
-1.691671	- b	-0.1706625
-1.566732	- c	-0.1095639
-1.691671	- d	-0.7748105
-2.469822	- d8
-2.469822	- dup2
-1.992701	- e
-1.624724	- f	-0.4424116
-1.992701	- g	-0.3847117
-2.168792	- h
-1.469822	- i	-0.4403984
-1.770852	- j	-0.2059096
-1.691671	- k	-0.161368
-2.469822	- key
-2.469822	- l
-1.992701	- m
-1.624724	- n	-0.3015996
-1.992701	- o	-0.4463866
-1.770852	- p	-0.2109454
-2.469822	- q
-2.168792	- s
-1.867762	- u	-0.5333442
-1.770852	- unk	-0.1760913
-1.691671	- v	-0.4218184
-1.992701	- x	-0.4216039
-1.355879	- ~	-0.09027945
-1.70757	-- &&
-0.7533277	-- )	-0.2778538
-1.40654	-- ,	-0.4624621
-1.70757	-- 1954
-0.6661775	-- ;	-0.07293304
-1.40654	-- </s>
-1.40654	-- =
-1.40654	-- >
-1.70757	-- E
-1.70757	-- H
-1.40654	-- O
-1.70757	-- R
-0.9294189	-- T	-0.7495061
-1.40654	-- [
-1.70757	-- g
-1.40654	-- j
-1.70757	-- q
-1.70757	-- s
-1.70757	-- v
-1.70757	-- val
-1.70757	-- xor
-1.156347	-= (
-1.633469	-= 061
-1.633469	-= 2
-1.633469	-= 4
-1.633469	-= 80
-1.633469	-= </s>
-1.633469	-= D
-1.633469	-= F
-1.156347	-= H	-0.5034502
-1.633469	-= V
-1.633469	-= W
-1.633469	-= b
-1.332438	-= be	-0.05115253
-1.332438	-= bf	-0.30103
-1.156347	-= d	-0.4212635
-1.633469	-= e
-1.332438	-= f	-0.4031951
-1.031408	-= g	-0.5642715
-1.633469	-= h
-1.633469	-= i
-1.031408	-= l	-0.6312764
-1.633469	-= r
-1.633469	-= t
-1.156347	-= u	-0.455402
-1.332438	-= w	-0.4313638
-1.880814	-> </s>
-1.278754	-> a	-0.2495401
-0.8016323	-> b	-0.515808
-1.880814	-> c
-0.7346855	-> j	-0.4625329
-1.035716	-> n	-0.6913807
-1.278754	-> not
-1.278754	-> op	-0.1918855
-1.880814	-> pixels
-1.403692	-> val
-0.8394209	-> x	-0.4031205
-0.8394209	-> y	-0.4040569
-1.403692	-> z
-2.089905	. &
-2.089905	. /
-1.788875	. </s>
-2.089905	. ]
-1.186815	. _	-0.1853164
-2.089905	. binary
-1.048512	. c	-0.5772919
-2.089905	. crea
-2.089905	. dat
-2.089905	. data
-1.487845	. e	-0.2284793
-2.089905	. getC
-2.089905	. href
-2.089905	. key
-2.089905	. keysym
-0.5336026	. not	-0.6470271
-2.089905	. offsetLeft
-2.089905	. offsetTop
-2.089905	. onmousemove
-1.390935	. p	-0.2146104
-2.089905	. pageY
-2.089905	. putImageData
-1.487845	. q	-0.5362427
-2.089905	. send
-2.089905	. set
-2.089905	. slice
-2.089905	. st_mtime
-2.089905	. st_size
-2.089905	. subs
-2.089905	. sym
-1.788875	. t
-2.089905	. type
-0.8857851	. val	-0.2340832
-2.089905	. xkey
-1.089905	. y	-0.1852346
-0.1760913	... )	-0.4035158
-0.4771213	... </s>
0	.0 (
-0.4771213	.05 )
-0.4771213	.05 ;
-0.4771213	.05 </s>
-0.1760913	.1 )
-0.4771213	.1 :
0	.27 s
-0.4771213	.5 *
-0.4771213	.5 -
-0.4771213	.5 </s>
-1.90309	/ &
-1.30103	/ (
-1.90309	/ )
-1.90309	/ +
-1.90309	/ -
-1.90309	/ 1024.
-1.90309	/ 12
-0.69897	/ 2	-0.111003
-1.60206	/ 2.	0
-1.90309	/ 20
-1.90309	/ 24
-1.90309	/ 26
-1.425969	/ 3
-1.90309	/ 32768
-1.057992	/ 4	-0.2192351
-1.30103	/ 5	-0.09177037
-1.90309	/ 504
-1.90309	/ 6
-1.90309	/ 60
-1.90309	/ 60.
-1.90309	/ 768
-1.30103	/ 8	-0.5010334
-1.90309	/ 85
-1.90309	/ </s>
-1.90309	/ I
-1.90309	/ M
-1.90309	/ O
-1.90309	/ O3
-1.90309	/ QQ
-1.90309	/ RI4
-1.90309	/ RM
-1.90309	/ SlM90
-1.30103	/ f	-0.2777586
-1.90309	/ fabs
-1.90309	/ g
-1.90309	/ k
-1.60206	/ lM
-1.60206	/ n
-1.60206	/ p
-1.90309	/ scr
-1.90309	/ w
-0.69897	/= 2
-0.69897	/= H
-0.69897	/= c
-0.69897	/= l
-0.69897	/= z
-2.098644	0 &&
-2.399674	0 (
-0.5735989	0 )	-0.579259
-2.098644	0 +
-0.6288217	0 ,	-0.2522347
-1.195554	0 :	-0.1750778
-0.5801298	0 ;	-0.2042434
-1.496584	0 <	-0.1849568
-2.098644	0 </s>
-2.399674	0 ==
-2.098644	0 >
-1.445431	0 ?	-0.1403757
-1.399674	0 ]	-0.09311703
-2.399674	0 _t
-2.399674	0 m
-2.098644	0 ||
-2.098644	0 }
-0.4771213	0.5 *
-0.1760913	0.5 ;
0	0.7 ;
0	01 ]
0	02 </s>
0	024 )
0	03 ;
0	040 )
0	061 *
0	075 )
0	0d:`184>b)^15)OM :23h)QN<'
-0.30103	0u ,
-0.30103	0u ;
0	0x1 !=
0	0x3f0 )
0	0x67452301 ,
0	0x820008202625a0 ;
0	0x98BADCFE </s>
0	0xEFCDAB89 ,
0	0xf |
0	0xfc0 ||
0	0xfe0 ^
0	0xff00ff00ff ;
0	0xffff )
-1.78533	1 &	-0.4584792
-2.262451	1 &&
-0.6189984	1 )	-0.1975128
-2.262451	1 *
-1.78533	1 +
-0.8310874	1 ,	-0.1934106
-1.058331	1 -	-0.1891428
-2.262451	1 4
-1.660391	1 :	-0.2529039
-0.8000531	1 ;	-0.1044072
-2.262451	1 </s>
-1.359361	1 <<	-0.1094266
-1.961421	1 ==	-0.4522977
-1.961421	1 ?
-2.262451	1 A
-1.961421	1 [
-0.7439371	1 ]	-0.3131332
-2.262451	1 cq
-2.262451	1 |
-1.78533	1 }	-0.4677138
0	1.159922023e9 ,
0	1.5 ;
0	1.6937441874215991e190 ;
-0.6368221	10 )
-1.113943	10 *
-0.8129134	10 +	-0.466942
-1.113943	10 ,
-1.113943	10 :
-0.8129134	10 ;
-1.113943	10 R
-1.113943	10 ||
-1.113943	10 }
0	1008 )
-0.4771213	1023 )
-0.1760913	1023 |	-0.4393327
0	1024 /
0	1024. ;
0	105 <
-0.1760913	11 )
-0.4771213	11 ;
0	1103515245 &
0	112 ,
0	1152 +
-1	12 &
-0.69897	12 )
-1	12 +
-0.69897	12 -
-0.69897	12 </s>
-0.69897	12 >
0	123 :
0	12359778 ;
0	12365733 -
0	124 -
0	127 ;
-0.60206	128 &&
-0.30103	128 )	-0.3472752
-0.60206	128 ,
0	128L +
0	13 ,
0	138 )
-0.1760913	14 &
-0.7781513	14 ]
-0.7781513	14 ^
0	14202379 *
0	14695981039346656037ULL ;	-0.2952217
-0.544068	15 )	-0.4749811
-0.3679768	15 ,
-0.845098	15 ;
-0.845098	15 |
0	158 )
-1.30103	16 &&
-0.5228788	16 )	-0.1711839
-0.8239087	16 *
-1.30103	16 +
-0.8239087	16 ,
-1.30103	16 /
-0.8239087	16 ;	-0.2952217
-1.30103	16 </s>
-1.30103	16 >
0	1600 &&
-0.1760913	16711935 ;	-0.4704261
-0.4771213	16711935 |
0	16774143 ;
0	16u )
-0.1760913	17 +
-0.4771213	17 ]
-0.69897	18 )
-0.69897	18 ,
-0.69897	18 </s>
-0.69897	18 ?
-0.69897	18 ]
0	19 )
0	1912 --
0	19205553 ;
0	193 +
0	1933008 </s>
0	194 ,
0	1954 )
0	196 -
0	197 )
0	198 ;
-0.30103	1LL +
-0.30103	1LL <<
0	1l N
-0.30103	1u )
-0.30103	1u ,
-1.755875	2 %
-1.579784	2 &
-2.056905	2 (
-0.5128368	2 )	-0.0480389
-1.056905	2 *	-0.07176176
-1.454845	2 +
-0.826456	2 ,	-0.2223135
-1.755875	2 -
-0.9107768	2 ;	0.06845167
-1.755875	2 </s>
-1.357935	2 ?
-2.056905	2 MJ
-0.9429615	2 ]	-0.1278791
-2.056905	2 _KK3
-1.579784	2 ||
-2.056905	2 }
0	2. )	-0.473446
0	2.271681097355226e15 ,
-0.90309	20 %
-0.60206	20 )
-0.90309	20 *
-0.60206	20 </s>
-0.60206	20 ?
0	204 ]
0	205 )
-0.30103	21 -
-0.30103	21 ]
-0.30103	22 )
-0.30103	22 *
0	23 ;
0	234 ;
-0.544068	24 )
-0.845098	24 ;
-0.544068	24 </s>
-0.845098	24 O3NF
-0.845098	24 ]
0	25 ;
0	250 ,
-0.7781513	255 ,
-0.7781513	255 -
-0.7781513	255 :
-0.4771213	255 ;
-0.7781513	255 ?
-0.30103	256 ,
-0.60206	256 -
-0.60206	256 ;
0	256L +
0	257 ,
0	258063 &
-0.30103	26 ,
-0.30103	26 ]
0	27 )
0	275 )
0	276 )
0	28 &
0	287 )
0	2L )
0	2l NUO
-1.60206	3 &
-1.90309	3 (
-0.6243364	3 )	-0.07733613
-0.9488475	3 *	-0.1019922
-1.20412	3 +	-0.6694856
-1.057992	3 ,	-0.1314689
-1.20412	3 -	-0.2174096
-1.90309	3 4
-1.60206	3 :
-1	3 ;
-1.90309	3 </s>
-1.90309	3 ?
-1.90309	3 A
-1.90309	3 B
-0.69897	3 ]	-0.2784222
-1.90309	3 _z
0	3' Q
0	3.135045272e9 ,
0	3.9999e5 )
-0.845098	30 &&
-0.845098	30 *
-0.845098	30 +
-0.544068	30 ;
-0.845098	30 ?
-0.845098	30 ]
0	304 -
0	308438 *
-0.60206	31 )
-0.1249387	31 ;
-0.4771213	32 )	-0.1387461
-0.90309	32 +	-0.4179299
-0.90309	32 ,
-1.380211	32 -
-1.380211	32 :
-0.6812412	32 ;	-0.03994921
-1.079181	32 <<	-0.4202164
-1.380211	32 |
-0.30103	32768 )
-0.30103	32768 ,
0	3285377520 }
0	33 )
-0.30103	333 *
-0.30103	333 ;
0	3352537 *
-0.4771213	34 <
-0.4771213	34 </s>
-0.4771213	34 m
-0.69897	35 )
-0.69897	35 -
-0.69897	35 :
-0.69897	35 ?
-0.69897	35 R
-0.4771213	36 -
-0.1760913	36 :
-0.30103	37 +
-0.30103	37 ;
-0.30103	38 )
-0.30103	38 *
0	384 )
0	39 ;
0	3920 )
-1.875061	4 &
-1.875061	4 &&
-0.5326386	4 )	-0.3295778
-1.029963	4 *	-0.1209798
-1.273001	4 +	-0.5579761
-0.9719713	4 ,
-1.09691	4 -
-1.875061	4 :
-1.09691	4 ;
-1.875061	4 <
-1.875061	4 </s>
-1.875061	4 ?
-1.875061	4 SNH
-0.79588	4 ]	-0.4091242
-1.39794	4 |
0	4.023233417e9 ,
0	4.294967296e9 ,
0	4.5 )
0	4.503599627370496e15 ,
0	4.522871578970112e217 ;
0	4.6727004911171048e-153 ;
-0.20412	40 )	-0.09200267
-0.90309	40 :
-0.90309	40 ;
-0.90309	40 ?
0	4092 ^
0	41 )	-0.3472752
0	41088 ,
0	4190208 |
0	4194304 </s>
-0.09691001	42 )	-0.1711839
-0.69897	42 ;
0	44 +
0	45 )
0	48 ;
0	480 ,
0	488848 *
0	4L +
-0.30103	4u )
-0.30103	4u ;
-1.531479	5 %
-0.4175356	5 )	-0.3733976
-1.230449	5 *
-0.9294189	5 ,
-1.531479	5 -
-1.531479	5 ;
-1.531479	5 </s>
-1.230449	5 ?
-1.531479	5 OMaMch
-0.6283889	5 ]	0.01061897
0	50 ;
0	5000 +
0	504 *
0	508 ]
0	51 )
-0.60206	512 *
-0.60206	512 +
-0.60206	512 ;
-0.60206	512 </s>
0	512L )
0	516 ]
-0.30103	5200 ;
-0.30103	5200 ]
0	5298487 :
0	55 ?
-0.4771213	56 )
-0.1760913	56 ;	-0.4271473
0	57 ;
-0.30103	58 :
-0.30103	58 >
-0.30103	59 ;
-0.30103	59 ==
0	5toG57j/3" </s>
-1.278754	6 %
-1.278754	6 &
-1.579784	6 &&
-0.6255411	6 )	-0.3148373
-1.278754	6 *	-0.4723662
-1.102662	6 ,	-0.5874009
-1.579784	6 -
-1.579784	6 /
-1.579784	6 :
-1.102662	6 ;
-1.579784	6 <
-1.278754	6 </s>
-1.579784	6 >
-1.579784	6 ?
-1.579784	6 N
-1.579784	6 O
-0.9777236	6 ]	-0.249287
-1.579784	6 sN
-1.579784	6 yN
-0.20412	60 )	-0.2680939
-0.60206	60 *	-0.4409776
-0.90309	60 /
0	60. /
-0.1760913	61 :
-0.4771213	61 ;
-0.30103	62 ;
-0.30103	62 ?
-0.30103	63 )	-0.4715966
-0.60206	63 ,
-0.60206	63 <<
0	63504 ;
-1.079181	64 &
-0.7781513	64 )
-1.079181	64 *
-0.3802112	64 ,
-1.079181	64 :
-1.079181	64 ;
-1.079181	64 </s>
0	64u )
0	65280 )
0	65307 ;
-0.30103	65536 ;
-0.30103	65536 ]
0	65544 >
0	667 ,
0	67 *
0	69 j
0	6990400 ;
-1.50515	7 &
-0.80618	7 )	-0.2178658
-1.20412	7 *
-0.90309	7 ,
-1.50515	7 -
-1.50515	7 7
-1.50515	7 :
-1.20412	7 ;
-1.50515	7 <
-1.20412	7 </s>
-1.50515	7 ?
-1.028029	7 O
-1.50515	7 OMQ
-1.50515	7 ON8r
-0.80618	7 ]	-0.1701058
-1.50515	7 sN
0	7.5 )
0	7.90055321525613e115 ;
0	70 )
-0.30103	74 )
-0.30103	74 </s>
0	75 ?
0	76 )
-0.60206	768 ;
-0.60206	768 </s>
-0.30103	768 ]
-0.30103	77 ;
-0.30103	77 O
-0.60206	79 )
-0.60206	79 ;
-0.60206	79 ]
-0.60206	79 b
-1.247155	8 &
-1.724276	8 &&
-0.6828832	8 )	-0.1373256
-1.247155	8 +
-0.6103325	8 ,	-0.1293721
-1.724276	8 :
-0.9461246	8 ;	-0.2920205
-1.724276	8 <
-1.423246	8 >>	-0.451314
-1.423246	8 ?
-1.122216	8 ]
-1.724276	8 _a
-1.724276	8 b
-1.724276	8 j
-1.724276	8 k9
-1.423246	8 |	-0.4586379
0	8.44396048e8 ,
-1.146128	80 )
-0.146128	80 +	-0.979397
-1.146128	80 ,
-1.146128	80 ;
-1.146128	80 ]
0	8000 </s>
-0.4771213	81 )
-0.4771213	81 -
-0.4771213	81 /
0	82 ;
0	84 )
-0.30103	85 *
-0.30103	85 +
-0.30103	86400 )
-0.30103	86400 -
0	881 ,
0	89 ?
0	8u +
-1.09691	9 %
-0.49485	9 )	-0.3239971
-1.09691	9 *
-1.09691	9 ,
-1.09691	9 -
-1.09691	9 ;	-0.4629041
-1.39794	9 <<
-1.09691	9 ?
-1.39794	9 g
-1.39794	9 j_la
-1.39794	9 j_laaaN
-1.39794	9 slltwzh
-0.30103	90 )
-0.30103	90 ;
0	91 )
-0.69897	92 &&
-0.69897	92 )
-0.69897	92 +
-0.39794	92 ;
0	93 ,
0	96 ^
-0.4771213	97 +
-0.1760913	97 ]
0	98 +
0	9858122 :
0	99 ]	-0.3415636
0	9999 ]
0	99999 )
-1.678215	: !
-2.155336	: ""
-2.155336	: ")$"
-2.155336	: "Q(j"
-2.155336	: "Q(jam"
-1.678215	: %
-1.854306	: &
-2.155336	: '='
-0.8331168	: (	-0.338778
-1.553276	: *	-0.5810677
-1.854306	: -
-0.9792448	: 0	-0.4098859
-1.854306	: 1
-2.155336	: 12365733
-2.155336	: 2
-2.155336	: 32
-2.155336	: 3352537
-2.155336	: 5
-1.854306	: 6
-2.155336	: 65536
-2.155336	: 69
-2.155336	: 79
-1.076155	: </s>
-2.155336	: B
-2.155336	: C
-2.155336	: EOF
-2.155336	: G
-1.854306	: I	-0.3669058
-2.155336	: N
-2.155336	: O
-2.155336	: P
-2.155336	: R
-2.155336	: S
-1.854306	: T
-2.155336	: V
-1.854306	: _	-0.4305451
-2.155336	: _Zadat57
-2.155336	: _c
-1.854306	: b
-2.155336	: break
-1.678215	: c
-2.155336	: case
-1.678215	: d
-1.854306	: e
-2.155336	: f
-2.155336	: fopen
-1.854306	: g
-1.678215	: gln	-0.30103
-2.155336	: goto
-1.854306	: h
-1.854306	: i
-2.155336	: j
-2.155336	: k8b
-2.155336	: l
-2.155336	: m
-2.155336	: n
-2.155336	: putchar
-2.155336	: q
-1.854306	: r	-0.4527619
-2.155336	: switch
-1.678215	: u	-0.4206399
-1.553276	: v	-0.251056
-2.155336	: w
-2.155336	: webso
-2.155336	: x
-1.854306	: ~
0	:23h)QN<' /
-2.395152	; !	-0.6726411
-3.094122	; %
-3.094122	; &
-3.094122	; '(
-2.395152	; (	-0.2090018
-1.492062	; )	-0.4560844
-1.793092	; *	-0.3298093
-2.094122	; ++	-0.9652378
-3.094122	; --
-3.094122	; 0
-2.139879	; ;	-0.2734207
-0.4657327	; </s>
-2.395152	; A	-0.6054397
-2.31597	; B	-0.7331243
-2.094122	; D	-0.1663314
-2.31597	; E	-0.6742551
-2.793092	; F	-0.4149733
-2.31597	; G	0.39794
-2.617	; H	-0.5362427
-2.492062	; I	-0.5198733
-2.492062	; J	0
-2.191032	; K	-0.2352127
-2.31597	; L	-0.4585057
-3.094122	; M
-3.094122	; N
-2.395152	; O
-2.191032	; P	-0.7647873
-2.793092	; Q
-3.094122	; Q_
-2.249023	; R	-0.2312465
-3.094122	; SDL_BlitSurface
-3.094122	; SDL_Delay
-3.094122	; SDL_Event
-3.094122	; SDL_FillRect
-3.094122	; SDL_Flip
-3.094122	; SDL_Init
-3.094122	; SDL_LoadWAV
-3.094122	; SDL_MixAudio
-3.094122	; SDL_OpenAudio
-3.094122	; SDL_PauseAudio
-2.492062	; T	-0.2363871
-1.838849	; U	-0.396088
-1.980178	; V	-0.1606868
-1.863673	; W	-1.020144
-3.094122	; Window
-2.793092	; X	-0.4284293
-3.094122	; XEvent
-3.094122	; XImage
-3.094122	; XSelectInput
-2.793092	; Y	-0.4340866
-2.139879	; _	-0.09034092
-3.094122	; __
-1.863673	; a	-0.4002
-1.562643	; b	-0.2560326
-3.094122	; bA
-3.094122	; ba
-3.094122	; bc
-2.617	; bh	0.1249388
-3.094122	; bj
-2.492062	; break	0.5314789
-3.094122	; bz
-2.191032	; c	-0.1211457
-2.395152	; case
-2.249023	; char	0.1588323
-1.863673	; d	-0.3843513
-2.793092	; default	0
-2.395152	; e	-0.1579843
-2.617	; else
-3.094122	; extern
-2.139879	; f	-0.4250236
-3.094122	; fgets
-2.492062	; float
-1.60276	; for	0
-3.094122	; fread
-3.094122	; free
-2.395152	; g	-0.3832167
-2.793092	; goto
-3.094122	; h
-1.91803	; i	-0.7446101
-1.980178	; if	0.436285
-1.980178	; int	-0.1401787
-2.139879	; j	-0.5269676
-1.947994	; k	-0.4223345
-2.395152	; l	-0.3354475
-2.492062	; long	-0.1434221
-2.249023	; m	-0.1785801
-2.793092	; main	0.7269988
-3.094122	; memcpy
-3.094122	; mvaddstr
-3.094122	; mvinsch
-2.052729	; n	-0.4857735
-2.01494	; o	-0.5925146
-1.980178	; p	-0.478316
-2.31597	; q	-0.258278
-2.31597	; r	-0.07918125
-3.094122	; refresh
-2.01494	; return	-0.2419085
-1.980178	; s	-0.3494718
-2.617	; struct
-3.094122	; switch
-2.249023	; t	-0.2790357
-3.094122	; typedef
-1.91803	; u	-0.9834463
-3.094122	; union
-2.492062	; v	-0.2403321
-3.094122	; va_end
-3.094122	; va_start
-2.492062	; void	-0.509306
-1.91803	; w	-0.3448833
-2.492062	; while	0
-2.191032	; x	-0.5211381
-2.31597	; xor	-0.7829501
-2.31597	; y	-0.698045
-1.815368	; z	-0.4638795
-3.094122	; {
-3.094122	; |
-0.9637879	; }	-0.1160933
0	;b' %
-2.143015	< %
-2.143015	< (
-2.143015	< *
-2.143015	< /
-0.9669235	< 0	-0.813844
-2.143015	< 11
-2.143015	< 127
-1.841985	< 14	0
-2.143015	< 16
-1.841985	< 18
-1.540955	< 2	-0.5112969
-1.841985	< 20	-0.3521825
-1.540955	< 3
-2.143015	< 30
-2.143015	< 32
-2.143015	< 4
-2.143015	< 5200
-2.143015	< 57
-1.665894	< 6
-1.841985	< 60	-0.05115253
-2.143015	< 61
-1.841985	< 62
-2.143015	< 7
-2.143015	< 74
-2.143015	< 75
-2.143015	< 77
-1.841985	< 79
-2.143015	< 80
-2.143015	< 82
-2.143015	< 91
-2.143015	< 92
-1.444045	< </s>
-1.841985	< A	-0.4191293
-1.841985	< B
-1.540955	< D	-0.2455126
-1.841985	< E
-2.143015	< L
-2.143015	< M
-2.143015	< O
-2.143015	< Q
-2.143015	< SPEED
-2.143015	< U
-2.143015	< W
-1.444045	< a	-0.2053546
-2.143015	< abs
-2.143015	< asn
-1.665894	< b
-2.143015	< b4
-1.665894	< c
-1.665894	< d
-2.143015	< f
-2.143015	< h
-1.364864	< i	-0.1419156
-2.143015	< kP8
-2.143015	< l
-1.841985	< m
-1.364864	< n	-0.125366
-1.364864	< not	-0.6128908
-2.143015	< p
-1.444045	< s	-0.6702459
-2.143015	< script
-1.841985	< t	-0.455127
-1.841985	< u
-1.841985	< v
-1.841985	< x
-2.143015	< y
-2.143015	< ~
-1.153815	<< (
-1.278754	<< 1	-0.357685
-1.755875	<< 14
-1.755875	<< 15
-1.454845	<< 18
-1.755875	<< 23
-1.755875	<< 24
-1.755875	<< 30
-1.278754	<< 32	-0.3756636
-1.278754	<< 4	-0.3263359
-1.755875	<< 40
-1.755875	<< 5
-1.454845	<< 56	0
-1.454845	<< 6	-0.4536402
-1.755875	<< 60
-1.755875	<< 7
-0.9107768	<< 8	-0.3995758
-1.454845	<< </s>
-1.755875	<< Q_
-1.454845	<< a
-1.755875	<< b
-1.454845	<< f	-0.4207448
-1.755875	<< i
-1.278754	<< l	-0.4541374
-1.454845	<< s
-1.153815	<< t
-1.454845	<< u	-0.4402946
-1.755875	<< unk
-1.755875	<< z
0	<<= b
-0.90309	<= 24
-0.90309	<= D
-0.90309	<= L
-0.90309	<= f
-0.90309	<= k
-0.90309	<= m
-0.90309	<= optind
-0.90309	<= q
0	<P~6" </s>
-3.042576	<s> !
-3.042576	<s> !=
-3.042576	<s> "
-3.042576	<s> "!:E%;!ea!!!WqE0z!f/y}!%!!Qi6!uzt!n}?]!bl!ak!SetR<"
-3.042576	<s> "!pv!;!Hm%Ro4"
-3.042576	<s> "%d
-3.042576	<s> "%f,%f,"
-3.042576	<s> "*_[512],**p=_,**d,b,q;for(b=0;b"
-3.042576	<s> "*p=#b,P[9999],*d=P,*e[]="
-3.042576	<s> "/"
-3.042576	<s> "258EAFA5-"
-3.042576	<s> ";;"
-3.042576	<s> ";Gam"
-3.042576	<s> ";GlockQ18"
-3.042576	<s> ";^Q<d|8=o;]Q<dj8<Pk8<c]'?;QQdi8?P'Q)d8<9`8?c;Qdh8=P']Q<`c8>PQ9_8"
-3.042576	<s> "<o_Q<o_QBdo`QQ';`Q=9`]8=bobQ_o_Q<o]8=';bQC(88cQ`bcgQ>oP']8<;cQ>98)^Q?''oc`Q>"
-3.042576	<s> "=(p-_+1)*9%512]=(O*)p;"
-3.042576	<s> ">b;og8=''`Q<`b8?'QQ9_8?c;dPe8dQa8<P]Q<``8=;'f8>QQ`]8?ocQQ_8=''_Q`8aQ"
-3.042576	<s> "?guhljL!^P%
-3.042576	<s> "CYOUQWIN!]Q=;of8BQQ)88bc]QA98P'Qo]8>oQQ_8CP;QQ98b`_8@P8(Q`]'^Q=`']QB)88"
-3.042576	<s> "M@K~|JOEF\\^~_NHI]"
-3.042576	<s> "Zj$x!~V!n&g8!cK!
-3.042576	<s> "bQQ]`8J;QQ`88bc99bd(`8iQ@''QQo^8E'`8c;QQ'Q``8?QQ`'kQ<o]8B9PQQ`';_Q<`_8<cbQ"
-3.042576	<s> "e.6!r!%l6G!n~^<i=%pEwL%P!'<!FQt%u
-3.042576	<s> "e:|
-3.042576	<s> "etu"
-3.042576	<s> "med);"
-3.042576	<s> "oc']Q]8<;cQ>`8bbQA``QQ''`Q?88P;dQ=`)nQ?*/;;"
-3.042576	<s> "oid
-2.264424	<s> %
-2.741545	<s> &
-2.565454	<s> &&	-0.2875833
-3.042576	<s> '7M{N^kh
-3.042576	<s> 'c'
-1.511097	<s> (	-0.06659886
-1.537426	<s> )	-0.05750361
-2.565454	<s> *
-2.565454	<s> +
-1.963394	<s> ++	-0.3454491
-2.741545	<s> +=
-1.700153	<s> ,	-0.08561576
-2.042576	<s> -	-0.2022758
-2.440516	<s> --
-3.042576	<s> -=
-2.565454	<s> .
-2.565454	<s> /
-2.343606	<s> 0	-0.265438
-3.042576	<s> 0xffff
-2.565454	<s> 1
-3.042576	<s> 10
-3.042576	<s> 1152
-3.042576	<s> 128
-3.042576	<s> 15
-3.042576	<s> 16
-3.042576	<s> 16711935
-2.440516	<s> 2	-0.1417522
-3.042576	<s> 25
-3.042576	<s> 333
-2.741545	<s> 4
-3.042576	<s> 45
-3.042576	<s> 5
-3.042576	<s> 6
-3.042576	<s> 63504
-3.042576	<s> 64
-3.042576	<s> 65307
-2.440516	<s> 7
-2.565454	<s> 8
-3.042576	<s> 81
-3.042576	<s> 92
-3.042576	<s> 96
-2.440516	<s> :	-0.2320538
-1.787303	<s> ;	-0.07537197
-2.741545	<s> <
-2.440516	<s> <<
-1.838456	<s> =	-0.1061119
-2.741545	<s> >
-2.343606	<s> >>
-2.343606	<s> ?
-2.264424	<s> A	-0.1180993
-3.042576	<s> Alan
-2.565454	<s> B
-2.565454	<s> C
-3.042576	<s> COLS
-2.741545	<s> D	-0.4502491
-2.088333	<s> E	-0.3732251
-2.565454	<s> F	-0.4149733
-2.565454	<s> FILE	0
-2.741545	<s> G
-2.264424	<s> H	-0.7353993
-2.001183	<s> I	-0.1652604
-2.741545	<s> J
-2.197478	<s> K	-0.1611339
-2.264424	<s> L
-2.197478	<s> M	-0.1918855
-3.042576	<s> MkQN
-2.440516	<s> N	-0.0983797
-2.565454	<s> O
-3.042576	<s> O1
-3.042576	<s> O2
-3.042576	<s> O7
-3.042576	<s> O8
-3.042576	<s> O_
-3.042576	<s> On
-2.343606	<s> P	-0.2596373
-2.440516	<s> Q	-0.2617767
-3.042576	<s> Q1
-3.042576	<s> Q2
-3.042576	<s> Q3
-3.042576	<s> QO
-2.565454	<s> R
-3.042576	<s> S
-3.042576	<s> SDL_PollEvent
-3.042576	<s> SDL_Surface
-2.139486	<s> T
-2.440516	<s> U	-0.2521814
-3.042576	<s> Upgrade
-2.264424	<s> V	-0.1432987
-2.088333	<s> W	-0.4429071
-2.565454	<s> X
-3.042576	<s> XPutImage
-1.928632	<s> Y	-0.5146062
-2.139486	<s> Z	-0.2513422
-2.440516	<s> [
-2.440516	<s> ]	-0.4910571
-2.741545	<s> _
-3.042576	<s> _0
-1.866484	<s> a	-0.2845358
-3.042576	<s> ageX
-2.741545	<s> ala
-2.440516	<s> and	-0.2747011
-2.565454	<s> asn	0.2108533
-2.042576	<s> b	-0.3434025
-3.042576	<s> bB
-3.042576	<s> bC
-3.042576	<s> be
-3.042576	<s> bl
-3.042576	<s> bn
-2.197478	<s> break	0.327359
-3.042576	<s> bt
-2.741545	<s> bu
-3.042576	<s> by
-2.440516	<s> c	-0.5625515
-3.042576	<s> c8
-3.042576	<s> case
-2.741545	<s> char	0.04968777
-2.088333	<s> const	-0.4247332
-1.838456	<s> d	-0.7731305
-3.042576	<s> default
-2.440516	<s> do	0
-3.042576	<s> double
-1.720356	<s> e	-0.4688773
-1.580178	<s> efine
-2.741545	<s> else	-0.3853509
-3.042576	<s> er
-2.440516	<s> err	0
-3.042576	<s> errx
-2.741545	<s> exit	0
-2.343606	<s> f	-0.1479226
-1.838456	<s> for	0.0125891
-3.042576	<s> fputc
-2.343606	<s> free	0
-2.741545	<s> fseek	0
-3.042576	<s> fw
-1.595417	<s> g	-0.991226
-3.042576	<s> getchar
-2.440516	<s> gly	0
-2.088333	<s> h	-0.1747529
-1.644636	<s> i	-0.933542
-1.429792	<s> if	-0.07302094
-1.700153	<s> int	-0.1578982
-2.343606	<s> j	-0.6789529
-2.343606	<s> k
-1.963394	<s> l	-0.2173482
-3.042576	<s> lf
-2.565454	<s> long
-2.565454	<s> lys
-2.741545	<s> m
-3.042576	<s> mR8
-2.440516	<s> main	0.50515
-2.565454	<s> met	-0.3679768
-3.042576	<s> mva
-2.343606	<s> n
-2.741545	<s> ndif	0
-3.042576	<s> new
-2.088333	<s> not	-0.7119349
-1.720356	<s> o	-0.7454821
-3.042576	<s> oM
-3.042576	<s> ocket
-3.042576	<s> on
-2.741545	<s> op	-0.30103
-3.042576	<s> open
-3.042576	<s> optind
-2.264424	<s> p	-0.3899711
-2.741545	<s> phe	0
-2.264424	<s> printf	0
-3.042576	<s> pt
-3.042576	<s> putchar
-2.741545	<s> puts	0.3679768
-2.440516	<s> q
-2.343606	<s> r
-3.042576	<s> rQ
-3.042576	<s> rea
-2.001183	<s> return	-0.04575749
-2.741545	<s> rewind	0
-3.042576	<s> rror
-1.896447	<s> s	-0.7166711
-2.440516	<s> sec	-0.3467875
-3.042576	<s> signal
-3.042576	<s> sin
-2.343606	<s> static	0.07918125
-3.042576	<s> stdin
-3.042576	<s> strchr
-2.741545	<s> switch	0
-2.139486	<s> t	-0.4259686
-3.042576	<s> tf
-2.343606	<s> thr	-0.09691003
-3.042576	<s> tr
-3.042576	<s> type
-2.001183	<s> typedef	-0.02020337
-2.741545	<s> tyr	-0.2552725
-2.088333	<s> u	-0.3414587
-2.197478	<s> unsigned	-0.06694677
-2.440516	<s> v
-2.741545	<s> val
-2.343606	<s> void	-0.305186
-3.042576	<s> volatile
-2.042576	<s> w	-0.3336991
-1.963394	<s> while	0
-2.565454	<s> x
-1.963394	<s> y	-0.3613259
-2.197478	<s> z	-0.7611962
-1.838456	<s> {	-0.5799457
-1.128762	<s> }	-0.539763
-2.741545	<s> ~
-2.217484	= !
-2.916454	= "
-2.916454	= "<;iQ=/*do<;dQ=ook8?boc;aQ=odr8>oc;_Q<ox8>oc"
-2.916454	= "NBLF\1Nblfgjmf\1"
-2.916454	= "\n\n\n"
-2.916454	= "syntax_error!"
-2.314394	= &	-0.6765015
-2.615424	= '128'
-2.916454	= 'width:256px;height:256px'
-1.263241	= (	-0.2833563
-1.574031	= *	-0.5706869
-2.916454	= ,
-1.554726	= -	-0.369027
-2.916454	= --
-2.916454	= .1
-0.9819555	= 0	-1.173314
-2.916454	= 040
-2.916454	= 0u
-2.916454	= 0x1
-2.916454	= 0x820008202625a0
-1.554726	= 1	-0.811084
-2.916454	= 1.159922023e9
-2.217484	= 10	-0.1492981
-2.916454	= 1024
-2.916454	= 112
-2.916454	= 12
-2.916454	= 12359778
-2.615424	= 14695981039346656037ULL	0
-2.916454	= 16
-2.916454	= 17
-2.916454	= 196
-2.916454	= 1LL
-2.439333	= 2	-0.4202164
-2.916454	= 2.271681097355226e15
-2.916454	= 234
-2.916454	= 250
-2.615424	= 255
-2.916454	= 256
-2.916454	= 26
-2.138303	= 3	-0.6879746
-2.916454	= 3.135045272e9
-2.916454	= 30
-2.615424	= 32
-2.916454	= 32768
-2.916454	= 333
-2.916454	= 34
-2.916454	= 37
-2.217484	= 4	-0.6884198
-2.916454	= 4.023233417e9
-2.916454	= 4.294967296e9
-2.916454	= 4.503599627370496e15
-2.916454	= 40
-2.916454	= 41088
-2.916454	= 48
-2.916454	= 480
-2.615424	= 5	-0.4227636
-2.916454	= 50
-2.916454	= 5000
-2.916454	= 512
-2.314394	= 6	-0.2653144
-2.916454	= 64
-2.916454	= 6990400
-2.138303	= 7	-0.1180993
-2.439333	= 8	-0.3549054
-2.916454	= 8.44396048e8
-2.916454	= 80
-2.916454	= 9
-1.686005	= </s>
-1.594235	= A	-0.4580474
-1.837273	= B	-0.4637572
-2.013364	= C	-0.3120254
-2.916454	= COLS
-2.138303	= D	-0.3802112
-2.217484	= E	-0.1832193
-2.138303	= F	-0.3290587
-2.138303	= H	-0.07748145
-2.217484	= I	-0.3748747
-2.916454	= J
-2.071356	= K	-0.3713565
-2.314394	= L	-0.2727987
-2.916454	= LINES
-2.314394	= M	-0.5228788
-1.837273	= N	-0.5387782
-1.916454	= O	-0.4544213
-2.916454	= O0
-2.916454	= O5
-2.439333	= OO	-0.39794
-2.615424	= O_	0.4771213
-2.916454	= O_o
-2.439333	= P
-1.962211	= Q	-0.7533276
-2.916454	= Q7
-2.916454	= Q8
-2.439333	= Q_	0
-2.439333	= R	-0.4490925
-2.314394	= S
-2.916454	= SDL_CreateRGBSurface
-2.916454	= SDL_SetVideoMode
-2.013364	= T	-0.2087157
-2.916454	= TIMESTEP
-2.916454	= U
-2.615424	= W
-2.916454	= X
-2.916454	= XCreateImage
-2.916454	= XCreateSimpleWindow
-2.916454	= XLookupKeysym
-2.916454	= XOpenDisplay
-2.916454	= Y
-2.615424	= Z	-0.4140695
-1.962211	= _	-0.7961744
-2.916454	= _0
-2.615424	= _Q
-2.439333	= __	-0.4227636
-2.916454	= __TIME__
-2.916454	= _b
-1.770326	= a	-0.2114754
-1.802511	= b	-0.2018985
-2.916454	= b5g
-2.615424	= bA
-2.916454	= bB
-2.916454	= bC
-2.615424	= bE	-0.07918125
-2.916454	= ba
-2.916454	= bb
-2.916454	= bf
-2.916454	= bl
-2.916454	= bm
-2.071356	= bp	0
-2.916454	= bs
-2.916454	= buf
-2.916454	= bx
-2.916454	= by
-2.615424	= bz
-1.802511	= c	-0.1375664
-2.439333	= calloc	0
-2.916454	= cos
-1.712334	= d	-0.478782
-1.740363	= e	-0.676107
-2.615424	= exp	0
-1.6377	= f	-0.5136229
-2.916454	= fgetc
-2.916454	= fopen
-2.916454	= fread
-2.916454	= function
-2.314394	= g	-0.5642715
-2.916454	= getch
-2.439333	= getchar	0
-2.916454	= getopt
-2.314394	= gln	-0.39794
-1.962211	= h	-0.5304953
-2.615424	= his
-1.916454	= i	-0.2460459
-1.916454	= j	-0.261102
-2.217484	= k
-2.314394	= l
-2.916454	= lv
-2.071356	= m	-0.1150938
-2.615424	= malloc	0
-2.138303	= n	-0.6520711
-2.916454	= new
-2.916454	= nk
-2.439333	= not	-0.3698528
-1.770326	= o	-0.3706659
-2.916454	= op
-2.013364	= p	-0.5404639
-2.615424	= pow	0
-2.916454	= pyl
-2.314394	= q	-0.5812099
-2.314394	= r	-0.2596373
-2.916454	= rand
-2.916454	= read
-2.314394	= realloc	0
-2.916454	= round
-2.138303	= s	-0.1436392
-2.439333	= sizeof	0.243038
-2.916454	= sqrt
-2.916454	= system
-2.138303	= t	-0.4198946
-2.916454	= tmpfile
-2.013364	= trp	-0.3802113
-1.916454	= u	-0.849614
-2.615424	= unk	-0.39794
-1.802511	= v	-0.465426
-2.916454	= window
-1.837273	= x	-0.2253093
-2.916454	= xle
-1.916454	= y	-0.2377255
-2.138303	= z	-0.4339643
-1.962211	= {
-1.431364	== '\n'	0
-1.732394	== (
-1.732394	== *
-1.431364	== -
-1.732394	== 0
-1.732394	== 1
-1.431364	== 10
-1.732394	== 2
-1.732394	== 27
-1.732394	== 275
-1.732394	== 276
-1.431364	== 3
-1.732394	== 32
-1.431364	== 35
-1.732394	== 4
-1.431364	== 5	-0.2678617
-1.732394	== 6
-1.732394	== 8
-1.732394	== 81
-1.732394	== 9
-1.732394	== 92
-1.732394	== </s>
-1.732394	== B
-1.431364	== D
-1.431364	== NULL	0
-1.431364	== T	-0.4016205
-1.130334	== a	-0.2873287
-1.732394	== arg
-1.255273	== b	-0.4606271
-1.431364	== c
-1.732394	== cys
-1.732394	== gln
-1.431364	== n
-1.732394	== not
-1.732394	== r
-1.431364	== u
-1.732394	== ~
-1.217484	> (
-1.819544	> ->
-0.9744459	> 0	-0.1302697
-1.819544	> 1
-1.819544	> 12
-1.819544	> 1600
-1.819544	> 197
-1.342423	> 2	-0.3178435
-1.819544	> 20
-1.819544	> 255
-1.819544	> 3
-1.819544	> 30
-1.819544	> 31
-1.819544	> 32
-1.518514	> 4
-1.518514	> 5
-1.819544	> 55
-1.819544	> 6
-1.819544	> 64
-1.819544	> 7
-1.819544	> 76
-1.518514	> 9
-1.819544	> 92
-1.819544	> <
-1.518514	> </s>
-1.819544	> B
-1.819544	> BUFSIZ
-1.819544	> F
-1.819544	> H
-1.819544	> I
-1.819544	> Q0
-1.518514	> QQ	-0.30103
-1.819544	> _
-1.819544	> bs
-1.819544	> c
-1.819544	> d_C
-1.819544	> e
-1.819544	> glu
-1.819544	> h
-1.518514	> i
-1.819544	> l
-1.819544	> lrand48
-1.819544	> p
-1.819544	> q
-1.819544	> s
-1.819544	> t
-1.819544	> v
-1.819544	> w
-1.819544	> x
-0.845098	>= (
-0.544068	>= 0
-0.845098	>= 2
-0.845098	>= LINES
-0.845098	>= Q
-0.845098	>= d
-1.238882	>> (
-1.716003	>> ++
-1.716003	>> 12
-1.414973	>> 14	0
-1.238882	>> 2	-0.3178435
-1.716003	>> 20
-1.716003	>> 28
-1.716003	>> 3
-1.414973	>> 31	0.1249388
-1.414973	>> 32	-0.4393327
-1.716003	>> 38
-1.414973	>> 4
-1.238882	>> 40	-0.1760913
-1.716003	>> 5
-1.716003	>> 56
-1.414973	>> 6
-0.7160034	>> 8	-0.4660557
-1.238882	>> </s>
-1.414973	>> a	-0.452139
-1.716003	>> f
-1.716003	>> lys
-1.716003	>> n
-1.414973	>> s
-1.716003	>> u
-1.414973	>> unk	-0.1760913
-1.414973	>> z	-0.1989541
-0.4771213	>>= 4
-0.4771213	>>= 7
-0.4771213	>>= e
-2.056905	? !
-1.755875	? ""	-0.3309932
-2.056905	? ";"
-2.056905	? "{;}"
-2.056905	? "}$"
-1.755875	? &
-2.056905	? '
-2.056905	? '|'
-1.357935	? (
-1.278754	? *
-2.056905	? ++
-1.579784	? --	-0.4227636
-1.102662	? 0	-0.9713941
-1.579784	? 1	-0.5924619
-2.056905	? 124
-2.056905	? 1l
-2.056905	? 255
-2.056905	? 256
-1.755875	? 3
-2.056905	? 32
-2.056905	? 8
-2.056905	? 9858122
-1.755875	? </s>
-1.755875	? D
-1.755875	? E	-0.3732251
-2.056905	? F
-2.056905	? FILENAME_MAX
-1.755875	? G	0.1127043
-2.056905	? H
-2.056905	? H_1
-1.755875	? I	-0.4618813
-1.755875	? L	-0.452119
-1.755875	? O
-2.056905	? RGB
-2.056905	? S
-1.579784	? T	-0.4124784
-2.056905	? U
-2.056905	? _k
-2.056905	? a
-1.755875	? d
-2.056905	? e
-1.755875	? g
-1.579784	? glu	-0.4471581
-2.056905	? h
-1.579784	? i	-0.4724006
-1.579784	? k
-1.357935	? n
-1.579784	? o	-0.5190858
-1.755875	? p
-2.056905	? q
-2.056905	? r
-1.755875	? s
-2.056905	? strlen
-2.056905	? t
-1.211807	? v	-0.4667709
-2.056905	? w
-1.755875	? x
-2.056905	? ~
0	?" "8!@dP,!!o+fb"
-1.10721	A )	-0.09200267
-1.80618	A +
-1.80618	A +=
-0.9610819	A ,	-0.1246829
-1.80618	A -
-0.90309	A ->	-0.772399
-0.60206	A ;	-0.15977
-1.80618	A </s>
-0.90309	A =	-0.5675609
-1.80618	A J
-1.80618	A L
-1.80618	A R
-0.6922366	A [	-0.7881907
0	Acce </s>
0	Alan Turing
-0.819544	B &	-0.07826789
-1.518514	B &&
-0.7781513	B (	-0.4311413
-0.9744459	B )	-0.6756651
-1.120574	B +	-0.6818696
-1.217484	B ,
-0.916454	B ->	-0.772399
-1.819544	B :
-1.120574	B ;	-0.03994921
-1.819544	B </s>
-1.217484	B =
-1.819544	B ==
-1.819544	B J
-1.819544	B L
-1.120574	B R	-0.4692959
0	BUFSIZ )
-1.414973	C &
-0.6368221	C (	-0.5756295
-1.017033	C )	-0.2680939
-1.238882	C *	-0.473957
-1.414973	C +
-1.716003	C +=
-1.113943	C ,
-1.414973	C -
-1.414973	C /	-0.4373541
-1.716003	C :
-1.238882	C ;
-1.716003	C <
-1.414973	C =
-1.414973	C ==
-1.113943	C >
-1.716003	C J
-1.716003	C R
-1.716003	C [
-1.716003	C ^
-1.716003	C a
-1.716003	C p
-0.30103	COLS -
-0.30103	COLS /
-1.69897	D %
-1.09691	D &&	-0.111492
-1.221849	D (
-1.39794	D )
-1.221849	D +
-1.69897	D ,
-1.69897	D -=
-1.69897	D ;
-1.39794	D </s>
-0.9208187	D =	-0.1691933
-1.69897	D ?
-1.69897	D L
-1.09691	D [	-0.2941088
-1.69897	D ]
-0.9208187	D c	-0.4164234
-0.9208187	D d	-0.4324716
-1	D e	-0.6838626
-1.39794	D f
0	DefaultGC (
0	DefaultVisual (
0	Display *
-1.070038	E (	-0.2987519
-1.070038	E )
-0.6720979	E *	-0.6550477
-1.672098	E *=
-1.672098	E +
-1.371068	E ++
-1.672098	E +=
-0.8939466	E ,	-0.1732924
-0.8269998	E ;	-0.5847609
-1.672098	E </s>
-0.6720979	E =	-0.1506701
0	E0 (
0	E3 (	-0.4689299
-0.3424227	EOF )	-0.1482432
-1.041393	EOF +
-0.7403627	EOF ;
-0.5642715	EOF ]	-0.550317
0	EX (
-1.352183	F %
-1.352183	F &
-0.5392691	F (	-0.3514751
-1.653213	F )
-1.176091	F *	-0.4409776
-1.653213	F +
-0.8750613	F ,	-0.1676399
-0.9542425	F -	-0.6235996
-1.653213	F /
-1.653213	F :
-1.653213	F ;
-1.352183	F <
-0.8750613	F =
-1.653213	F >>
0	F0 (	-0.4592302
0	F1 (	-0.4592302
0	F2 (
0	FILE *	-0.3907877
0	FILENAME_MAX :
0	FV (
-0.30103	F_ )
-0.30103	F_ ,
-0.1290947	G (	-0.2745421
-1.544068	G )
-1.544068	G ,
-0.69897	G [
-1.50515	H %
-1.50515	H &
-1.80618	H (
-1.50515	H )
-1.028029	H *	-0.1575736
-1.80618	H +
-1.80618	H ++
-0.90309	H ,	-0.1747873
-1.50515	H -
-1.80618	H --
-1.329059	H /
-0.6922366	H ;	-0.615318
-1.80618	H <
-1.80618	H </s>
-1.80618	H <<
-0.8519375	H =
-1.80618	H >>
-1.50515	H ?
-1.80618	H C
-1.80618	H R
-1.50515	H ]	-0.3415636
-1.80618	H char
-1.80618	H long
-1.80618	H short
0	HP (
0	HY (
0	H_1 )
-1.763428	I &
-0.6494846	I (	-0.1548046
-1.286307	I )	-0.4035158
-1.763428	I *
-1.286307	I +
-1.763428	I ++
-1.462398	I ,
-1.462398	I -	-0.4726821
-1.462398	I :
-1.064458	I ;	-0.03994921
-0.763428	I =
-1.161368	I ==
-1.763428	I ?
-1.161368	I H
-1.763428	I [
-1.763428	I char
-1.763428	I int
-1.763428	I jmp_buf
-1.763428	I long
-1.763428	I void
-0.30103	J (	-0.1448278
-1.447158	J ,
-1.447158	J ;
-1.146128	J </s>
-1.146128	J =
-0.748188	J [
-1.447158	J l
-1.146128	J }
-1.50515	K !=	-0.4288166
-1.80618	K %
-0.7647873	K (	-0.5322864
-0.90309	K )	-0.6263748
-1.80618	K *
-1.50515	K ++
-1.80618	K +=
-1.20412	K ,
-1.80618	K -
-0.575731	K ->	-0.5446118
-1.20412	K ;	-0.1191304
-1.80618	K <
-1.50515	K </s>
-0.9610819	K =	-0.1424274
-1.50515	K ?
0	KrgR'8@c]!%-q9V.3fa[E8X%dY'w!#H <P~6"
-2.155336	L %=
-1.678215	L (
-1.201094	L )	-0.120463
-1.076155	L *	-0.2588484
-1.854306	L +
-2.155336	L ++
-0.4477659	L ,	-0.7537344
-1.252246	L -	-0.1374185
-2.155336	L ;
-2.155336	L <
-2.155336	L </s>
-1.553276	L =
-1.854306	L ==
-2.155336	L >
-1.854306	L >>
-2.155336	L >>=
-2.155336	L ?
-2.155336	L T
-2.155336	L [
-1.377185	L ]	-0.6829426
-2.155336	L a
-1.113943	L d	-0.8917102
-1.310238	L e	-0.6922365
-1.553276	L f
-2.155336	L m
-2.155336	L n
-1.201094	L t	-0.154097
-0.4771213	LINES -
-0.4771213	LINES ;
-0.4771213	LINES ||
0	LP (
0	L_tmpnam )
-1.556303	M &&
-0.4771213	M (	-0.2783776
-1.079181	M )
-1.556303	M *=
-1.556303	M +=
-0.9542425	M ,
-1.556303	M -=
-1.556303	M .
-1.255273	M ;
-1.556303	M <
-1.255273	M </s>
-0.9542425	M =
-1.556303	M ==
-1.556303	M >
-1.556303	M qN
0	M8q;k' N_7vN
0	MJ 24
0	MK6lM L
0	McPc %
0	MkQN 77
-1.770852	N %
-1.770852	N &
-0.4284293	N (	-0.2003208
-0.9927008	N )	-0.3689342
-1.770852	N *
-1.770852	N +
-0.7294593	N ,	-1.036718
-1.293731	N ;
-1.770852	N <
-1.469822	N </s>
-1.168792	N =
-1.770852	N McPc
-1.469822	N [
-1.469822	N ]
-1.770852	N oNS
0	N4 RlMG
0	N8b %
0	N9 m
0	N9b %
0	NULL )	-0.5284545
0	NUO <
0	N_1' 5
0	N_7vN 'nSM8
-1.681241	O %
-1.982271	O &
-1.982271	O &&
-0.8361432	O (	-0.3453244
-0.9408786	O )	-0.2385183
-1.982271	O *
-1.380211	O +
-1.50515	O ++
-1.380211	O ,
-1.50515	O --	-0.3716111
-1.681241	O ->
-1.982271	O 8
-1.50515	O :
-1.283301	O ;	-0.1718748
-1.50515	O <	-0.4676454
-1.681241	O </s>
-0.60206	O =	-0.4045228
-1.681241	O ?
-1.982271	O G
-1.982271	O Q
-1.982271	O S
-1.982271	O ^
-1.982271	O ckQaOrON
-1.982271	O j
-1.982271	O jQ
-1.982271	O sM
-1.982271	O {
-1.982271	O ~
-0.4149733	O0 +=	-0.3818532
-1.113943	O0 ,
-0.5118834	O0 -	-0.2980756
-0.6368221	O0 =
-0.845098	O1 )
-0.845098	O1 *
-0.544068	O1 ,
-0.845098	O1 =
-0.845098	O1 >
-0.845098	O1 ]
-0.845098	O2 *
-0.845098	O2 ,
-0.845098	O2 -
-0.845098	O2 /
-0.544068	O2 =
-0.845098	O2 >
-0.4771213	O3 )
-0.7781513	O3 -
-0.7781513	O3 /
-0.7781513	O3 </s>
-0.7781513	O3 =
0	O3NF (
-0.39794	O4 *
-0.69897	O4 +
-0.69897	O4 =
-0.69897	O4 |
-0.4771213	O5 )
-0.7781513	O5 +
-0.4771213	O5 ,
-0.7781513	O5 [
-0.60206	O6 +
-0.30103	O6 ,
-0.60206	O6 =
-0.60206	O7 )
-0.60206	O7 ,
-0.60206	O7 =
-0.60206	O7 Q
-0.4771213	O8 *
-0.4771213	O8 +
-0.4771213	O8 =
-0.1760913	O9 --
-0.4771213	O9 =
0	OMQ ]
0	OMaMch &
0	OMp RmPQ
0	ON8r %
-0.7781513	OO )
-1.079181	OO +=
-0.7781513	OO ,
-0.7781513	OO -
-1.079181	OO <
-0.7781513	OO =
-1.079181	OO ==
-1.079181	OO >
0	O^ln ;b'
-0.9542425	O_ &
-0.05115252	O_ (	-0.4204154
-0.1249387	O_o )
-0.60206	O_o ,
0	OaaD %
0	Ok </s>
0	On %
0	OsR _
-0.5642715	P (	-0.1639124
-0.5295093	P )	-0.3413678
-1.643453	P +=
-1.166331	P ,
-1.342423	P 1	-0.357685
-1.166331	P ;	-0.2952217
-1.342423	P =
-1.643453	P >=
-1.643453	P M
-1.643453	P U
-1.643453	P [
-1.643453	P _d
-1.643453	P _i
-1.643453	P i
-1.643453	P q
-0.5467572	Q (	-0.2893971
-0.8293038	Q )	-0.360772
-1.908485	Q *
-1.607455	Q ,
-1.908485	Q -
-1.431364	Q ;	-0.4201605
-1.607455	Q </s>
-1.908485	Q <=
-1.209515	Q =
-1.908485	Q O
-1.908485	Q OO
-1.908485	Q Ok
-1.908485	Q Q4
-1.063387	Q [	-0.8801807
-1.005395	Q ]
-1.130334	Q ^
-1.908485	Q __
-1.908485	Q _k
-1.908485	Q main
-1.607455	Q write	0
-1.908485	Q x
-1.079181	Q0 &&
-0.7781513	Q0 )
-0.60206	Q0 +
-0.7781513	Q0 +=
-1.079181	Q0 ,
-0.60206	Q0 =	-0.4293118
-0.7781513	Q1 )
-0.4771213	Q1 ,
-0.30103	Q1 =
-0.845098	Q2 &&
-0.845098	Q2 *
-0.544068	Q2 +	-0.4330374
-0.845098	Q2 ,
-0.544068	Q2 =
-0.7781513	Q3 %
-0.4771213	Q3 ,	-0.4757241
-0.4771213	Q3 =
-0.7781513	Q3 >>
-0.60206	Q4 &&
-0.60206	Q4 ,
-0.60206	Q4 --
-0.60206	Q4 =
-0.60206	Q5 +
-0.30103	Q5 ,
-0.60206	Q5 =
-0.60206	Q6 +=
-0.60206	Q6 ,
-0.60206	Q6 </s>
-0.60206	Q6 =
-0.60206	Q7 )
-0.60206	Q7 ;
-0.60206	Q7 =
-0.60206	Q7 O
-0.4771213	Q8 ,
-0.4771213	Q8 ;
-0.4771213	Q8 =
-0.30103	Q9 ,
-0.30103	Q9 =
0	QH (
0	QL (
-0.7781513	QO &&
-0.60206	QO *
-1.079181	QO +
-0.7781513	QO ,
-0.4771213	QO =
-0.4771213	QQ )
-0.9542425	QQ *
-0.4771213	QQ +	-0.4179299
-0.9542425	QQ ,
-0.9542425	QQ =
0	QR (	-0.4592302
0	QS (	-0.4592302
0	Q_ (	-0.1751164
0	Qr h
-1.447158	R !
-1.20412	R %	-0.1008481
-1.271067	R (
-0.3864602	R )	-0.6164578
-1.572097	R *
-2.049218	R +
-2.049218	R ++
-2.049218	R +=
-1.271067	R ,	-0.4595668
-1.572097	R --	-0.5477024
-2.049218	R ;
-2.049218	R <
-1.271067	R </s>
-2.049218	R =
-2.049218	R A
-1.748188	R D
-1.447158	R K	-0.6170659
-2.049218	R N
-2.049218	R ]
-1.748188	R a
-2.049218	R c
-1.748188	R g
-2.049218	R i
-1.572097	R j	-0.4488316
-2.049218	R k
-2.049218	R l
-2.049218	R n
-2.049218	R o
-2.049218	R s
-1.748188	R v
0	R8 /
0	RAFT )
0	RGB )
0	RI4 4
0	RM ;
0	RMPmSk U
0	RP (
0	RlMG /
0	RmM </s>
0	RmPQ O
0	RootWindow (
-1.643453	S (
-1.041393	S )
-1.342423	S +
-0.9444827	S ,
-1.643453	S :
-0.60206	S ;	-0.2813225
-1.166331	S =
-1.342423	S ?	-0.4655394
-1.643453	S [
-0.6892102	S ]	-0.8396692
-1.643453	S d
-1.643453	S j
-1.643453	S s
-1.643453	S u
-1.643453	S {
0	SDL_AudioSpec bu
0	SDL_BlitSurface (
0	SDL_CreateRGBSurface (
0	SDL_Delay (
0	SDL_Event bE
0	SDL_FillRect (
0	SDL_Flip (
0	SDL_Init (
0	SDL_LoadWAV (
0	SDL_MixAudio (
0	SDL_OpenAudio (
0	SDL_PauseAudio (
0	SDL_PollEvent (
0	SDL_Rect </s>
0	SDL_SetVideoMode (
0	SDL_Surface *
0	SEEK_SET )	-0.3472752
0	SNH %
0	SOPm R8
0	SPEED *
0	Sec -
0	SlM90 %
0	So long
-1.496007	T (
-1.371068	T )
-1.973128	T *
-0.7970366	T ++	-0.30103
-1.973128	T +=
-1.194977	T ,	-0.1714163
-1.672098	T -
-1.496007	T --	-0.4597472
-1.274158	T :	-0.3856188
-1.274158	T ;	-0.6904957
-1.672098	T <
-1.194977	T </s>
-0.8591845	T =	-0.3267495
-1.274158	T ==	-0.188425
-1.973128	T I
-1.973128	T Q
-1.973128	T R
-1.194977	T [	-0.1495477
-1.973128	T ]
-1.973128	T _
-1.371068	T d	-0.6459415
-1.973128	T f
-1.371068	T l	-0.6416172
-1.973128	T mR
-1.973128	T {
-1.973128	T |
0	TIMESTEP ,
0	TIOCGWINSZ ,
0	TMP_MAX )
0	TmS </s>
0	TmSt 6
0	Turing (
0	Type =
-1.371068	U (
-1.371068	U )
-1.672098	U *=
-1.672098	U +
-1.672098	U +=
-0.8939466	U ,
-1.672098	U 7
-0.4168254	U ;	-0.381259
-1.672098	U </s>
-0.9731278	U =
-1.672098	U L
-1.672098	U i
-1.194977	U int	-0.4301247
-1.371068	U j	-0.3860408
-1.672098	U l
-1.672098	U u
0	UV_DROP :
0	Uint8Array (
0	Upgrade :
-1.041393	V !
-1.740363	V )
-0.7861202	V *	-0.2156889
-1.263241	V ,
-1.740363	V ->
-1.439333	V ;
-1.740363	V </s>
-1.138303	V =
-1.138303	V F	-0.5509075
-1.740363	V _b
-1.740363	V _c
-1.740363	V _f
-1.138303	V a
-1.740363	V b
-1.740363	V c
-1.439333	V d
-1.439333	V e
-1.740363	V f
-1.740363	V i
-1.740363	V j
-1.740363	V n
-1.439333	V o
-1.740363	V p
-1.740363	V r
-1.740363	V w
-1.740363	V y
-1.439333	V z	-0.1989541
-0.4158516	W (	-0.2540446
-0.916454	W )	-0.1034962
-1.518514	W *	-0.4544713
-1.694605	W +
-1.995635	W +=
-1.217484	W ,	-0.4705622
-1.518514	W -	-0.4104198
-1.393575	W --	-0.4965498
-1.518514	W /
-0.8816918	W ;	-0.4007562
-1.995635	W </s>
-1.518514	W =
-1.995635	W ==
-1.150537	W R	-0.3357921
-1.995635	W S
-1.995635	W ]
-0.30103	WebSocket (
-0.30103	WebSocket -
0	Window u
-1.819544	X !=
-1.518514	X (
-0.6434527	X )	-0.3117241
-1.518514	X *
-1.342423	X +
-0.6734159	X ,	-0.07540271
-1.819544	X --
-1.217484	X ;	-0.1191304
-1.041393	X </s>
-0.9744459	X =	-0.1376226
-1.518514	X S	-0.3521825
-1.041393	X [	-0.1726445
-1.819544	X ]
-1.819544	X h
-1.819544	X v
0	XCheckWindowEvent (
0	XCreateImage (
0	XCreateSimpleWindow </s>
0	XEvent M
0	XImage *
0	XLookupKeysym (
0	XMapWindow (
0	XOpenDisplay (
0	XPutImage (
0	XSelectInput (
-1.025306	Y (	-0.6680319
-1.122216	Y )	-0.4722139
-1.247155	Y *
-1.724276	Y *=
-1.423246	Y +	-0.4179299
-1.724276	Y +=
-1.122216	Y ,
-1.724276	Y -
-1.423246	Y ->
-0.8791778	Y ;	-0.7211905
-0.6828832	Y =	-0.1840151
-1.423246	Y S	-0.4357286
-0.7700334	Y [	-0.4505777
-1.724276	Y a
-0.8692317	Z (	-0.2136574
-1.267172	Z )	-0.3472752
-1.267172	Z *=
-1.568202	Z +
-1.267172	Z +=
-0.8692317	Z ,	-0.2119727
-1.568202	Z -
-1.568202	Z -=
-0.8692317	Z ;	-0.5101045
-0.7900504	Z =	-0.1648934
-1.568202	Z ?
-1.568202	Z W
-1.568202	Z e
-1.568202	Z g
-1.568202	Z h
-1.568202	Z k
-1.568202	Z n
-1.801061	[ (
-1.624969	[ *	-0.456129
-2.403121	[ +
-1.227029	[ -	-0.3028663
-1.403121	[ 0	-1.023736
-2.403121	[ 01
-1.080901	[ 1	-1.212057
-2.403121	[ 17
-1.500031	[ 2	-0.9016591
-2.403121	[ 204
-1.403121	[ 3	-0.90309
-2.403121	[ 36
-1.361728	[ 4	-1.003461
-1.704151	[ 5	-0.6616457
-2.403121	[ 516
-2.403121	[ 5200
-1.925999	[ 6	-0.5537553
-2.403121	[ 65536
-2.102091	[ 7	-0.4033351
-1.925999	[ 8	-0.5679802
-2.403121	[ 80
-2.403121	[ 9
-2.102091	[ 97	0
-2.403121	[ 99
-2.403121	[ 9999
-1.704151	[ </s>
-2.403121	[ B
-2.102091	[ EOF	-0.3388186
-2.102091	[ H	-0.463333
-1.500031	[ L	-0.4073533
-2.102091	[ O	-0.4586379
-2.403121	[ Q6
-2.102091	[ W	-0.4637573
-2.102091	[ X
-1.500031	[ ]	-0.7412202
-2.403121	[ _Q
-2.403121	[ a
-2.403121	[ bi
-2.102091	[ c
-1.558022	[ d	-0.2329377
-2.403121	[ e
-2.403121	[ f
-1.704151	[ g	-0.632626
-1.925999	[ h	-0.5815384
-1.448878	[ i	-0.9251169
-1.624969	[ j	-0.7328283
-1.624969	[ k	-0.2863067
-2.102091	[ l
-2.102091	[ leu	-0.1760913
-2.102091	[ m	-0.4618813
-1.801061	[ n	-0.2941363
-2.102091	[ not
-2.403121	[ o
-1.801061	[ optind	-0.2218488
-1.925999	[ p	-0.4662179
-2.102091	[ r
-2.403121	[ s
-2.102091	[ t
-2.403121	[ tgANs
-2.102091	[ u	-0.4627631
-1.500031	[ v	-0.8085338
-2.403121	[ val
-2.102091	[ x
-1.060698	[ xor	-1.070243
-2.102091	[ y
-2.102091	[ ~
0	[-d] file1
0	\"" "%s"
0	\n\t" ,
-1.838849	] !=	-0.2527253
-2.139879	] %
-1.963788	] &	-0.4697601
-2.440909	] &&
-2.440909	] '2O
-2.440909	] '_3a
-2.139879	] (
-0.9223952	] )	-0.5149923
-1.595811	] *	-0.1445488
-2.139879	] *=	-0.4564367
-1.486667	] +
-1.963788	] ++
-1.595811	] +=	-0.3133558
-0.9495474	] ,	-0.2480136
-1.838849	] -
-2.440909	] --
-2.139879	] -=
-1.361728	] .	-1.045228
-2.440909	] 0
-2.440909	] 6
-1.741939	] :	-0.1528726
-0.9495474	] ;	-0.2540239
-2.440909	] <
-1.595811	] </s>
-2.440909	] <<
-0.5716774	] =	-0.4663282
-1.838849	] ==	-0.2846396
-1.963788	] >
-2.440909	] >=
-2.139879	] >>
-2.440909	] ?
-2.440909	] OsR
-2.440909	] [
-2.440909	] ]
-1.963788	] ^
-2.440909	] _o
-2.139879	] g	-0.469822
-2.440909	] h
-2.440909	] k
-2.440909	] k_
-2.440909	] l
-2.440909	] l_
-1.963788	] |
-2.440909	] |=
-2.440909	] }
-1.612784	^ %
-1.612784	^ 'h(Q]0h#
-1.311754	^ (
-1.612784	^ )
-1.612784	^ *
-1.612784	^ -
-1.612784	^ --
-1.612784	^ /
-1.612784	^ 024
-1.612784	^ 0xfc0
-1.612784	^ 10
-1.311754	^ 2
-1.612784	^ 20
-1.612784	^ 255
-1.612784	^ 3
-1.612784	^ 35
-1.612784	^ 3920
-1.612784	^ 4
-1.612784	^ 40
-1.311754	^ 6
-1.612784	^ 61
-1.612784	^ 9
-1.612784	^ I
-1.612784	^ OaaD
-1.612784	^ d
-1.612784	^ f
-1.612784	^ h
-1.311754	^ k
-1.135663	^ l
-1.612784	^ og
-1.135663	^ p	-0.5526984
-1.612784	^ t
-1.612784	^ ~
-0.69897	^= *
-0.69897	^= 20
-0.69897	^= _
-0.69897	^= k
-0.69897	^= y
-2.071882	_ %
-0.5155795	_ (	-0.6558936
-0.9927008	_ )	-0.4849792
-1.770852	_ *
-2.071882	_ +
-2.071882	_ ++
-1.469822	_ ,
-2.071882	_ -
-2.071882	_ /
-2.071882	_ 6
-1.770852	_ :
-1.594761	_ ;
-1.293731	_ </s>
-1.372912	_ =	-0.2154853
-2.071882	_ >>
-1.770852	_ ?
-2.071882	_ C
-2.071882	_ E
-2.071882	_ N
-2.071882	_ O
-2.071882	_ [
-2.071882	_ ^=
-2.071882	_ _8
-1.770852	_ a
-1.469822	_ b	-0.2760477
-2.071882	_ c
-2.071882	_ d
-1.594761	_ f	-0.4695019
-2.071882	_ g
-1.770852	_ n	-0.4147102
-2.071882	_ o
-1.770852	_ p
-2.071882	_ pQaM8m
-1.770852	_ r
-1.168792	_ s	-0.7968518
-2.071882	_ v
-1.770852	_ w
-2.071882	_ {
0	_){putchar(_);}O" "\40main(){O"
-0.9542425	_0 &&
-0.9542425	_0 )
-0.6532125	_0 *
-0.9542425	_0 +=
-0.9542425	_0 ,
-0.9542425	_0 /
-0.6532125	_0 =	-0.4293118
0	_8 (
0	_KK3 +
-0.69897	_O %
-1	_O %=
-0.69897	_O )	-0.4678741
-1	_O +
-1	_O +=
-0.69897	_O =
-1	_O >
-0.5228788	_Q %	-0.4684351
-1	_Q )
-0.69897	_Q +=
-1	_Q /
-1	_Q </s>
-0.69897	_Q =
0	_Zadat57 <
-0.9294189	__ &	-0.4584792
-1.230449	__ &&
-0.9294189	__ )
-1.230449	__ *
-1.230449	__ +
-0.9294189	__ +=	-0.4357286
-1.230449	__ ,
-1.230449	__ ;
-1.230449	__ </s>
-1.230449	__ <<
-0.9294189	__ =
-1.230449	__ >>
-1.230449	__ >>=
0	__LINE__ *
-0.30103	__STDC_VERSION__ &&
-0.30103	__STDC_VERSION__ >
-0.30103	__STDC__ )
-0.30103	__STDC__ </s>
0	__TIME__ ;
-0.30103	_a %
-0.30103	_a </s>
0	_b (
0	_c (
0	_d (
-0.30103	_f (
-0.30103	_f </s>
0	_h *
0	_i (
-0.30103	_k (
-0.30103	_k :
0	_o ptj9
0	_t <
0	_z (
-2.206826	a %
-2.206826	a %=
-1.604766	a &
-2.206826	a &&
-2.206826	a &=
-1.206826	a (	-0.1467106
-0.9515533	a )	-0.08853424
-1.252583	a *	-0.6363368
-1.905796	a *=
-1.604766	a +
-1.905796	a ++	-0.4001615
-2.206826	a +=
-1.092883	a ,	-0.05110556
-1.507856	a -	-0.2068716
-1.905796	a --
-1.428675	a ->	-0.6966782
-2.206826	a .
-1.729705	a /	-0.4548449
-2.206826	a /=
-1.127645	a ;	0.05696082
-1.729705	a <	-0.4676454
-1.252583	a </s>
-2.206826	a <<
-0.9515533	a =	-0.1870076
-1.604766	a >>
-1.604766	a L	-0.5672979
-1.905796	a S
-1.905796	a W
-2.206826	a X
-1.905796	a Z
-1.252583	a [	-0.3328774
-1.507856	a ]	-0.08629106
-2.206826	a {
-1.729705	a |
0	a_ (
0	abs (	-0.4588918
0	ageX -
-0.544068	ala *	-0.4731623
-0.845098	ala ;
-0.845098	ala asn
-0.3679768	ala not	-0.4405275
-0.1890562	and )	-0.3745493
-1.230449	and *
-1.531479	and ;
-1.531479	and asp
-1.531479	and gln
-1.230449	and his	-0.2340832
-1.531479	and pyl
-1.531479	and sec
-1.531479	and tla
-1.531479	and tyr
-1.531479	and xle
-0.09691001	arg )
-0.69897	arg =
-0.60206	argh )
-0.30103	argh ,
-0.60206	argh ;
-1.113943	asn ,
-0.07255067	asn .	-0.8405344
-1.113943	asn ;
-0.1760913	asp -	-0.4741669
-0.4771213	asp =
-0.60206	asx )
-0.60206	asx +
-0.60206	asx =
-0.60206	asx >
0	ay </s>
-1.361728	b !	-0.3250486
-2.206826	b %
-2.206826	b &
-1.905796	b &&
-1.604766	b (
-1.252583	b )	-0.1198386
-2.206826	b *
-1.905796	b *=
-2.206826	b +
-2.206826	b ++
-1.206826	b ,	-0.1478706
-1.905796	b --
-1.428675	b ->	-0.409221
-2.206826	b .
-0.976377	b ;	-0.3453059
-1.729705	b <
-1.361728	b </s>
-1.729705	b <<	-0.4616091
-0.9280723	b =	-0.1818436
-2.206826	b >
-1.905796	b >>
-1.729705	b ?
-1.428675	b B	-0.7737421
-2.206826	b D
-1.428675	b I	-0.446087
-2.206826	b O
-2.206826	b P
-1.507856	b W	-0.1900014
-1.361728	b X	-0.1047354
-2.206826	b Z
-1.206826	b [	-0.9623673
-1.905796	b ]
-1.729705	b ^
-1.604766	b bf	-0.3187588
-2.206826	b bg
-2.206826	b bt
-2.206826	b h
-2.206826	b j
-2.206826	b kg
-2.206826	b n
-2.206826	b o
-1.905796	b q
-2.206826	b u
-2.206826	b ||
0	b1g (
0	b4 </s>
0	b5g (
-0.69897	bA ,
-0.69897	bA ;
-0.69897	bA <<
-0.39794	bA =	-0.4760672
-0.60206	bB )
-0.60206	bB ;
-0.30103	bB =
-0.60206	bC *
-0.60206	bC ,
-0.60206	bC /
-0.60206	bC =
-0.4771213	bD *
-0.4771213	bD ,
-0.4771213	bD =
-0.69897	bE )
-0.2218488	bE .
-0.69897	bE ;
0	b\nq(%s)\n" </s>
0	ba (
-0.7781513	bb )
-0.7781513	bb +
-0.7781513	bb +=
-0.7781513	bb ;
-0.4771213	bb =
0	bc (
-0.1760913	bd (
-0.4771213	bd </s>
-0.90309	be )
-0.60206	be ,	-0.4761903
-0.20412	be ;	-0.689782
-0.60206	bf &&	-0.5803407
-0.4771213	bf )	-0.2274245
-0.4771213	bf ;	-0.2889753
-1.079181	bf =
-0.60206	bg &&
-0.60206	bg )
-0.60206	bg ;
-0.60206	bg =
-0.1249387	bh (	-0.4735361
-0.60206	bh </s>
0	bh' l
-0.30103	bi )
-0.30103	bi ]
0	binary "
0	bj (	-0.5938686
-0.60206	bk &&
-0.30103	bk ,
-0.60206	bk ;
-0.1760913	bl (	-0.4461832
-0.4771213	bl }
-0.30103	bm =
-0.30103	bm ==
-0.30103	bn ,
-0.30103	bn =
-0.30103	bo )
-0.30103	bo =
0	bp (
-0.30103	bq (
-0.30103	bq }
0	br ,
-0.02632894	break ;	-0.638272
-1.230449	break H
-0.1760913	bs )
-0.4771213	bs ;
-0.7781513	bt ,
-0.4771213	bt ;
-0.4771213	bt =
-0.7781513	bt >
-0.7781513	bu *
-0.4771213	bu ,
-0.4771213	bu =
-0.7781513	bu >
-0.60206	buf )
-0.60206	buf ,
-0.60206	buf ;
-0.60206	buf [
-0.30103	bv ,
-0.30103	bv ;
0	bw ,
-0.30103	bx )
-0.30103	bx ;
-0.7781513	by ,
-0.7781513	by =
-0.30103	by ?	-0.4414057
-0.7781513	by ||
-0.69897	bz </s>
-0.69897	bz <<
-0.39794	bz =
-0.69897	bz >>
-2.060698	c "
-2.060698	c %
-2.060698	c &
-1.759668	c &&
-0.8565779	c )	-0.852699
-1.458638	c *
-1.361728	c +	-0.2133827
-1.583577	c ++
-0.9815166	c ,	-0.1145867
-1.361728	c -	-0.2022758
-2.060698	c --
-2.060698	c -=
-1.759668	c .
-2.060698	c /
-1.583577	c :	-0.4679133
-1.060698	c ;	-0.09410357
-1.759668	c <
-1.458638	c </s>
-0.7596679	c =	-0.327204
-1.458638	c ==
-2.060698	c >
-1.759668	c ?
-2.060698	c L
-2.060698	c R
-1.583577	c W
-1.759668	c Y
-2.060698	c Z
-1.759668	c ]
-1.759668	c ^
-2.060698	c |
-2.060698	c ||
-0.30103	c8 +
-0.30103	c8 7
0	c9 .
0	cN mkM
0	c_X </s>
0	c_kah%0d9`b' /
0	calloc (
-1	case 'd'
-1	case 0
-1	case 10
-1	case 123
-1	case 35
-0.69897	case 36	0
-1	case 40
-1	case 58
-1	case 61
0	cb ,
-0.1532284	char *	-0.4044246
-1.568202	char J
-1.568202	char L
-1.568202	char N
-1.568202	char O
-1.568202	char buf
-1.267172	char c
-1.568202	char o
-1.568202	char p
-1.568202	char pro
-1.568202	char ser
0	ckQaOrON epne
0	close (
-1.041393	const ala	-0.2340832
-0.4973246	const and	-0.1197991
-1.342423	const char
-1.342423	const gln
-1.041393	const his	-0.2340832
-1.041393	const not	-0.449969
-0.8653014	const pro	-0.20412
-1.041393	const ser
-1.041393	const thr
0	continue ;
0	cos (
0	cq *
0	crea "
0	curs_set (
-0.7781513	cys )
-0.4771213	cys -
-0.7781513	cys =
-0.4771213	cys >>	-0.451314
-1.064458	d )	-0.4441852
-1.541579	d *
-1.638489	d *=
-1.395451	d +	-0.1237634
-1.939519	d ++
-1.199157	d +=	-0.1635021
-0.9395192	d ,	-0.2105433
-1.541579	d -
-1.462398	d -=	-0.3877208
-2.240549	d ->
-2.240549	d .
-2.240549	d /
-1.763428	d /=
-2.240549	d 9
-1.939519	d :
-0.91833	d ;	-0.08810279
-1.939519	d <
-1.939519	d </s>
-2.240549	d <<
-2.240549	d <=
-0.860338	d =	-0.3341613
-2.240549	d ==
-2.240549	d >
-2.240549	d >=
-1.939519	d >>
-1.763428	d ?
-2.240549	d R
-1.161368	d W	-0.3265841
-1.763428	d X
-1.541579	d Y	-0.6181468
-1.939519	d [
-1.638489	d ]	-0.2817248
-2.240549	d ^
-2.240549	d xv
-1.939519	d ||
0	d2 xa6
0	d77sNOsd 8
-0.60206	d8 (
-0.60206	d8 ,
-0.60206	d8 _
-0.60206	d8 a
0	d8ak =
0	dA )
0	dB )
0	dC </s>
0	d_C f3
0	dat </s>
0	data )
0	default :
0	defined __STDC_VERSION__
0	do {	-0.551917
0	double </s>
0	dstr )	-0.4641193
0	dup (
0	dup2 (
-1.466126	e (	-0.2925077
-1.068186	e )	-0.466626
-1.591065	e *
-2.068186	e *=
-1.767156	e +
-1.223088	e +=
-1.026793	e ,	-0.1873689
-2.068186	e -
-1.767156	e -=
-0.9890046	e ->	-0.4771211
-1.591065	e .
-1.767156	e /
-2.068186	e :
-0.8129134	e ;	-0.5126895
-1.767156	e <
-1.767156	e </s>
-2.068186	e <<=
-0.8640659	e =	-0.273317
-2.068186	e >
-2.068186	e >>
-1.767156	e W
-1.767156	e Y	-0.3962981
-1.068186	e [	-0.05927747
-2.068186	e ]
-2.068186	e kf
-2.068186	e {
0	eep ,
-1.462398	efine D
-1.462398	efine E
-1.462398	efine E0
-1.462398	efine EX
-1.462398	efine F0
-1.462398	efine F1
-1.462398	efine F2
-1.462398	efine FV
-1.462398	efine H
-1.462398	efine HP
-1.462398	efine HY
-1.462398	efine I
-1.462398	efine K
-1.462398	efine LP
-1.462398	efine M
-1.462398	efine N
-1.462398	efine O
-1.462398	efine P
-1.462398	efine Q
-1.462398	efine QH
-1.462398	efine QL
-1.462398	efine R
-1.462398	efine RP
-1.462398	efine S
-1.462398	efine T
-1.462398	efine U
-1.462398	efine W
-1.462398	efine Z
-1.462398	efine break
-0.7201593	else </s>
-1.322219	else V
-1.322219	else goto
-1.322219	else z
-0.1760913	else {	-0.1272427
0	elta_u )
0	elta_v )
0	epne luelue
0	er </s>
0	err (	-0.7719399
0	errx (
0	exit (	-0.6911093
0	exp (	-0.5994555
0	extern void
-2.060698	f &
-1.583577	f &&	-0.2875833
-0.9467545	f (	-0.4014572
-0.8054253	f )	-0.1995402
-1.759668	f *
-2.060698	f +
-0.9467545	f ,	-0.1328485
-1.583577	f -	-0.4651811
-2.060698	f .
-0.9145698	f ;	0.1149528
-1.759668	f <
-2.060698	f </s>
-2.060698	f <<
-0.9467545	f =	-0.1425201
-2.060698	f ==
-2.060698	f >
-1.282547	f ?	-0.1485702
-2.060698	f EOF
-1.106455	f L	-0.9652378
-2.060698	f R
-1.759668	f X
-2.060698	f Z
-1.759668	f ]
-2.060698	f defined
-1.759668	f |	-0.4490925
-1.759668	f }
0	f3 ]
0	fabs (
0	fclose (
0	fgetc (
0	fgets (
0	file1 file2"
0	file2" ,
0	flash (
-0.845098	float </s>
-0.845098	float C
-0.845098	float I
-0.845098	float K
-0.845098	float N
-0.845098	float V
-0.845098	float a
0	float_ )
0	flu ,
0	fopen (
-0.0255541	for (	-0.6065232
-1.243038	for </s>
0	fputc (
0	fread (
0	free (	-0.2944893
0	fscanf (
0	fseek (
0	function (
0	fw )	-0.1711839
-2.079181	g %
-1.778151	g &
-2.079181	g &&
-1.380211	g (	-0.2133265
-1.30103	g )	-0.2274245
-1.079181	g *	-0.5076388
-1.60206	g *=
-1.234083	g +	-0.137662
-1.60206	g ++	-0.5672979
-1.778151	g +=
-1.234083	g ,	-0.1376766
-2.079181	g --
-1.477121	g -=
-2.079181	g /
-1.778151	g 9
-2.079181	g :
-0.7174534	g ;	-0.5777683
-1.477121	g <	-0.2947358
-2.079181	g </s>
-2.079181	g <<
-0.6478175	g =	-0.329823
-2.079181	g ==
-2.079181	g >>
-2.079181	g Q
-2.079181	g [
-2.079181	g ]
-1.778151	g ^
-2.079181	g ||
0	getC "
0	getch (
-0.1249387	getchar (	-0.5711219
-0.60206	getchar ;
0	getopt (
-0.50515	gln )	-0.5458072
-0.30103	gln ;	-0.772343
-0.90309	gln =
-1.20412	gln ==
-0.30103	glu )	-0.5458072
-0.5228788	glu :	-0.592852
-1	glu <<
-1	glu =
-0.30103	glx %
-0.30103	glx =
0	gly (	-0.8411855
0	goofy !
-0.1249387	goto O	-0.5788302
-0.60206	goto o
-1.335792	h %
-1.812913	h &
-1.812913	h &&
-1.812913	h 'lQ
-1.034762	h (	-0.7656385
-1.511883	h )
-1.335792	h *	-0.5941057
-1.812913	h *=
-1.812913	h +=
-1.210853	h ,
-1.210853	h -	-0.2860528
-1.335792	h .	-0.4402946
-1.812913	h /
-1.812913	h 9
-0.9678153	h ;	-0.3621685
-1.812913	h </s>
-0.9678153	h <<	-0.08922319
-0.7715207	h =	-0.1829307
-1.812913	h >>
-1.812913	h Q
-1.812913	h ^
-1.812913	h ^=
-1.812913	h b
-1.511883	h |
0	halting )
0	height =
-0.3679768	his )	-0.3472752
-0.845098	his ;
-0.3679768	his [	-0.4631668
0	ho )
0	href .
-1.790051	i %	-0.5889647
-1.790051	i &
-1.790051	i &&
-0.8047737	i (	-0.7289903
-1.153228	i )	-0.1365246
-1.364082	i *	-0.1137614
-2.267172	i *=
-1.48902	i +	-0.1710315
-1.790051	i ++
-1.790051	i +=
-1.063052	i ,	-0.2089495
-1.364082	i -	-0.293606
-2.267172	i --
-1.568202	i /	-0.1995724
-1.966142	i :
-1.121044	i ;	-0.009985968
-1.063052	i <	-0.1090287
-2.267172	i </s>
-0.8047737	i =	-0.1358349
-2.267172	i ==
-1.966142	i >
-1.790051	i >>
-1.790051	i ?
-1.966142	i R
-1.665112	i S	-0.5026754
-1.568202	i ]	-0.166546
-2.267172	i |
-0.01240926	if (	-0.3611594
-1.550228	if </s>
-0.69897	ile !=
-0.69897	ile +
-0.69897	ile --
-0.69897	ile ;
-0.69897	ile =
0	in tYv
0	initscr (
-1.290035	int )	-0.3004196
-1.113943	int *
-1.113943	int </s>
-1.892095	int F
-1.892095	int G
-1.892095	int H
-1.414973	int I
-1.892095	int K
-1.892095	int L
-1.892095	int M
-1.892095	int P
-1.892095	int Q
-1.591065	int X
-1.892095	int _
-1.892095	int a
-1.892095	int bk
-1.892095	int bm
-1.892095	int bs
-1.892095	int bt
-1.892095	int bw
-1.892095	int by
-1.414973	int c	-0.4292606
-1.892095	int h
-0.9890046	int i	-0.7882066
-1.591065	int j	-0.3860408
-1.414973	int k
-1.290035	int l	-0.2487567
-1.046997	int main	0.359022
-1.892095	int met
-1.892095	int o
-1.892095	int op
-1.892095	int p
-1.892095	int puts
-1.892095	int t
-1.591065	int u
-1.414973	int x	-0.3521825
-1.591065	int y	-0.4178073
0	int_ )
0	intw )
0	ioctl (
0	ipt >
-1.443263	j %	-0.5800099
-1.443263	j &&
-1.045323	j )	-0.466626
-1.744293	j *
-1.744293	j *=
-1.200225	j +	-0.3543507
-2.045323	j ++
-1.568202	j +=
-0.7665694	j ,	-0.3326871
-1.267172	j -	-0.1611141
-2.045323	j /=
-2.045323	j :
-1.09108	j ;	-0.3928753
-1.200225	j <
-1.744293	j </s>
-0.7231037	j =	-0.1952285
-2.045323	j ==
-2.045323	j >
-1.568202	j ?
-1.346353	j S	-0.5149098
-2.045323	j ]
-2.045323	j kd
0	jQ O7
0	j_la _
0	j_laaaN :
0	jmp_buf J
-1.954242	k %
-1.954242	k &
-1.653213	k (
-0.8402991	k )	-0.06338133
-1.954242	k *
-1.954242	k *=
-1.255273	k +
-1.477121	k ++	-0.4001615
-1.954242	k +=
-0.7781513	k ,	-0.3461476
-1.352183	k -	-0.2921058
-1.954242	k --
-1.954242	k -=
-1.477121	k /	-0.3802113
-1.954242	k :
-1.477121	k ;
-1.653213	k <
-1.477121	k </s>
-0.8081145	k =	-0.05692584
-1.954242	k >
-1.954242	k >>
-1.954242	k >>=
-1.954242	k R
-1.477121	k [	-0.4394887
-1.477121	k ]	-0.5827549
-1.954242	k ^
-1.954242	k ^=
-1.954242	k g
-1.954242	k |=
-1.954242	k }
0	k8b %
0	k9 b1g
0	kP8 ;
0	k_ 7
0	kccMcOP &
0	kckQ ,
0	kd 7
0	ket Sec
-0.30103	key .
-0.30103	key :
0	keysym .
0	kf _a
0	kg </s>
-1.685742	l %	-0.4318413
-1.986772	l &&
-1.384712	l (
-0.9075905	l )	-0.5043104
-1.20862	l *
-1.986772	l *=
-1.685742	l +
-1.986772	l ++
-1.384712	l +=
-0.9453791	l ,
-1.287802	l -	-0.1551473
-1.986772	l -=
-1.986772	l /
-0.8406437	l ;	-0.3503136
-1.685742	l <
-1.685742	l </s>
-1.986772	l <<
-0.8728284	l =	-0.1571269
-1.986772	l ==
-1.986772	l >
-1.986772	l >>
-1.685742	l S
-1.685742	l ]
-1.685742	l ^
-1.986772	l mq9l8b
-1.986772	l peoqemtemw
-1.986772	l v
-1.986772	l vQ
-1.986772	l |
-0.30103	lM :
-0.30103	lM ;
0	lNRmO_loa8 %
0	lQ h
0	lQoOa N9
0	l_ %
0	lea ,
-0.60206	leu ;
-0.60206	leu =
-0.30103	leu ]
0	lf )
0	location .
-1.361728	long </s>
-1.361728	long A
-1.361728	long L
-1.361728	long Q8
-1.361728	long V
-1.361728	long Z
-1.361728	long __
-1.361728	long a
-1.361728	long b
-1.361728	long c
-1.361728	long h
-1.361728	long j
-0.5166298	long long
-1.361728	long q
-1.361728	long y
-1.060698	long z	-0.4403985
0	longjmp (
0	lpeoqempepneu e
0	lrand48 (
-0.30103	lu ,
-0.30103	lu =
0	luN ]
0	luelue lpeoqempepneu
-0.1760913	lv ,
-0.4771213	lv =
0	lwg +
-0.6532125	lys )	-0.426045
-0.9542425	lys +=
-0.9542425	lys -=
-0.4771213	lys =	-0.4728894
-0.9542425	lys ==
-0.9542425	lys >=
-1.763428	m %
-1.763428	m &&
-0.91833	m (	-0.8721519
-0.9852768	m )
-1.462398	m *	-0.4691669
-1.462398	m +
-1.763428	m ++
-1.763428	m +=
-0.763428	m ,	-0.2854079
-1.763428	m -
-1.763428	m -=
-1.763428	m /
-1.763428	m :
-1.161368	m ;
-1.286307	m <
-1.462398	m </s>
-0.860338	m =	-0.1126591
-1.286307	m >
-1.462398	m [
-1.763428	m vOwwRor
-0.30103	mR RMPmSk
-0.30103	mR mS
0	mR8 }
0	mRMmO %
0	mRh ^
0	mS ]
0	mageData (
-0.02802872	main (	-1.138834
-1.20412	main </s>
0	malloc (
0	memcmp (
0	memcpy (
0	memset (
-0.4771213	met )	-0.4762053
-0.9542425	met ;
-0.9542425	met lys
-0.6532125	met main	0.7269988
-0.6532125	met val	-0.4279032
0	mkM :
0	mq9l8b ^
0	mva ,
0	mvaddstr (
0	mvinch (	-0.4662757
0	mvinsch (
-2.103804	n %
-2.103804	n &&
-1.802774	n (	-0.4461832
-0.8485312	n )	-0.2327392
-1.404834	n *
-1.325652	n +
-1.501744	n +=
-0.8485312	n ,	-0.2795849
-1.149561	n -	-0.3856972
-2.103804	n --
-1.802774	n -=
-1.802774	n /
-2.103804	n :
-0.9576757	n ;	-0.2574815
-1.501744	n <
-1.626683	n </s>
-0.8733548	n =	-0.1196091
-1.325652	n >
-1.626683	n >>	-0.4600879
-1.802774	n ?
-2.103804	n R
-1.802774	n ]
-2.103804	n ^=
-1.802774	n |
-2.103804	n |=
-2.103804	n }
0	nR ;
0	nRmUd s
0	ndif </s>
-0.30103	new Uint8Array
-0.30103	new WebSocket
0	nk ;
-1.995635	not !=
-1.995635	not &
-1.092545	not )	-0.7732439
-1.217484	not ,	-0.4738541
-1.150537	not ->	-0.8611255
-0.3828513	not .	-1.384602
-1.694605	not ;	-0.2952217
-1.393575	not =
-1.995635	not ==
-1.995635	not >
-1.995635	not >>
-0.5806618	not [	-1.384269
0	np )
-1.905796	o &
-1.252583	o )	-0.153558
-1.165433	o *
-2.206826	o *=
-1.206826	o +	-0.09185021
-2.206826	o ++
-1.729705	o +=	-0.4569179
-0.976377	o ,	-0.1204401
-1.206826	o -
-1.905796	o -=	-0.4347174
-2.206826	o /
-2.206826	o :
-0.845098	o ;	-0.5777683
-2.206826	o </s>
-0.7596679	o =	-0.2543491
-1.729705	o >	-0.4637573
-1.905796	o >>	-0.4600879
-1.905796	o W
-1.729705	o X
-0.7596679	o [	-0.5983247
-1.905796	o ]
-2.206826	o ||
0	o(O _){putchar(_);}O"
0	oM :
0	oNS &
0	ocket -
0	oec ,
0	offsetLeft ;
0	offsetTop }
0	og (
0	on :
0	onmousemove =
0	ontext (
-0.6532125	op &&	-0.4609345
-0.9542425	op )
-0.6532125	op ;
-0.4771213	op =
-0.9542425	op ^
0	open (
-0.7781513	optind )
-0.4771213	optind +	-0.4330374
-0.7781513	optind =
-0.4771213	optind ]	-0.4218185
-1.781755	p &
-1.480725	p (	-0.2987519
-1.304634	p )	-0.5458072
-1.605664	p +	-0.4720615
-1.041393	p ++	-0.8370699
-1.041393	p ,
-1.605664	p -
-2.082785	p -=
-1.605664	p /
-2.082785	p :
-0.8786654	p ;	-0.02048936
-1.480725	p <	-0.5828968
-1.781755	p </s>
-2.082785	p <=
-0.7403627	p =	-0.3856063
-1.781755	p >
-2.082785	p L
-1.605664	p S	-0.3777366
-1.605664	p W	-0.4210053
-2.082785	p X
-2.082785	p Z
-0.968842	p [	-0.4452225
-1.605664	p ]	-0.4253783
-1.781755	p ^
-2.082785	p utchar
-2.082785	p |
0	pOpM866OsRlm N
0	pQaM8m {
0	pRM7O </s>
0	pageY -
0	peoqemtemw Q7
0	phe (	-0.6914397
0	pixels ,
0	pow (	-0.47091
0	pread (
0	prin </s>
0	printf (
-0.69897	pro )
-0.2218488	pro *	-0.4731623
-0.69897	pro ;
0	pt :
0	ptj9 lwg
0	putImageData (
0	putchar (
-0.06694679	puts (
-0.845098	puts </s>
0	px TmSt
-0.30103	pyl ;
-0.30103	pyl =
-1.80618	q !=
-1.20412	q (
-1.028029	q )	-0.1751753
-1.80618	q *
-1.329059	q +
-1.20412	q ++	-0.2781671
-1.80618	q +=
-1.80618	q ,
-1.20412	q -
-1.50515	q --	-0.4597472
-0.9610819	q ;	-0.1860772
-1.20412	q </s>
-0.6922366	q =	-0.1479624
-1.80618	q ==
-1.80618	q >>
-1.80618	q N
-1.80618	q R
-1.80618	q S
-1.028029	q [
-1.80618	q ]
-1.80618	q ^
0	qN OMp
0	qQ O
-1.740363	r 'Q]
-0.8372727	r (	-0.1190565
-1.041393	r )	-0.09200267
-1.263241	r ++	-0.4342413
-1.740363	r +=
-1.138303	r ,
-1.740363	r :
-1.041393	r ;	-0.4386328
-1.439333	r </s>
-0.69897	r =	-0.2820932
-1.740363	r >>
-1.740363	r ?
-1.263241	r L
-1.740363	r RmM
-1.740363	r W
-1.439333	r X
-1.439333	r Z	-0.4002812
-1.740363	r [
-1.740363	r ]
-1.740363	r |
-0.4771213	rQ </s>
-0.4771213	rQ ]
-0.4771213	rQ rQ
0	rR pOpM866OsRlm
0	rand (	-0.4461832
0	re turnY_
0	rea ,
-0.30103	read (
-0.30103	read </s>
0	realloc (
0	refresh (
-1.217484	return (
-1.518514	return +
-1.041393	return 0	-0.3446193
-1.518514	return ;
-1.217484	return </s>
-1.518514	return Q
-1.518514	return W
-1.518514	return Y
-1.518514	return a
-1.518514	return b
-1.518514	return bb
-0.916454	return d	-0.2883675
-1.518514	return exp
-1.518514	return fclose
-1.518514	return l
-1.518514	return o
-1.518514	return p
-1.518514	return r
-1.041393	return s	-0.5620549
-1.518514	return strchr
-1.518514	return strtol
-1.217484	return u	-0.4402946
-1.518514	return y
0	rewind (	-0.4718966
0	round (
0	rror goofy
-2.09691	s %
-2.09691	s &&
-1.79588	s (	-0.4461832
-1.19382	s )	-0.369716
-1.39794	s *	-0.2138944
-1.49485	s *=	-0.2803454
-2.09691	s +
-1.79588	s ++
-1.619789	s +=
-1.19382	s ,
-1.619789	s -
-1.619789	s -=
-1.79588	s :
-1.055517	s ;	-0.1789955
-1.79588	s <	-0.4275281
-1.79588	s </s>
-2.09691	s <<
-0.7544873	s =	-0.06334727
-1.79588	s >
-2.09691	s ?
-1.142668	s L	-0.934569
-1.19382	s W	-0.3279606
-1.251812	s X	-0.2016454
-1.49485	s Y	-0.2202068
-1.619789	s Z
-1.39794	s [
-1.79588	s ]	-0.3415636
-2.09691	s d77sNOsd
-1.79588	s |
0	sM nRmUd
-0.30103	sN '
-0.30103	sN 9
0	sTaa :
0	s_4 &
0	scanf (
0	scr "
0	script >
-0.3521825	sec )	-0.4666261
-0.2552725	sec =	-0.219738
0	send (
-0.1383027	ser )	-0.2873991
-1.041393	ser ;
-1.041393	ser asx
-1.041393	ser glx
0	set (
0	setjmp (
0	shi ,
-0.30103	short *
-0.30103	short Y
0	signal (
0	sin (
0	size_t thr
-0.06694679	sizeof (	-0.213818
-1.146128	sizeof his
-1.146128	sizeof sec
0	slice (
0	slltwzh &
0	sprintf (
0	sqrt (
0	st_mtime ;
0	st_size ;
-0.1760913	stat (
-0.4771213	stat z
-0.7781513	static const
-0.07918125	static void	-0.6264194
0	stdin )
0	stdout )
0	strchr (
0	strcmp (
0	strlen (
0	strtol </s>
-0.6532125	struct T
-0.6532125	struct e
-0.9542425	struct stat
-0.3521825	struct {	-0.551917
0	style =
0	subs </s>
0	switch (
0	sym ;
-0.69897	sym_ (
-0.09691001	sym_ ,	-0.678988
0	system (
-1.908485	t %=
-1.908485	t &&
-0.9542425	t )	-0.3296492
-1.607455	t *
-1.908485	t *=
-1.431364	t +
-1.431364	t +=
-1.005395	t ,	-0.1034936
-1.607455	t -
-1.908485	t --
-1.607455	t :
-0.908485	t ;	-0.1695145
-1.306425	t <	-0.6493769
-1.908485	t </s>
-0.7323937	t =	-0.08463043
-1.908485	t ==
-1.607455	t >
-1.306425	t ?	-0.6590985
-1.607455	t L	-0.44889
-1.908485	t S
-1.209515	t [	-0.2061181
-1.908485	t |
-1.607455	t ||
0	tQ ?
0	tYv =
0	tape )
0	teI "
0	tf (
0	tgANs =
-0.90309	thr ;
-0.90309	thr cys
-0.90309	thr ile
-0.90309	thr leu
-0.90309	thr trp
-0.90309	thr val
-0.60206	thr xor
0	timeout (
-0.30103	tla ;	-0.2952217
-0.60206	tla =
-0.60206	tla ==
0	tmpfile (
0	tr (
-1	trp )
-1	trp ,
-0.154902	trp ;	-0.7179892
-1	trp =
0	turnY_ .
0	typ and
0	type ==
-1.146128	typedef </s>
-1.146128	typedef char
-1.146128	typedef int
-1.146128	typedef size_t
-0.3679768	typedef struct	-0.2218488
-1.146128	typedef typ
-1.146128	typedef union
-0.845098	typedef unsigned
-1	tyr )
-1	tyr +
-1	tyr /
-0.39794	tyr =	-0.2989192
-0.5228788	tyr [	-0.4736745
-0.8346326	u )	-0.1363337
-2.089905	u *
-2.089905	u *=
-1.487845	u +
-1.788875	u ++	-0.4301247
-1.788875	u +=
-0.9759617	u ,	-0.1483954
-2.089905	u -
-1.788875	u /	-0.4548449
-2.089905	u :
-1.089905	u ;	0.0269976
-1.487845	u <	-0.2818668
-1.788875	u </s>
-1.311754	u <<	-0.4455223
-0.9138138	u =	-0.1325878
-2.089905	u ?
-1.487845	u R
-2.089905	u S
-0.6127838	u [	-1.011017
-1.487845	u ]	-0.2930902
-2.089905	u ||
0	uU ]
0	union w
-0.30103	unk )	-0.2768876
-0.7781513	unk ;	-0.4750181
-1.079181	unk =
-0.60206	unk ]
-0.9542425	unsigned So
-0.6532125	unsigned char
-0.1760913	unsigned long	-0.5625514
0	up" )
0	upgrade </s>
0	usl ,
0	usleep (
0	utchar (
-1.963788	v !=
-1.963788	v %
-1.963788	v &
-1.361728	v )
-1.963788	v *
-1.361728	v +
-1.662758	v ++
-1.185637	v ,	-0.1718861
-0.9637879	v -	-0.6747522
-1.963788	v --
-1.264818	v -=	-0.1904403
-1.11869	v .	-0.1093014
-1.662758	v /
-1.662758	v :
-1.11869	v ;	-0.09615407
-1.185637	v <	-0.169797
-1.963788	v </s>
-1.963788	v <<
-1.662758	v <=
-0.8846066	v =	-0.1223648
-1.963788	v ==
-1.963788	v >>
-1.264818	v ?
-1.963788	v [
-1.361728	v ]	-0.5547261
-1.361728	v |	-0.6409781
0	vOwwRor ~
0	vQ ^
0	va_arg (
0	va_end </s>
0	va_list argh
0	va_start (
0	vad ,
-0.9700368	val )	-0.4035158
-1.447158	val *
-1.447158	val +
-1.447158	val +=
-0.9700368	val ,	-0.4752573
-1.447158	val -
-1.447158	val -=
-0.4057654	val ;	-0.8919331
-1.447158	val <
-1.146128	val =
-1.447158	val ==
-1.146128	val ]
-1.414973	void )
-0.7160034	void *
-0.7160034	void </s>
-1.414973	void B
-1.414973	void G
-1.414973	void P
-1.414973	void Q
-1.414973	void W
-1.414973	void e
-1.113943	void gly	0
-1.113943	void phe	0
-1.414973	void s
-1.414973	void w
-1.414973	void x
-1.414973	void y
-1.414973	void z
0	voidw (
0	volatile </s>
0	vpr ,
-0.6243364	w (	-0.4489627
-1	w )	-0.3523632
-1.30103	w *
-1.90309	w *=
-1.30103	w +=
-1.60206	w ,
-1.90309	w -=
-1.60206	w .
-1	w ;	-0.2440692
-1.90309	w </s>
-1.057992	w =	-0.142958
-1.60206	w L	-0.4423591
-1.60206	w W
-1.425969	w Z	-0.4140695
-1.90309	w [
-1.90309	w _
-1.90309	w a
-1.90309	w a_
-1.20412	w f	-0.1697511
-1.60206	w fw	0
-1.90309	w w
-1.425969	w x	-0.3521825
-1.90309	w {
0	webso "
0	while (	-0.257718
0	width =
0	window .
0	wnS _
0	world!" )
0	write (	-0.4692605
-2	x &&
-2	x (
-0.9208187	x )	0.02253333
-2	x *=
-1.39794	x +	-0.2569461
-2	x ++
-0.60206	x ,	-0.4032802
-2	x -
-0.9586073	x .	-0.9978762
-2	x /
-1.30103	x ;	-0.5170705
-1.39794	x <
-1.69897	x </s>
-2	x <<
-2	x <=
-0.7695511	x =	-0.1112092
-2	x ==
-1.69897	x >>
-1.39794	x ?
-1.522879	x [	-0.4631668
-1.69897	x ]
0	xa6 ,
0	xkey ,
-0.30103	xle ;
-0.30103	xle =
-0.8081145	xor )	-0.7714925
-1.352183	xor -	-0.4696972
-1.352183	xor ;	-0.2952217
-0.8750613	xor <	-0.7589881
-0.8081145	xor =	-0.8398017
-1.653213	xor ==
-0.3521825	xor ]	-0.3686506
0	xv SOPm
-1.973128	y !=
-0.9731278	y (	-0.2700919
-0.8939466	y )	-0.8024662
-1.274158	y +	-0.6548861
-1.973128	y ++
-1.973128	y +=
-1.12803	y ,
-1.496007	y -
-1.274158	y ->	-0.3233064
-1.672098	y .	-0.4364342
-1.973128	y /
-0.8939466	y ;	-0.2952217
-1.371068	y <
-1.973128	y </s>
-0.7426789	y =	-0.4160855
-1.973128	y ==
-1.973128	y >>
-1.274158	y [	-0.6920488
-1.973128	y ]
-1.672098	y ^
-1.973128	y ^=
-1.973128	y ||
0	yN _
-0.3251637	z (	-0.5179825
-1.568202	z )
-1.170262	z *
-1.568202	z *=
-1.170262	z +=
-1.568202	z ,	-0.4743224
-1.568202	z .
-1.09108	z ;	-0.2952217
-1.568202	z </s>
-1.869232	z <<
-1.869232	z <=
-1.09108	z =
-1.170262	z [	-0.6850156
-2.450249	{ "('A`)"
-2.450249	{ )
-1.672098	{ *	-0.2758817
-1.605151	{ .	-0.8088199
-2.450249	{ 0
-2.450249	{ 0x67452301
-2.450249	{ 8
-2.450249	{ 8000
-1.973128	{ ;
-0.5417641	{ </s>
-2.450249	{ D
-2.450249	{ Display
-2.450249	{ F
-2.149219	{ G
-2.149219	{ H	-0.411304
-2.450249	{ I
-2.149219	{ J
-1.848189	{ L	-0.2629652
-2.450249	{ M
-2.450249	{ MK6lM
-1.973128	{ O	-0.3521825
-2.450249	{ O_
-2.450249	{ Q
-1.605151	{ R	-0.3481425
-2.450249	{ S
-2.450249	{ SDL_Rect
-2.149219	{ T
-1.751279	{ U	-0.4892702
-1.605151	{ V	-0.06852318
-2.149219	{ W	-0.2668159
-2.450249	{ Z
-1.408856	{ _	-0.1578364
-2.149219	{ a	-0.4256314
-1.371068	{ b	-0.1140125
-1.973128	{ bc	0
-2.450249	{ bg
-2.450249	{ bj
-2.450249	{ by
-1.973128	{ c	-0.394147
-1.973128	{ case
-2.149219	{ char
-1.672098	{ d	-0.3949345
-2.450249	{ d2
-2.149219	{ float
-1.496007	{ for	0.2430381
-2.450249	{ g
-2.450249	{ i
-1.672098	{ if	0.7720771
-2.450249	{ in
-2.450249	{ initscr
-1.496007	{ int	-0.09786347
-1.973128	{ l	-0.4146288
-2.450249	{ m
-2.149219	{ n
-1.973128	{ o	-0.5190858
-2.450249	{ printf
-2.450249	{ puts
-2.450249	{ px
-1.848189	{ q	-0.5034502
-1.672098	{ r	-0.293061
-1.848189	{ return
-2.149219	{ s
-2.450249	{ t
-2.450249	{ timeout
-1.605151	{ u	-0.6472875
-2.450249	{ va_list
-1.848189	{ w	-0.2787536
-2.149219	{ while	0
-1.973128	{ x	-0.3961993
-2.450249	{ y
-2.149219	{ z
-2.450249	{ {
-1.751279	{ }
-1.20412	| !	-0.3865514
-0.6812412	| (	-0.08838773
-1.681241	| 4194304
-1.681241	| 8
-1.681241	| </s>
-1.681241	| O
-1.681241	| T
-1.681241	| _
-0.90309	| a	-0.2495401
-1.681241	| arg
-1.20412	| b	-0.4689525
-1.380211	| d
-1.681241	| d8ak
-1.380211	| f
-1.380211	| h
-1.079181	| i	-0.5949597
-1.380211	| k
-1.681241	| l
-1.380211	| o	-0.4716925
-1.681241	| u
-1.380211	| x
-0.1760913	|= t
-0.4771213	|= y
-0.90309	|| !
-1.380211	|| '
-0.60206	|| (	-0.1695506
-1.380211	|| *
-1.380211	|| 0
-1.380211	|| </s>
-1.380211	|| Q
-1.380211	|| bE
-1.380211	|| c
-1.380211	|| close
-1.380211	|| i
-1.380211	|| mvinch
-1.079181	|| p	-0.4625218
-1.380211	|| strchr
-1.380211	|| t
-1.380211	|| v
-2.447158	} "|~0y'vWtA@:LcO9d}y.!uL!Gd+ml(<+Ds!J"
-1.970037	} (
-1.669007	} )	-0.45104
-1.669007	} ,
-2.447158	} 0
-1.669007	} ;	-0.1708142
-2.447158	} <
-0.5333441	} </s>
-2.447158	} C
-2.447158	} D
-2.447158	} E
-2.447158	} H
-2.447158	} J
-2.146128	} L
-2.146128	} O
-1.845098	} P
-2.447158	} Q
-2.447158	} SDL_AudioSpec
-2.146128	} U
-1.405765	} V	-0.04575749
-1.970037	} W	-0.3917547
-2.447158	} X
-2.447158	} Y
-1.970037	} Z
-1.669007	} _
-2.447158	} a
-2.447158	} ala
-2.447158	} ay
-1.60206	} b	-0.2265439
-2.447158	} bc
-2.447158	} bd
-2.447158	} bh
-2.447158	} bj
-2.447158	} bl
-2.447158	} bp
-2.447158	} bq
-2.447158	} break
-2.146128	} c	-0.394147
-2.146128	} char
-2.146128	} e
-1.243038	} else	-0.2498775
-2.146128	} extern	0
-2.146128	} f
-2.447158	} flash
-2.447158	} float
-1.970037	} for	0.640978
-1.970037	} h	-0.3966017
-2.447158	} i
-1.748188	} if	0.7720771
-1.60206	} int	-0.2022018
-2.447158	} l
-2.447158	} m
-2.146128	} o
-2.447158	} putchar
-2.447158	} puts
-2.447158	} q
-2.447158	} re
-1.845098	} return
-2.447158	} stat
-2.447158	} static
-2.447158	} typedef
-1.669007	} void	-0.0833372
-2.447158	} voidw
-1.845098	} w	-0.2730013
-1.845098	} while	0
-2.447158	} z
-0.8908556	} }	-0.08686808
-1.518514	~ *
-0.7403627	~ -
-1.217484	~ </s>
-1.518514	~ M
-1.518514	~ b
-1.518514	~ c
-1.217484	~ d
-1.518514	~ e
-1.518514	~ f
-1.518514	~ g
-1.518514	~ gln
-1.518514	~ h
-1.518514	~ m
-1.518514	~ q
-0.7403627	~ s	-0.4409091
-1.217484	~ t
-1.217484	~ u
-1.518514	~ z
-1.518514	~ }

\3-grams:
-0.09691001	! ! !	-0.20412
-0.3679768	&& ! O	0.1760913
-0.4259687	( ! (
-0.90309	( ! </s>
-0.4771213	* ! (
-0.30103	+= ! QO	0
-0.09691001	; ! u	0
-0.544068	b ! *
-0.544068	b ! O
-0.1760913	| ! (
-0.39794	) != EOF	0
-0.1760913	K != b	0
-0.30103	] != gln	0
-0.1760913	"> " ,	-0.1760913
-0.1760913	? "" :
0	( "#" )	0
0	, "$" ,
-0.1249387	, "%s" ,	-0.1760913
0	, "> "	0
0	( "Q" )
-0.1249387	, "r" )	0
-0.8129134	) % (
-0.6368221	) % 3	-0.2340832
-0.8129134	) % 8
-0.544068	R % 2	-0.3222193
-0.1760913	_Q % QQ
-0.1249387	i % 5
-0.1249387	j % 4
-0.1760913	l % 2
-0.69897	( & </s>
-0.5228788	( & not	0
-0.8129134	, & z	0
-0.1760913	1 & 15	-0.2552725
-0.39794	= & _	-0.1760913
-0.39794	= & tyr	0
-0.69897	B & 1
-0.1760913	] & arg	0
-0.1760913	__ & 15	-0.2552725
-0.4336556	) && (	-0.2066088
-0.8016323	) && v	0
-0.1760913	<s> && (
-0.30103	D && (
-0.1249387	bf && s	-0.1760913
-0.1760913	f && (
-0.1760913	op && a	0
-0.30103	' ' </s>
0	== '\n' )
-0.90309	! ( C
-0.1760913	% ( and	0.8846066
-0.860338	&& ( *
-0.763428	&& ( O	-0.3521825
-1.161368	&& ( e
-1.161368	&& ( j	-0.3853509
-0.9852768	&& ( v
-0.8372727	( ( (	-0.09214621
-1.439333	( ( 2	-0.4288166
-1.439333	( ( A
-1.439333	( ( H
-1.439333	( ( _O
-1.138303	( ( and	0.6627578
-0.8952646	( ( i	-0.1918855
-1.439333	( ( w	-0.30103
-0.845098	) ( (	-0.370227
-1.021189	) ( )	-0.2064739
-1.322219	) ( *
-0.845098	) ( L	-0.2588323
-1.322219	) ( R	-0.2218488
-0.9242793	) ( not	-0.154902
-1.322219	) ( x
-1.166331	* ( (
-1.342423	* ( .5
-0.8653014	* ( 1	-0.640978
-1.342423	* ( 9
-1.342423	* ( </s>
-1.342423	* ( b
-1.342423	* ( i
-0.819544	+ ( (
-1.217484	+ ( 4	-0.3802113
-1.041393	+ ( C
-0.819544	+ ( h	-0.2552726
-1.217484	+ ( k
-1.217484	+ ( ser	0.4771213
-0.69897	+= ( C
-0.69897	+= ( i
-0.9777236	, ( &
-0.9777236	, ( ,	0
-0.9777236	, ( char	0.5228788
-0.9777236	, ( w	-0.30103
-0.60206	- ( (
-0.7781513	- ( _O
-0.7201593	: ( a
-1.021189	: ( m	-0.3899711
-1.021189	: ( n
-1.021189	: ( p	-0.30103
-1.021189	: ( t
-0.39794	; ( *
-1.230449	<s> ( (
-1.230449	<s> ( )
-1.230449	<s> ( L
-1.230449	<s> ( O	-0.1303338
-1.230449	<s> ( T	-0.3606157
-1.051152	= ( (	-0.2327651
-1.176091	= ( H
-0.6118198	= ( and	0.2825466
-1.352183	= ( n
-1.352183	= ( not	0.146128
-1.352183	= ( ser	0.4771213
-0.3424227	B ( D	-0.07572071
-0.7403627	B ( f	-0.39794
-0.7781513	C ( *	-0.4423591
-0.60206	C ( H	-0.4637573
-0.7781513	C ( d	-0.3723859
-0.7781513	C ( o	-0.4149733
-0.30103	E ( N	-0.1091445
-0.1760913	E3 ( X	-0.2253093
-0.8129134	F ( )
-0.8129134	F ( L	0.1091445
-0.8129134	F ( f	-0.2632414
-0.8129134	F ( w	-0.4259687
-0.1760913	F0 ( L	0.1091445
-0.1760913	F1 ( L	0.1091445
-0.8129134	G ( )	-0.5467572
-1.113943	G ( </s>
-0.8129134	G ( L	-0.1127043
-0.8129134	G ( sym_	0
-0.5118834	I ( o	-0.3679768
-0.544068	J ( G	0
-0.7403627	K ( L	0.1091445
-0.7403627	K ( int
-0.7403627	K ( k	-0.3357921
-0.7403627	K ( s	-0.2552725
-0.7781513	M ( L	0.1091445
-0.4771213	M ( b	-0.455932
-0.8653014	N ( L	-0.01579428
-0.8653014	N ( x	-0.4259688
-0.8653014	N ( y	-0.4149733
-0.845098	O ( *
-0.845098	O ( -
-0.845098	O ( W	-0.1760913
-0.845098	O ( y	-0.3802113
-0.4259687	O_ ( %
-0.60206	O_ ( 3
-0.7781513	P ( a	-0.4423591
-0.7781513	P ( m	-0.2808266
-0.7596679	Q ( C	-0.2498775
-1.060698	Q ( O
-1.060698	Q ( j
-1.060698	Q ( k
-1.060698	Q ( o	-0.1461281
-0.1760913	QR ( L	0.1091445
-0.1760913	QS ( L	0.1091445
-0.4771213	Q_ ( O_o	0.1249388
-1.278754	W ( ++
-0.9777236	W ( T	-0.5824645
-0.8016323	W ( X	-0.5263393
-1.102662	W ( f	-0.3881802
-1.102662	W ( m	-0.4637573
-0.09691001	Y ( )	-0.5075039
-0.39794	Z ( X
-0.2340832	_ ( )	-0.6521622
-1.255273	_ ( j	0
-1.255273	_ ( l	-0.3309932
-1.255273	_ ( o	-0.1461281
-1.255273	_ ( w
-0.5228788	a ( X	-0.4345689
-0.1760913	abs ( (	-0.4610344
-0.1760913	bh ( m	-0.2808266
-0.1249387	bj ( X	-0.4345689
-0.1760913	bl ( )
-0.30103	e ( </s>
-0.07918125	err ( 2	-0.4993977
-0.39794	exit ( 0	-0.0889411
-0.39794	exit ( puts	0
-0.1249387	exp ( -
-0.3357921	f ( n	-0.6294982
-0.8129134	f ( w
-0.589095	for ( ;	0.02482349
-1.518514	for ( K	-0.3899711
-1.518514	for ( O	-0.1303338
-1.342423	for ( a	-0.5488145
-1.518514	for ( g	-0.3424227
-0.9744459	for ( i	-0.7269987
-1.518514	for ( j	-0.3853509
-1.217484	for ( k	-0.5576409
-1.217484	for ( p	-0.4259688
-1.041393	for ( xor	-0.243038
-1.342423	for ( z	0.1760913
-0.30103	free ( not	0.146128
-0.39794	g ( a
-0.1249387	getchar ( )	-0.3584315
-0.243038	gly ( &	-0.4471581
-0.544068	gly ( ala	0
-0.30103	h ( n	-0.394147
-0.4771213	h ( p	-0.4149733
-0.860338	i ( 0	-0.3107899
-0.860338	i ( 1	-0.5975124
-0.860338	i ( 2	-0.5341598
-0.860338	i ( 3	-0.4881167
-0.9852768	i ( 4	-0.20412
-0.9852768	i ( 5	0.1760913
-1.161368	i ( R
-0.8388491	if ( !	-0.09691
-1.236789	if ( (	-0.2419085
-1.139879	if ( *	-0.1870866
-1.537819	if ( F	-0.3802113
-1.361728	if ( K	-0.4637573
-1.361728	if ( L	-0.4607309
-1.537819	if ( M
-1.537819	if ( l
-1.139879	if ( not	-0.154902
-1.537819	if ( p
-1.537819	if ( sec	0
-1.361728	if ( t
-1.537819	if ( x
-0.05799195	m ( )	-0.868721
-0.3309932	main ( )	-0.7789373
-0.4771213	main ( int
-0.8750613	main ( met	-0.30103
-0.1760913	mvinch ( i
-0.1760913	n ( )
-0.30103	p ( B	-0.3309932
-0.39794	phe ( const	0
-0.39794	phe ( not	-0.4336556
-0.1760913	pow ( 2	-0.1983677
-0.60206	r ( f
-0.1760913	rand ( )	-0.4675759
-0.1760913	rewind ( Q	-0.3869447
-0.1760913	s ( )
-0.60206	sizeof ( *
-0.7781513	sizeof ( and	0.8846066
-0.8016323	w ( )
-0.9777236	w ( *
-0.9777236	w ( 41	0
-0.9777236	w ( 42	0
-0.6766936	w ( y	-0.2388821
-0.8653014	while ( (	-0.5429386
-1.041393	while ( 0	-0.3899711
-1.041393	while ( H
-1.041393	while ( X
-1.041393	while ( b	-0.4101745
-0.1760913	write ( 1	-0.39794
-0.30103	y ( )	-0.166546
-1.066947	z ( "#"	0
-1.243038	z ( ";"
-1.243038	z ( "Q"	0
-1.243038	z ( (
-0.544068	z ( )	-0.6903886
-1.066947	z ( </s>
-1.243038	z ( P	0.60206
-1.243038	z ( t	-0.39794
-0.69897	| ( a	-0.4238757
-0.4771213	|| ( O	-0.1303338
-0.09691001	" ) ;	-0.463536
-0.1249387	"#" ) )	-0.4487259
-0.1249387	"Q" ) ;	-0.4735663
-0.1760913	"r" ) )
-1.662758	( ) %
-1.361728	( ) &&	-0.5274264
-0.6213651	( ) )	-0.2044634
-0.9223952	( ) ,	-0.1140341
-0.9223952	( ) :	-0.00663057
-0.7085153	( ) ;	-0.1071731
-1.361728	( ) </s>
-1.486667	( ) ==
-0.8498445	( ) {	-0.06265743
-1.721536	) ) !=	-0.2552725
-1.721536	) ) %
-1.897627	) ) &&
-1.897627	) ) (
-0.8562344	) ) )	-0.2898936
-1.353559	) ) *
-1.897627	) ) +
-1.119476	) ) ,	-0.4109605
-1.897627	) ) -
-1.596597	) ) :	-0.3912067
-0.5265592	) ) ;	-0.02706879
-1.022566	) ) </s>
-1.721536	) ) ?	-0.3723859
-1.897627	) ) break	0.1249388
-1.596597	) ) for	0.3802112
-0.8976271	) ) {	-0.06345012
-0.7781513	* ) (
-0.39794	+ ) d8
-0.39794	+ ) {
-0.8016323	++ ) )	-0.3237872
-0.9777236	++ ) *
-0.8016323	++ ) ;
-0.9777236	++ ) </s>
-0.9777236	++ ) {
-0.39794	, ) )	-0.4338002
-0.6532125	-- ) bd	0
-0.4771213	-- ) {	-0.4835938
-0.1760913	... ) {
-1.127105	0 ) ,
-0.2350102	0 ) ;	0.07169324
-1.525045	0 ) G	0.60206
-0.8260748	0 ) {	-0.352617
-1.525045	0 ) ||
-1.342423	1 ) &&
-0.6892102	1 ) )	-0.7726188
-1.342423	1 ) *
-1.166331	1 ) ,
-0.4973246	1 ) ;	-0.07363868
-1.166331	1 ) </s>
-1.166331	1 ) {	-0.358655
-0.1760913	128 ) ;
-0.1760913	15 ) <	-0.3309932
-0.30103	16 ) ;	-0.3998242
-0.845098	2 ) )	-0.06851465
-0.7659168	2 ) *
-0.9420081	2 ) ,
-1.243038	2 ) -
-0.845098	2 ) ;	-0.1957042
-1.243038	2 ) </s>
-1.243038	2 ) {
-0.1760913	2. ) /	-0.39794
-0.9777236	3 ) )
-0.5797836	3 ) ,
-0.8016323	3 ) ;	-0.2748854
-0.60206	32 ) *
-0.60206	32 ) ;	-0.2748854
-0.7403627	4 ) )
-1.041393	4 ) +
-1.041393	4 ) +=	-0.1760913
-1.041393	4 ) ,
-1.041393	4 ) :
-1.041393	4 ) =
-0.39794	40 ) ;
-0.1760913	41 ) ;
-0.30103	42 ) ;
-0.8129134	5 ) +
-0.8129134	5 ) +=	-0.1760913
-0.5118834	5 ) ,
-0.4771213	6 ) *	-0.3744589
-0.4771213	6 ) ;	-0.2748854
-0.2218488	60 ) ;
-0.1760913	63 ) -	-0.4259687
-0.39794	7 ) %
-0.7403627	8 ) *
-0.7403627	8 ) ,
-0.7403627	8 ) ;
-0.4259687	9 ) *
-0.60206	9 ) {
-1.124939	; ) ;
-1.30103	; ) for	0.60206
-1.124939	; ) i
-1.30103	; ) s
-0.2596373	; ) {	-0.06610757
-0.60206	<s> ) )	-0.2229468
-1.20412	<s> ) *
-1.20412	<s> ) ,
-0.60206	<s> ) ;	-0.1310326
-1.20412	<s> ) {
-0.39794	A ) ;
-0.243038	B ) ,
-0.544068	B ) ;
-0.2218488	C ) ;	-0.2748854
-0.39794	EOF ) {	-0.358655
-0.1760913	I ) {
-0.4259687	K ) ;
-0.60206	K ) </s>
-0.60206	K ) {
-0.6532125	L ) ;	-0.4040338
-0.6532125	L ) G	0.60206
-0.4771213	N ) ,
-0.4771213	N ) {
-0.1249387	NULL ) {	-0.4835938
-0.5642715	O ) </s>
-0.5642715	O ) {	-0.4571041
-0.2108534	P ) {	-0.1902055
-0.60206	Q ) )	-0.4120031
-0.4771213	Q ) ;	-0.3998242
-0.7781513	Q ) </s>
-0.8846066	R ) (	-0.6863809
-0.9637879	R ) )	-0.6622795
-1.060698	R ) ,
-0.6627578	R ) </s>
-1.361728	R ) F	0
-1.361728	R ) G	0.60206
-0.9637879	R ) J	0.146128
-1.361728	R ) L	-0.1760913
-1.361728	R ) QR	0
-0.1760913	SEEK_SET ) ;	-0.2748854
-0.60206	W ) ;	-0.4040338
-0.7781513	W ) </s>
-0.7781513	W ) {
-0.39794	X ) ;	-0.3912804
-0.8750613	X ) </s>
-0.8750613	X ) E3	0
-0.1249387	Y ) ;	-0.2748854
-0.1760913	Z ) ;
-0.916454	] ) )	-0.2927046
-1.217484	] ) +	-0.447158
-0.314394	] ) ;	-0.2856552
-1.217484	] ) </s>
-0.819544	] ) {
-0.7781513	_ ) )
-0.4771213	_ ) ,	-0.5827549
-0.7781513	_ ) ;
-0.7781513	_ ) </s>
-0.1760913	_O ) +	-0.2787536
-0.9542425	a ) )
-0.9542425	a ) *
-0.9542425	a ) -
-0.9542425	a ) ;
-0.6532125	a ) {	-0.5901608
-0.30103	and ) (	-0.608475
-1.041393	and ) 16u	0
-0.6532125	b ) ;
-0.4771213	b ) {
-0.30103	bf ) {	-0.4611821
-0.90309	c ) (
-0.60206	c ) )	-0.5456359
-0.4259687	c ) ;	-0.767801
-0.7269987	c ) {
-0.1346986	d ) ;	0.005941197
-0.1760913	dstr ) (
-0.5228788	e ) ;	-0.2748854
-0.30103	e ) {
-0.7781513	f ) )
-0.9542425	f ) *
-0.7781513	f ) ,
-0.9542425	f ) ;
-0.9542425	f ) <
-0.9542425	f ) {
-0.30103	fw ) ;	-0.4040338
-0.30103	g ) {
-0.4771213	gln ) ;	-0.2748854
-0.30103	gln ) {	-0.4835938
-0.4771213	glu ) ;	-0.2748854
-0.30103	glu ) {	-0.4835938
-0.1760913	his ) ;	-0.2748854
-0.5118834	i ) ;	-0.09879413
-0.8129134	i ) B	0.30103
-0.30103	int ) h
-0.2218488	j ) ;	-0.5759155
-0.69897	j ) {
-0.8129134	k ) (	-0.4336556
-0.6368221	k ) ;	-0.2748854
-0.7781513	l ) *
-0.7781513	l ) ;
-0.30103	l ) {	-0.467228
-0.1760913	lys ) )
-0.1760913	met ) tyr
-0.7781513	n ) )	-0.4183433
-0.4101745	n ) ;	-0.6428622
-0.7781513	n ) {	-0.358655
-0.05799195	not ) ;	-0.7008542
-0.6532125	o ) )
-0.6532125	o ) ;
-0.6532125	o ) {
-0.30103	p ) ;
-0.4771213	p ) {
-0.4771213	q ) w	0.1249388
-0.39794	r ) ;	-0.4040338
-0.4259687	s ) ;
-0.4259687	s ) {	-0.5799895
-0.39794	sec ) ;	-0.2748854
-0.39794	sec ) {	-0.358655
-0.60206	ser ) (	-0.4101745
-0.60206	ser ) asx
-0.6532125	t ) )
-0.6532125	t ) ;	-0.4040338
-0.4771213	t ) {
-0.7781513	u ) *
-0.5563025	u ) ;
-0.7781513	u ) {
-0.4771213	unk ) )
-0.4771213	unk ) ;	-0.2748854
-0.1760913	val ) {	-0.358655
-0.20412	w ) {	-0.768258
-0.7781513	x ) )
-0.7781513	x ) ;
-0.7781513	x ) {
-0.06694679	xor ) {	-0.7266318
-0.2340832	y ) ;	-0.7008542
-0.7781513	y ) </s>
-0.7781513	y ) {
-0.4771213	} ) .	0
-0.4771213	} ) </s>
-1.290035	( * ++	-0.3521825
-1.290035	( * O0	0.2218488
-1.113943	( * T	-0.3631779
-1.113943	( * a	-0.1760913
-1.290035	( * b
-1.113943	( * d
-1.290035	( * k
-1.113943	( * not	0.09691
-0.9890046	( * p
-1.290035	( * s
-1.403692	) * !	-0.30103
-0.6766936	) * (	-0.02732312
-1.278754	) * </s>
-1.403692	) * T	-0.5488145
-1.579784	) * _0
-1.181844	) * g	-0.1249388
-1.579784	) * i
-0.7668703	) * o	-0.7017629
-1.579784	) * p	-0.3309932
-1.579784	) * r
-0.8129134	* * y	-0.07918125
-1.352183	, * *
-1.352183	, * </s>
-1.352183	, * A
-1.352183	, * Q3
-1.352183	, * T
-1.176091	, * b	-0.3467875
-1.176091	, * e
-1.051152	, * o	-0.2246416
-1.176091	, * q
-1.352183	, * s
-1.352183	, * x
-0.69897	2 * o	-0.3474874
-0.6532125	3 * 2
-0.544068	4 * o
-0.1760913	6 * n
-0.1760913	60 * (
-0.1249387	: * T	-0.5295094
-0.60206	; * T	-0.1590579
-1	; * p
-0.8239087	; * q
-1	; * s
-0.8653014	= * ++	-0.3521825
-0.8653014	= * </s>
-0.4973246	= * p	-0.69897
-1.041393	= * q	-0.3424227
-1.041393	= * s
-0.1760913	C * C	-0.2552725
-0.69897	E * </s>
-0.69897	E * K	-0.1091445
-0.69897	E * a	-0.1760913
-0.69897	E * e
-0.1760913	F * (	-0.4134522
-0.2218488	FILE * Q	-0.30103
-0.4771213	H * </s>
-0.7781513	L * )
-0.7781513	L * *
-0.7781513	L * T	-0.4423591
-0.6532125	V * (
-0.6532125	V * I	0.1249388
-0.1760913	W * p	-0.4449366
-0.1760913	[ * T	-0.3631779
-0.544068	] * 10	0
-0.4771213	a * f	-0.3222193
-0.3521825	a * u	-0.2138798
-0.1760913	ala * const	-0.2552725
-0.7160034	char * )
-0.5698753	char * *	-0.07357737
-0.9378521	char * d	-0.4101745
-1.113943	char * p
-0.69897	g * 16	-0.1760913
-0.69897	g * 80	0.5228788
-0.5228788	g * Y	-0.2552725
-0.1249387	h * 80	0.39794
-0.60206	i * 4
-0.1760913	m * 80	0.5228788
-0.1760913	pro * const	-0.2552725
-0.39794	s * f
-0.30103	{ * o	-0.4171233
-0.06694679	) *= g	0.1091445
-0.1760913	] *= -	0
-0.30103	s *= s	0
-0.4357286	) + (	-0.3187587
-1.176091	) + </s>
-1.176091	) + s	0.30103
-0.1760913	10 + s	0.30103
-0.39794	3 + i
-0.39794	3 + x
-0.1760913	32 + (
-0.1249387	4 + 1	-0.3843672
-0.5228788	80 + g	-0.1760913
-0.5228788	80 + m
-0.5228788	80 + n
-0.39794	B + a
-0.39794	B + e
-0.1760913	Q2 + 1
-0.1760913	QQ + (
-0.1760913	Y + (	-0.4057654
-0.39794	c + u
-0.544068	d + i
-0.544068	g + u	-0.1760913
-0.4771213	i + F
-0.544068	j + 3
-0.544068	j + B	0
-0.69897	o + k	0
-0.1760913	optind + 1	-0.3631779
-0.1760913	p + 5	0
-0.30103	x + 1
-0.09691001	y + 1
-0.60206	* ++ N
-0.60206	* ++ T	0.1249388
-0.60206	* ++ s	0
-0.1760913	, ++ j
-0.5228788	; ++ i	0
-0.2218488	; ++ xor	0
-0.7781513	<s> ++ T
-0.60206	<s> ++ not	0
-0.7781513	<s> ++ tla	0
-0.8750613	T ++ )	-0.4024876
-0.4771213	T ++ =
-0.69897	T ++ ]
-0.1760913	a ++ )
-0.1249387	g ++ ]	-0.4259688
-0.1760913	k ++ )
-0.60206	p ++ )
-0.7781513	p ++ ,
-0.7781513	p ++ -
-0.7781513	p ++ ;
-0.7781513	p ++ =	-0.1346986
-0.30103	q ++ ,
-0.1760913	r ++ =
-0.1760913	u ++ ;
-0.30103	) += o	-0.2218488
-0.2218488	O0 += O1
-0.544068	] += (	-0.3802113
-0.544068	] += a	0
-0.1760913	__ += (
-0.7403627	d += H	0.2218488
-0.7403627	d += g
-0.1760913	o += l
-0.30103	" , 2	0
-0.30103	"%s" , y	-0.3679768
-0.1760913	( , )	-0.2552725
-1.486667	) , (
-1.486667	) , *
-1.361728	) , 0	-0.2146702
-1.662758	) , 1	-0.1091445
-1.361728	) , </s>
-1.361728	) , B	-0.3467875
-1.264818	) , O	-0.3309933
-1.662758	) , O0	-0.1091445
-1.060698	) , Q
-1.486667	) , Q0	-0.2552725
-1.662758	) , R	0.679226
-1.361728	) , _	-0.3215517
-1.662758	) , __
-1.662758	) , c
-1.662758	) , e
-1.662758	) , g	-0.1760913
-1.361728	) , i	-0.1918855
-1.662758	) , r	-0.30103
-1.662758	) , v
-1.662758	) , w	-0.3521825
-0.4771213	++ , b
-0.4771213	++ , t
-0.1760913	-- , _	-0.09970292
-0.770852	0 , 0	0.3082086
-0.6569086	0 , </s>
-1.469822	0 , W	-0.07918125
-1.469822	0 , d
-1.469822	0 , j
-1.293731	0 , n
-1.130334	1 , ">	0
-1.130334	1 , &
-0.8293038	1 , 0	-0.5047048
-0.8293038	1 , </s>
-0.7533277	2 , "%s"	0
-0.9294189	2 , *	-0.4573772
-0.7533277	2 , 0	-0.08973143
-0.544068	3 , _	-0.09970292
-0.1249387	6 , _	-0.2246417
-0.8129134	8 , </s>
-0.8129134	8 , x	-0.1461281
-0.8653014	<s> , *
-1.041393	<s> , m
-0.544068	A , *
-0.4771213	E , F	0
-0.4771213	F , i
-0.4259687	H , 0	-0.2146702
-1.230449	L , (	-0.4288166
-0.7533277	L , N	-0.3899711
-0.2762064	L , R	-0.2908107
-1.10551	L , _	-0.6055483
-0.7781513	N , *
-0.1249387	N , R	0.6334686
-0.1760913	Q3 , Q2
-0.4771213	R , L	-0.30103
-0.4771213	R , _	-0.3836996
-0.4771213	T , a
-0.1760913	W , p	-0.1962946
-0.6690068	X , 0	-0.08973143
-0.39794	Z , n	-0.359022
-1.190332	] , "r"	0.1249388
-0.7923917	] , *
-1.01424	] , 0	-0.08973143
-1.01424	] , e	-0.4259688
-1.01424	] , o	-0.3912067
-0.8129134	a , *	-0.447158
-0.5228788	b , u	-0.3521825
-0.1760913	be , bf	0
-0.60206	c , d	-0.3388186
-0.69897	d , T	-0.2218488
-1	d , int	-0.3309932
-1	d , t
-0.7403627	e , k	-0.07918125
-0.7403627	e , r
-0.8129134	f , </s>
-0.8129134	f , w
-0.544068	g , i
-0.90309	i , 0
-0.90309	i , b
-0.7269987	i , j	-0.3174204
-0.9777236	j , 0	-0.08973143
-0.9777236	j , 6	0
-0.8016323	j , k	-0.07918125
-0.6766936	j , u	-0.0511525
-0.8750613	k , 0	-0.08973143
-0.8750613	k , l	-0.1249388
-0.8750613	k , n
-0.69897	k , p
-0.69897	m , e	-0.30103
-0.5228788	m , n	-0.4839607
-0.6532125	n , d	-0.4637573
-0.9542425	n , m
-0.7781513	n , o	-0.3631779
-0.4771213	not , const	-0.2552725
-0.4771213	not , glu	0
-0.7533277	o , 0	-0.2146702
-0.9294189	o , 16	0.1249388
-0.09691001	sym_ , R	0.4573773
-0.60206	t , *
-0.8129134	u , "$"	0
-0.8129134	u , 1
-0.4771213	v , v
-0.1760913	val , const	-0.2552725
-1.09691	x , ...	0
-1.09691	x , </s>
-0.79588	x , K	-0.06214792
-1.09691	x , a
-0.6197888	x , y	-0.2218488
-0.1760913	z , A	-0.30103
-0.7781513	) - (	-0.39794
-0.7781513	) - 3	-0.3521825
-0.9542425	) - 32	0.1249388
-0.1760913	*= - 1
-0.1249387	, - 1	-0.455932
-0.90309	1 - I	0
-0.60206	1 - n	-0.3309932
-0.39794	3 - __
-0.69897	<s> - e
-0.69897	<s> - i	-0.3802113
-0.5166298	= - 1	-0.4259687
-0.4586379	= - ~
-0.39794	F - 1
-0.39794	F - p	-0.2552725
-0.1760913	I - x	0
-0.4259687	L - 1
-0.30103	O0 - OO	0
-0.1760913	W - 1	-0.3723859
-0.4771213	[ - 1	-0.6734159
-0.8750613	[ - </s>
-0.8750613	[ - b	-0.30103
-0.39794	a - </s>
-0.1760913	asp - asn	0
-0.39794	c - ~
-0.1760913	f - c
-0.30103	h - i
-0.60206	i - W	0
-0.60206	i - h
-0.4771213	j - i	-0.3222193
-0.30103	k - v	-0.30103
-0.39794	l - 1	-0.3309932
-0.6532125	n - 1	-0.3309932
-0.6532125	n - 3	-0.2730013
-0.6532125	n - k
-0.69897	v - D
-0.69897	v - b
-0.39794	v - f	-0.154902
-0.1760913	xor - unk	-0.1760913
-0.1760913	? -- T	0.30103
-0.1760913	O -- ;
-0.1249387	R -- T	0.1760913
-0.1760913	T -- =
-0.1249387	W -- ;	-0.3899711
-0.1760913	q -- [
-0.4771213	d -= g
-0.4771213	d -= l	0.2218488
-0.1760913	o -= g	0.1249388
-0.39794	v -= u	0
-0.6532125	A -> b	-0.09691003
-0.1760913	A -> j	-0.1091445
-0.6532125	B -> b	-0.09691003
-0.1760913	B -> j	-0.1760912
-0.6283889	K -> n	-0.1760913
-0.5314789	K -> x	-0.4357286
-0.5314789	K -> y	-0.05551735
-0.3679768	a -> x
-0.3679768	a -> y	-0.1346986
-0.4771213	b -> n	-0.2730013
-0.4771213	b -> op	-0.1760913
-0.60206	e -> a	-0.1760913
-0.60206	e -> b	-0.39794
-0.7781513	e -> x	-0.3899711
-0.7781513	e -> y	-0.3899711
-0.30103	not -> not
-0.4259687	not -> val
-0.2218488	y -> b	-0.2218488
-0.1760913	) . _
-0.8129134	] . e
-0.5118834	] . q	0
-0.3357921	] . y	-0.146128
-0.2340832	asn . not	0.146933
-0.4771213	asn . val
-0.1760913	h . y	-0.3802113
-0.1608513	not . not	-0.003005445
-0.544068	not . val	-0.1760913
-0.544068	v . y
-0.60206	x . _
-0.30103	x . c	-0.1346986
-0.7781513	x . t
-0.1760913	y . c	-0.1346986
-0.4259687	{ . _	-0.39794
-0.60206	{ . c	-0.3388186
-0.60206	{ . p
-0.1760913	, ... )	0
-0.7781513	) / (
-0.60206	) / 2	-0.3869447
-0.7781513	) / p
-0.1760913	C / 4
-0.1760913	a / f
-0.39794	i / 5
-0.1760913	k / 2
-0.1760913	u / 5	-0.1760913
-0.2284793	( 0 )	-0.03605658
-0.7403627	( 0 ,
-0.7403627	( 0 <
-0.2290273	, 0 )	-0.3670498
-0.4429072	, 0 ,	-0.2436685
-1.4843	, 0 >
-0.4771213	: 0 )	-0.01902324
-0.69897	: 0 ,	-0.4544573
-0.8750613	: 0 :
-0.5740313	: 0 ;	-0.2057619
-0.5740313	< 0 )	-0.23083
-0.69897	< 0 ;
-0.3309932	< 0 ?	-0.06694679
-0.2218488	<s> 0 ;	-0.3818532
-1.240549	= 0 )	-0.1516488
-0.4771213	= 0 ,	-0.1589074
-1.638489	= 0 :	-0.3869447
-0.2405493	= 0 ;	-0.1224641
-0.544068	> 0 ?
-0.04575749	? 0 :	-0.01336394
-0.04139268	[ 0 ]	0
-0.1760913	return 0 ;
-0.2218488	& 1 )
-0.6812412	( 1 )
-0.7781513	( 1 ,	-0.2676062
-0.4259687	( 1 -	-0.1303338
-0.90309	( 1 <<
-0.1760913	*= 1 -
-0.5698753	+ 1 )	-0.04674342
-0.7160034	+ 1 ,
-0.7160034	+ 1 ;	0.06445798
-1.113943	+ 1 ==	0
-0.6368221	+ 1 ]	-0.3735806
-0.1760913	+= 1 ;
-0.243038	, 1 )	0.02020338
-0.4191293	, 1 ,	-0.2313941
-1.322219	- 1 &	0
-0.544068	- 1 )	-0.2808267
-1.146128	- 1 ,
-0.6232493	- 1 ;	-0.01472324
-0.6690068	- 1 ]	-0.4771212
-0.1760913	<< 1 )
-0.5835766	= 1 ,	-0.2313941
-0.7596679	= 1 -
-0.4074853	= 1 ;	-0.06587577
-1.060698	= 1 <<
-0.1249387	? 1 :	-0.1760913
-0.1760913	P 1 )	-0.3107898
-1.021189	[ 1 <<
-0.06694679	[ 1 ]	0.007968903
-0.1760913	* 10 +	0
-0.39794	= 10 ;
-0.1760913	& 1023 |	0
-0.1760913	< 14 &
-0.1760913	>> 14 &
0	= 14695981039346656037ULL ;	0
-0.39794	& 15 )	0
-0.39794	& 15 ,
-0.1760913	( 16 ,
-0.30103	* 16 ;	0
-0.1249387	, 16 )	-0.30103
0	) 16u )
-0.69897	% 2 )
-0.5228788	% 2 *
-0.5228788	% 2 ?
-0.5006024	( 2 )	-0.1233849
-0.9777236	( 2 *	-0.3802113
-0.3245111	( 2 ,	-0.1631263
-0.5228788	+ 2 )
-0.69897	+ 2 ;
-0.69897	+ 2 ]	-0.3174204
-0.1249387	+= 2 )
-0.1760913	, 2 )	-0.3802112
-0.6532125	, 2 ,
-0.39794	- 2 *
-0.90309	/ 2 %
-0.7269987	/ 2 )
-0.90309	/ 2 ,	-0.4227636
-0.60206	/ 2 ;
-0.39794	< 2 )
-0.39794	< 2 ?
-0.30103	<s> 2 )
-0.1760913	= 2 ;
-0.1760913	> 2 )
-0.1760913	>> 2 )
-0.05115252	[ 2 ]	-0.09017661
0	/ 2. )	0
-0.1760913	< 20 ?
-0.3679768	% 3 )	-0.4288166
-0.3679768	% 3 *
-0.30103	& 3 )
-0.4771213	& 3 ;
-0.4149733	( 3 )
-0.8129134	( 3 *
-0.6368221	( 3 -
-0.39794	* 3 +
-0.30103	+ 3 ]
-0.39794	, 3 +	-0.2552725
-0.60206	- 3 )
-0.4259687	- 3 ]	-0.3143939
-0.4771213	= 3 ,	-0.3309932
-0.30103	= 3 ;
-0.04575749	[ 3 ]	-0.2272438
-0.1760913	>> 31 ;
-0.1760913	, 32 ,
-0.1249387	- 32 )
-0.1760913	<< 32 ;
-0.1760913	>> 32 <<	0
0	- 33 )
-0.1760913	case 36 :
-0.2218488	( 4 )	-0.1346986
-0.69897	( 4 -
-0.6690068	* 4 )
-0.845098	* 4 -
-0.845098	* 4 ;
-0.6690068	* 4 |
-0.1760913	+ 4 )
-0.3679768	/ 4 +	0
-0.1760913	<< 4 )	-0.4357286
-0.30103	= 4 ,
-0.4771213	= 4 ;
-0.03778856	[ 4 ]	-0.04139268
-0.1249387	>> 40 )
0	( 41 )	0
0	& 4190208 |
-0.1760913	( 42 )
-0.07918125	( 5 )	-0.4301247
-0.1760913	+ 5 ,
-0.30103	/ 5 )
-0.1760913	= 5 ,
-0.1760913	== 5 )
-0.07918125	[ 5 ]	-0.09691003
-0.1760913	<< 56 ;	0
-0.1760913	, 6 )	-0.30103
-0.39794	- 6 ;
-0.1760913	<< 6 *	0
-0.30103	= 6 ,	0.1249388
-0.1249387	[ 6 ]	-0.1760913
-0.1760913	< 60 )
-0.30103	& 63 )	0
-0.1760913	( 64 ,
-0.4771213	= 7 ,
-0.1760913	[ 7 ]
-0.1760913	* 768 ]
-0.1760913	( 8 +
-0.1249387	/ 8 )
-0.3679768	<< 8 ,
-0.544068	<< 8 |	0
-0.1760913	= 8 ,
-0.69897	>> 8 &
-0.5228788	>> 8 ,	-0.4045706
-0.5228788	>> 8 ;	-0.30103
-0.1249387	[ 8 ]
-0.04575749	* 80 +	0.04575729
-0.30103	- 9 )
-0.1760913	[ 97 ]
-0.4149733	) : (	-0.1300784
-1.113943	) : 0
-1.113943	) : </s>
-1.113943	) : v	-0.1760913
-1.113943	) : ~
-0.1760913	++ : </s>
-0.50515	0 : (	-0.1783831
-0.7269987	0 : 0
-0.30103	1 : 0
-0.30103	<s> : (
-0.2218488	T : *	0
-0.39794	] : (
-0.1760913	c : %
-0.1249387	glu : gln	0
-0.9542425	( ; (
-0.7781513	( ; *
-0.7781513	( ; ;	-0.4259688
-0.9542425	( ; K	-0.3521825
-0.9542425	( ; g
-0.7781513	( ; n
-1.611605	) ; )	0.1706962
-1.963788	) ; *
-2.088727	) ; ;
-0.4291272	) ; </s>
-2.264818	) ; G	-0.2340832
-2.264818	) ; J	-0.1760913
-2.264818	) ; L
-1.963788	) ; P	0.30103
-1.963788	) ; R	-0.359022
-1.662758	) ; U	0.05115259
-2.264818	) ; V
-1.963788	) ; W	0.5314789
-2.264818	) ; X	0
-2.264818	) ; Y	0
-1.866878	) ; a
-1.451904	) ; b	-0.1845244
-2.088727	) ; break	0.09691
-2.264818	) ; c
-2.264818	) ; else
-2.264818	) ; f
-1.335399	) ; for	0
-1.963788	) ; i	-0.5642715
-2.088727	) ; if	0.5118833
-2.088727	) ; k
-2.088727	) ; o	-0.1760913
-2.088727	) ; p	-0.2662679
-1.963788	) ; return
-1.866878	) ; s	-0.1870866
-2.264818	) ; t
-2.088727	) ; u	-0.1760913
-1.72075	) ; w	-0.2130748
-2.264818	) ; y	-0.1091445
-1.72075	) ; z	-0.2653144
-0.8099729	) ; }	-0.2197757
-0.4771213	++ ; </s>
-0.7781513	++ ; for	0.4121805
-0.7403627	-- ; )
-1.342423	0 ; !	0.09691
-0.9744459	0 ; </s>
-1.518514	0 ; O
-1.518514	0 ; U	0
-1.342423	0 ; a	-0.4227636
-1.518514	0 ; b
-1.518514	0 ; d
-1.518514	0 ; for	0.4121805
-1.518514	0 ; g	-0.07918125
-1.041393	0 ; i	-0.50515
-1.342423	0 ; j
-1.518514	0 ; k
-0.7056006	0 ; }	-0.006674886
-0.31627	1 ; </s>
-0.1760913	14695981039346656037ULL ; </s>
-0.1760913	16 ; </s>
-0.1760913	16711935 ; z	-0.4288166
-0.845098	2 ; </s>
-0.6690068	2 ; }	-0.3881802
-0.39794	32 ; </s>
-0.1760913	56 ; }
-0.4771213	8 ; </s>
-0.4771213	8 ; G	-0.2340832
-0.1760913	9 ; )
-0.4771213	; ; )	-0.2552725
-0.4771213	; ; </s>
-0.9542425	<s> ; )
-0.7781513	<s> ; }
-0.90309	A ; </s>
-0.90309	A ; D
-0.90309	A ; f
-0.7269987	A ; s
-0.39794	B ; </s>
-0.243038	E ; </s>
-0.544068	E ; }
-0.3357921	H ; </s>
-0.6368221	H ; d
-0.8129134	H ; return	-0.3521825
-0.39794	I ; </s>
-0.30103	K ; </s>
-0.39794	O ; }
-0.1760913	P ; </s>
-0.1249387	Q ; </s>
-0.7403627	S ; V
-0.7403627	S ; u	-0.3521825
-0.7403627	S ; }
-0.39794	T ; *
-0.39794	T ; T
-0.9542425	U ; *
-0.9542425	U ; d	-0.4227636
-0.9542425	U ; i	-0.20412
-0.7781513	U ; p	-0.4881167
-0.9542425	U ; u	-0.3869447
-0.2108534	W ; )	-0.607455
-0.30103	X ; </s>
-0.05799195	Y ; </s>
-0.39794	Z ; </s>
-0.39794	Z ; V
-0.3774183	] ; </s>
-0.8893017	] ; V	-0.4881167
-1.01424	] ; int
-0.60206	a ; </s>
-0.2304489	b ; </s>
-0.9294189	b ; K	-0.3521825
-0.39794	be ; n
-0.39794	be ; u	-0.1760913
-0.30103	bf ; b
-0.4259687	break ; </s>
-0.90309	break ; case
-0.90309	break ; default	0
-0.60206	break ; }	-0.2120889
-0.69897	c ; c
-1.021189	d ; *	-0.4313638
-0.6232493	d ; </s>
-1.021189	d ; D
-0.845098	d ; }
-0.30103	e ; </s>
-0.9542425	e ; x
-0.6532125	e ; }
-0.845098	f ; </s>
-0.08297423	g ; </s>
-0.05115252	gln ; </s>
-0.146128	h ; </s>
-0.447158	i ; </s>
-0.3521825	j ; </s>
-0.4771213	j ; }
-0.447158	l ; </s>
-0.6690068	l ; d
-0.845098	l ; l
-0.845098	n ; )	-0.1303338
-0.3679768	n ; </s>
-0.845098	n ; }
-0.1760913	not ; </s>
-0.08297423	o ; </s>
-0.60206	p ; </s>
-0.90309	p ; for	0.4121805
-0.90309	p ; }	-0.4607309
-0.243038	q ; </s>
-0.39794	r ; </s>
-0.39794	r ; }
-0.5642715	s ; </s>
-0.4393327	s ; }	-0.2846396
-0.69897	t ; q
-0.69897	t ; }
-0.1760913	tla ; </s>
-0.4259687	trp ; </s>
-0.30103	trp ; xor	0.146128
-0.5228788	u ; </s>
-0.1760913	unk ; xor	0.3679768
-0.544068	v ; }
-0.30103	val ; ++	-0.447158
-0.3802112	val ; </s>
-0.20412	w ; </s>
-0.09691001	x ; </s>
-0.1760913	xor ; </s>
-0.1760913	y ; </s>
-0.1760913	z ; </s>
-0.4771213	} ; w
-0.544068	) < 14	0
-0.4259687	0 < i
-0.1760913	O < b
-0.1760913	a < 6
-0.30103	g < 79
-0.60206	i < s	0.09691
-0.1249387	p < n	-0.30103
-0.1760913	s < 0	-0.3424227
-0.09691001	t < 0	-0.20412
-0.30103	u < i
-0.4771213	v < t	0
-0.07918125	xor < not	0.06694674
-0.6532125	) << (
-0.6532125	) << s
-0.60206	1 << 18
-0.1760913	32 << 8	-0.3309932
-0.1760913	b << 56	0
-0.544068	h << 8
-0.1760913	u << t
-0.2632414	++ = *	-0.1124222
-0.90309	<s> = A	0
-0.90309	<s> = a
-0.60206	A = (
-0.60206	A = B
-0.60206	A = F	0
-0.4771213	D = b
-0.5228788	E = T
-0.544068	K = K	-0.2340832
-1.079181	O = *	-0.3107898
-0.6812412	O = 0	0.258278
-0.90309	O = 3	-0.30103
-1.079181	O = 6	-0.1760913
-1.079181	O = 7	-0.30103
-1.079181	O = 8	0
-0.1760913	Q0 = 0	-0.30103
-0.4149733	T = B	-0.09691003
-0.8129134	T = E
-0.544068	X = d
-0.7403627	Y = f	-0.1983677
-0.7403627	Y = realloc	0
-0.4771213	Z = A
-1.024134	] = (	-0.4223344
-0.9149892	] = 0	-0.5376019
-1.39211	] = 10	-0.2552725
-1.568202	] = 32
-1.39211	] = </s>
-1.568202	] = A	-0.4101745
-1.39211	] = O	-0.07918131
-1.39211	] = a
-1.568202	] = c
-1.568202	] = h	-0.30103
-1.267172	] = j	-0.4471581
-1.568202	] = m
-1.568202	] = n
-1.267172	] = o	-0.455932
-1.568202	] = v
-1.568202	] = x
-1.568202	] = y
-1.267172	] = {
-0.39794	_ = x	-0.39794
-0.1760913	_0 = 0	-0.30103
-0.9542425	a = 0	-0.1058037
-0.9542425	a = b	-0.3174204
-0.9542425	a = e
-0.9542425	a = s
-0.9777236	b = K	-0.3309932
-0.8016323	b = b	-0.4045706
-0.9777236	b = c
-0.1760913	bA = bz
-1	c = &	-0.2552725
-0.5228788	c = 0	-0.3437819
-1	c = A	0
-1	c = v
-1.079181	d = *
-1.079181	d = A	0
-1.079181	d = E	-0.2552725
-1.079181	d = P
-1.079181	d = c
-0.7781513	d = f	-0.3233064
-0.7269987	e = A	-0.1249388
-0.90309	e = a	-0.4101745
-0.7269987	e = d	-0.3869447
-0.8129134	f = c
-0.8129134	f = f
-0.9542425	g = (
-0.9542425	g = 0	-0.1058037
-1.130334	g = 1
-1.130334	g = _	0.4771213
-0.9542425	g = g	0
-1.130334	g = getchar	0.1249388
-1.130334	g = pow	0
-0.7403627	h = -
-0.7403627	h = 14695981039346656037ULL	0
-0.462398	i = 0	-0.004963398
-0.3679768	j = 0	0.03642923
-0.6690068	k = 0	-0.1058037
-0.6368221	l = 0	-0.2307425
-0.8129134	l = i
-0.1760913	lys = trp	0.4259687
-0.60206	m = -	-0.2914847
-0.9294189	n = (
-0.7533277	n = b
-0.9700368	o = 0	-0.1058037
-0.9700368	o = 1	-0.394147
-0.9700368	o = Q	-0.2498775
-0.9700368	o = _	0.3521825
-0.9700368	o = i
-1.041393	p = -	-0.3195134
-1.041393	p = 1
-1.041393	p = </s>
-1.041393	p = N
-1.041393	p = T
-1.041393	p = h
-1.041393	p = q
-0.8129134	q = o	-0.3309932
-0.8129134	q = p	0.1249388
-0.7403627	r = 0
-0.7403627	r = </s>
-0.7403627	r = l
-1.041393	s = -
-1.041393	s = A	0
-0.39794	sec = gln	0.2218488
-0.69897	t = -
-0.30103	tyr = &	-0.2552725
-0.5740313	u = M	0
-0.7781513	v = 0
-0.7781513	v = u	-0.3222193
-0.544068	w = D	-0.30103
-0.6283889	x = y	-0.20412
-0.243038	xor = trp	0.20412
-0.544068	xor = unk	0
-0.7533277	y = -	-0.3195134
-0.9294189	y = N	0
-0.9294189	y = h
-0.9294189	y = x	-0.30103
-0.9294189	y = y	-0.2552725
-0.1760913	1 == b	0
-0.39794	T == a
-0.30103	] == T	0
-0.30103	) > 0
-0.1760913	o > i
-0.2218488	) >> 8
-0.1760913	8 >> 40	0.1249388
-0.1760913	cys >> 2	0
-0.1760913	n >> a	0
-0.1760913	o >> 32	0
-0.845098	) ? (
-0.6690068	) ? glu	0
-0.4771213	0 ? 0	0.39794
-0.1760913	S ? T
-0.1760913	by ? 0	0.5228788
-0.4771213	f ? v
-0.39794	t ? (
-0.39794	t ? n
-0.1760913	&& A [
-0.6532125	( A ->	0
-0.4771213	( A =
-0.30103	* A ,	-0.3309932
-0.4771213	, A ,
-0.4771213	, A [
-0.4771213	; A =
-0.30103	; A [
-0.1760913	< A ->	0
-0.4771213	<s> A =
-0.1760913	= A ;	-0.05115254
-0.845098	= A [	-0.2082759
-0.3679768	( B &
-0.544068	( B )	-0.1091445
-0.07918125	) B (	0.04139265
-0.1760913	+ B ->	0
-0.6532125	, B )
-0.6532125	, B ,
-0.3521825	, B R	0
-0.243038	; B (	-0.03778857
-0.544068	; B =
-0.4771213	= B +	-0.07918122
-0.7781513	= B ->
-0.60206	= B ;
-0.06694679	b B &
-0.9542425	( C ,
-0.9542425	( C /	0
-0.9542425	( C ==
-0.6532125	( C >
-0.39794	* C )	-0.07918125
-0.39794	* C *	0
-0.3424227	, C (	-0.1426675
-0.7403627	, C )
-0.20412	= C (	-0.2730013
-0.544068	( D &&
-0.544068	( D c	-0.30103
-0.39794	; D =
-0.30103	< D d	-0.30103
-0.1760913	<s> D (
-0.4771213	= D [	-0.1760913
-0.4771213	= D d	-0.30103
-0.1760913	( E *	-0.3802113
-0.544068	* E ,
-0.1760913	+= E ;
-0.30103	, E ,	-0.30103
-0.07918125	; E =	-0.0669468
-0.1760913	<s> E *	-0.2552725
-0.39794	= E (	-0.1760913
-0.1760913	? E =
0	) E3 (	0
-0.1760913	!= EOF )
-0.1760913	[ EOF ]	0.1249388
-0.69897	( F ,
-0.5228788	( F -	-0.2552725
-0.69897	( F <
-0.1760913	) F (	-0.4045706
-0.1760913	+= F *	0
-0.1760913	, F ,	-0.1249387
-0.1760913	; F =
-0.1760913	<s> F =
-0.1760913	= F (	-0.2284793
-0.09691001	V F (	-0.2284793
0	( FILE *	-0.07918125
0	<s> FILE *
-0.09691001	( G (	-0.6264194
-0.03778856	) G (	-0.123744
-0.1760913	, G [
-0.3679768	; G (
-0.3679768	; G [
-0.1760913	? G (	-0.4045706
-0.5642715	( H ,	-0.39794
-0.09691001	+= H ;	-0.03218466
-0.39794	, H ,
-0.39794	, H =
-0.1249387	-= H ;	-0.2082759
-0.1249387	; H =
-0.07918125	<s> H *	-0.0457575
-0.4771213	= H ;
-0.1760913	[ H ]	0
-0.1760913	{ H =
-0.39794	( I )
-0.39794	( I -	0
-0.1249387	* I (	-0.4423592
-0.1249387	, I =
-0.1760913	- I (
-0.1760913	: I (
-0.1249387	; I =
-0.4393327	<s> I H
-0.2218488	= I +
-0.1760913	? I :
-0.1760913	b I ==
-0.06694679	) J (
-0.30103	; J (
-0.5642715	( K )	-0.2730013
-0.5642715	( K ->
-0.7403627	( K =
-0.243038	* K )	-0.1760913
-0.8129134	, K ,
-0.1139434	, K ->	-0.3136192
-0.60206	; K !=	0
-0.60206	; K =	-0.3309932
-0.3679768	<s> K (	-0.3899711
-0.3679768	= K ->	-0.4855545
-0.544068	= K ;	-0.1760913
-0.09691001	R K (
-1.431364	( L )
-0.8872957	( L *	-0.1918855
-0.1303338	( L ,	-0.7975796
-1.431364	( L ==
-0.30103	) L ,	-0.3928004
-0.30103	* L -
-0.4771213	, L )	-0.3679768
-0.30103	, L ,
-0.4771213	; L =
-0.4771213	; L >>
-0.30103	= L )
-0.1760913	? L -
-0.20412	[ L ]	0.06694686
-0.1249387	a L d	-0.3521825
-0.2218488	f L e	-0.3521825
-0.5228788	f L f
-0.39794	s L d	-0.1760913
-0.30103	s L t	-0.0457575
-0.1760913	t L t
-0.1760913	w L d
-0.30103	{ L *
-0.30103	( M ,
-0.30103	, M (
-0.3679768	<s> M =
-0.09691001	= M (	-0.5228788
-0.243038	( N (	-0.2373609
-0.544068	( N )
-0.4771213	* N )
-0.4771213	* N =
-0.1249387	+ N (
-0.1383027	, N ,	-0.3521825
-0.30103	<s> N (
-0.1760913	= N (	-0.1627273
-0.7781513	= N ;
0	== NULL )	0.1249388
-0.07918125	! O )	-0.2596373
-1	( O (	-0.4101745
-1	( O ,
-0.2596373	( O =	-0.2352127
-0.1760913	* O )
-0.1918855	, O =	-0.2507249
-0.154902	= O (	-0.2218487
-0.1760913	[ O +
-0.1249387	goto O ;	-0.2552725
-0.1760913	{ O =
-0.09691001	* O0 -	0
-0.243038	, O0 +=	0.09691003
-0.544068	, O0 =
-0.30103	( O2 =
-0.1760913	! O9 --
-0.1760913	- OO )
-0.1760913	= OO -
-0.09691001	) O_ (	-0.39794
-0.1760913	= O_ (
-0.1249387	( O_o )
-0.03778856	( P )	-0.1492981
-0.05799195	; P (	-0.0669468
-0.2218488	<s> P (
-0.7269987	( Q )	-0.30103
-0.90309	( Q =
-0.90309	( Q [	-0.2730013
-0.90309	( Q ]
-0.60206	( Q ^
-0.4771213	* Q (
-0.4771213	* Q )	-0.39794
-0.06694679	*= Q (	-0.2180558
-0.7403627	, Q )
-0.30103	<s> Q [	-0.1760913
-0.2552725	= Q (
-0.4771213	= Q [	-0.1760913
-0.1760913	( Q0 +
-0.39794	, Q0 +=
-0.39794	, Q0 =
-0.1760913	, Q2 +	0
-0.30103	* Q3 ,	0
-0.1760913	! QO *
-0.1249387	( QO =
-0.1760913	, QO &&
-0.1760913	* QQ +
-0.1760913	> QQ )
0	) QR (	0
0	= Q_ (	-0.30103
-0.6532125	( R %
-0.3521825	( R ,	-0.2218488
-0.03140846	, R )	-0.06424087
-1.332438	, R </s>
-0.3679768	; R --	0
-0.1760913	= R %
-0.09691001	B R )	-0.2615214
-0.544068	W R !
-0.544068	W R K	0.2218488
-0.544068	{ R *
-0.544068	{ R a
-0.1760913	X S ;
-0.1760913	Y S )
-0.1249387	i S ]	-0.1249388
-0.4771213	j S ;
-0.30103	j S ]	-0.30103
-0.1760913	p S ]
0	, SEEK_SET )	0
-0.9294189	( T )
-0.9294189	( T <
-0.9294189	( T </s>
-0.9294189	( T =
-0.6283889	( T [
-0.6283889	( T d	0
-1.113943	* T )
-0.3735807	* T ++	-0.5642713
-0.9378521	* T --	0
-0.9378521	* T =
-0.8129134	* T ==
-0.1249387	++ T ;	-0.2552725
-0.1760913	, T l	0
-0.07918125	-- T ,	-0.0457575
-0.30103	; T =
-0.60206	= T :
-0.60206	= T =	-0.2662679
-0.1760913	== T ++
-0.1760913	? T =
-0.39794	( U )
-0.39794	( U ,
-0.1249387	, U ,
-0.1760913	; U ;	-0.09275405
-0.9542425	; U int
-0.30103	<s> U =
-0.09691001	{ U ;
-0.1760913	+= V *
-0.6368221	; V F	0.09691
-0.8129134	; V d
-0.4771213	<s> V =
-0.544068	{ V *
-0.7403627	} V !
-0.4771213	( W (
-0.30103	( W )	-0.39794
-0.1760913	) W (
-0.2218488	, W ,	-0.1249388
-0.1760913	- W /
-0.02632894	; W (	-0.1324919
-0.1091445	<s> W (
-0.1760913	[ W *	0
-0.39794	b W R
-0.7781513	d W )
-0.7781513	d W --
-0.4771213	d W ;	-0.2839967
-0.1760913	p W )	-0.3521825
-0.60206	s W ;	-0.06214792
-0.4259687	s W R
-0.1760913	{ W (
-0.1249387	} W (	-0.4024876
-0.3565473	( X )	0.03778857
-0.49485	( X ,	-0.09938463
-0.9208187	( X </s>
-0.1760913	; X =
-0.544068	b X [	-0.30103
-0.544068	s X )	-0.2552725
-0.544068	s X [
-0.39794	( Y ,
-0.39794	* Y +	0
-0.1760913	*= Y ;	0.4259687
-0.1760913	+= Y *
-0.1760913	, Y )
-0.1760913	; Y (	0.2218488
-0.8129134	<s> Y ->
-0.2108534	<s> Y =	-0.03778856
-0.09691001	d Y [	-0.1249387
-0.1760913	e Y [
-0.30103	s Y [
-0.60206	<s> Z *=
-0.60206	<s> Z +=
-0.1760913	= Z ;
-0.1760913	r Z =
-0.1760913	w Z ,	-0.2552725
-0.4149733	A [ *	0.07918125
-0.3357921	A [ v	-0.3521825
-0.30103	D [ (
-0.4259687	Q [ d	-0.2340832
-0.30103	Q [ k	0
-0.4771213	T [ -	-0.4149733
-0.4771213	X [ u	0
-0.4771213	Y [ i	-0.4259688
-0.4771213	Y [ j	-0.30103
-0.6532125	a [ d
-0.4771213	a [ n	-0.1760913
-0.5228788	b [ L	-0.05115253
-0.69897	b [ i
-0.69897	b [ x
-0.69897	b [ y
-0.69897	e [ 1	0.3679768
-0.1760913	his [ ]	-0.3679768
-0.1760913	k [ 1	0.3679768
-1.130334	not [ leu	0
-1.130334	not [ not
-0.08894108	not [ xor	0
-0.9700368	o [ 3	0.39794
-0.9700368	o [ 4	0.4771212
-1.146128	o [ O	0
-0.748188	o [ g	0
-0.9700368	o [ h	0
-1.146128	o [ m	0
-1.146128	o [ p
-1.146128	o [ t
-0.2688453	p [ -	0.02996321
-0.8129134	p [ 1	0.3679768
-0.39794	t [ i
-0.1760913	tyr [ EOF	0
-1	u [ -	-0.4259688
-0.7781513	u [ 0	0.2632414
-0.7781513	u [ 1	0.146128
-1	u [ 2	0.3521825
-0.8750613	u [ 3	0.39794
-0.7781513	u [ 4	0.3010299
-1	u [ 5	0.1760913
-0.1760913	x [ v	-0.3521825
-0.09691001	y [ optind	0
-0.09691001	z [ L	0.1249388
-0.4771213	++ ] )
-0.4771213	++ ] =
-0.69897	0 ] ;
-0.5228788	0 ] =	-0.465222
-0.819544	1 ] )	-0.109875
-1.217484	1 ] +
-1.041393	1 ] ,
-1.217484	1 ] .	-0.2082759
-0.819544	1 ] ;	-0.4628808
-0.4771213	1 ] =	-0.2725315
-0.6368221	2 ] ,
-0.5118834	2 ] =
-0.90309	3 ] )
-0.90309	3 ] *
-0.7269987	3 ] ,
-0.50515	3 ] =
-0.7781513	4 ] *
-0.7781513	4 ] *=	0
-0.4771213	4 ] ,
-0.60206	5 ] =
-0.30103	6 ] ,
-0.39794	7 ] ,
-0.1760913	99 ] =
-0.39794	<s> ] ;
-0.39794	<s> ] =	-0.4529876
-0.1249387	EOF ] ;	-0.3659708
-0.1760913	H ] =
-0.544068	L ] .	-0.3174204
-0.243038	L ] =	-0.2768963
-0.4771213	S ] )
-0.2552725	S ] ;	-0.6389721
-0.6532125	[ ] )
-0.1760913	[ ] =	-0.2768963
-0.39794	a ] =	-0.4529876
-0.30103	d ] .
-0.39794	i ] )	-0.1890562
-0.1249387	k ] .	-0.2082759
-0.1760913	optind ] )	-0.1890562
-0.1760913	p ] ,
-0.1760913	s ] =
-0.30103	u ] :
-0.39794	v ] =	-0.465222
-0.39794	v ] ==	-0.1760913
-1	xor ] !=	-0.1760913
-1	xor ] &
-0.8239087	xor ] )	-0.4210053
-0.8239087	xor ] ;	-0.3659708
-0.69897	xor ] =	-0.5589031
-1	xor ] >>
-0.30103	& _ f	0
-0.8129134	( _ )
-0.8129134	( _ b
-0.4149733	( _ s	-0.4259687
-0.60206	* _ ;
-0.4259687	* _ </s>
-0.2360892	, _ (	-0.8750613
-0.7132105	, _ )	-0.5440681
-1.01424	, _ ,
-0.4259687	. _ =	-0.2552725
-0.1760913	: _ )
-0.6532125	; _ =
-0.05115252	= _ (	-0.2498775
-0.7403627	{ _ n	0
-0.7403627	{ _ s	-0.30103
-0.39794	( _O %
-0.1760913	, _O =
-0.1760913	, _Q =
-0.30103	, __ =
-0.1760913	- __ )
-0.1760913	= __ &	0
-0.1760913	&& a ->
-0.9378521	( a &
-0.8129134	( a )
-1.113943	( a ,
-0.9378521	( a =	-0.4259687
-0.30103	* a ,	-0.1035406
-0.60206	* a ;
-0.3679768	+ a )	-0.4259687
-0.544068	+ a *
-0.1760913	+= a ;
-0.69897	, a (
-0.69897	, a ,
-0.69897	, a ->
-0.4771213	- a *
-0.4771213	- a /
-0.30103	-> a =
-0.9294189	; a (	-0.3222193
-0.9294189	; a ++	0
-0.9294189	; a <
-0.9294189	; a =
-0.6283889	; a [
-0.39794	< a ->
-0.69897	<s> a (
-0.8750613	<s> a *
-0.5740313	<s> a =	-0.2498775
-0.6690068	= a ;	-0.3521825
-0.845098	= a </s>
-0.845098	= a [
-0.30103	== a -
-0.1760913	>> a </s>
-0.1760913	{ a =
-0.30103	| a )	-0.4259687
-0.1760913	( ala *	0
-0.1760913	const ala not	0
-0.01930515	( and )	0
-0.30103	<s> and *
-0.544068	const and his	0
-0.1760913	& arg )
-0.1760913	( argh ,
-0.09691001	( asn .	0.3802112
-0.1760913	- asn .	-0.09691003
-0.1249387	<s> asn .	-0.09691003
-0.1760913	( asp -	0
-0.1760913	!= b ;	-0.4227636
-0.845098	( b &&
-0.3679768	( b ,	-0.146128
-0.845098	( b =
-0.3521825	* b ;	-0.3136191
-0.69897	, b =
-0.69897	, b X
-0.4771213	- b ]
-0.7781513	-> b =
-0.2340832	-> b [	-0.3802112
-0.8325089	; b !	-0.07572071
-1.230449	; b </s>
-0.9294189	; b =
-1.230449	; b B	0.3679768
-0.8325089	; b I	-0.2218488
-1.054358	; b W
-0.2218488	<s> b =	-0.3444957
-0.8129134	= b ->	-0.30103
-0.5118834	= b ;	-0.2167091
-0.1760913	== b ->
-0.30103	_ b )	-0.30103
-0.60206	{ b bf	-0.2552725
-0.1760913	| b <<	0
-0.3679768	} b B	0.243038
-0.1760913	= bE .
-0.1760913	* bb =
0	{ bc (
-0.1760913	) bd (
-0.1760913	+= be ;
-0.1760913	-= be ;
-0.1760913	+= bf ;
-0.1760913	, bf )	-0.1760913
-0.1760913	-= bf ;	-0.1760913
-0.39794	b bf &&	0.1249388
-0.39794	b bf )
-0.1760913	; bh (
-0.1760913	( bk ,
0	= bp (
-0.1249387	) break ;
-0.09691001	; break ;	-0.1760913
-0.05799195	<s> break ;	-0.640978
-0.6532125	( c )
-0.4771213	( c =
-0.4771213	* c ++
-0.4771213	, c )	-0.39794
-0.3521825	, c ,	-0.1760913
-0.60206	- c *
-0.2632414	. c )	-0.4191294
-0.5642715	. c =	-0.4313638
-0.4259687	; c =	-0.3222193
-0.1249387	<s> c ;	-0.3802113
-0.5118834	= c ;
-0.8129134	= c =
-0.4771213	D c ,
-0.4771213	D c W
-0.1760913	int c ,
-0.1760913	{ c =
-0.1760913	} c =
0	= calloc (
-0.04575749	( char *	-0.4935117
-0.05115252	, char *	-0.7668703
-0.243038	; char *
-0.1760913	<s> char *
-0.1760913	( const ala	0
-0.39794	* const his	0
-0.39794	* const not	0
-0.39794	, const and	-0.3309932
-0.39794	, const pro	0.1249388
-0.2552725	<s> const and
-0.6532125	<s> const ser
-0.39794	( cys -
-0.39794	( cys >>	0
-0.845098	( d )
-0.6690068	( d ,
-0.6690068	( d =
-0.845098	( d X
-0.845098	* d ,	-0.4313638
-0.447158	* d =	-0.1840602
-0.1760913	+ d ;
-0.1760913	+= d ;	-0.359022
-0.5642715	, d )	-0.2710667
-0.5642715	, d ,	-0.1303338
-0.8653014	, d ;
-1.041393	, d W
-0.3679768	- d *
-0.3679768	- d ;	-0.4101745
-0.1760913	-= d ;	-0.359022
-0.6283889	; d +=	-0.2138798
-0.7533277	; d /=
-0.7533277	; d =
-0.9294189	; d W	-0.39794
-0.90309	<s> d *=
-0.50515	<s> d +=	-0.1346986
-0.90309	<s> d -=	-0.30103
-0.50515	<s> d =	-0.3187588
-0.90309	= d )
-0.7269987	= d +	-0.3309932
-0.3590219	= d ;
-0.4771213	D d W	-0.30103
-0.4771213	D d Y	0.2218488
-0.7781513	L d ,
-0.60206	L d =
-0.60206	L d W	-0.30103
-0.60206	L d Y	0.2218488
-0.09691001	T d ,	-0.60206
-0.3679768	[ d ]	-0.1760913
-0.30103	return d -
-0.4771213	{ d -=	-0.30103
-0.4771213	{ d =
0	; default :
0	<s> do {	0
0	, dstr )	0
-0.4771213	( e )	-0.1760913
-0.1760913	) e =	-0.3869447
-0.7403627	* e )
-0.7403627	* e +
-0.7403627	* e ;
-0.7403627	* e =
-0.1760913	+= e ;	-0.1760913
-0.4771213	, e ,	-0.2138798
-0.4771213	, e [	-0.20412
-0.30103	. e ;	-0.1760913
-0.39794	; e =
-0.7201593	<s> e +=
-0.3222193	<s> e ->	0.07918113
-1.021189	<s> e =
-0.8750613	= e ->
-0.69897	= e .
-0.39794	= e ;	-0.2887956
-0.8750613	= e [
-0.39794	D e W
-0.39794	D e Y	0
-0.4259687	L e ,	-0.3899711
-0.60206	L e ;
-0.60206	L e =	-0.3869447
-0.1760913	<s> else </s>
-0.09017663	} else {	-0.03476208
0	<s> err (	0.07918125
0	) exit (	-0.2552725
0	<s> exit (	-0.2552725
0	= exp (	0.1249388
0	} extern void
-0.4101745	( f )	-0.3679768
-0.6532125	( f ,	-0.2284793
-0.7781513	( f L	-0.20412
-0.69897	* f )
-0.5228788	* f -	0
-0.5228788	* f ;
-0.1760913	, f ,
-0.6532125	, f ;
-0.3679768	- f )	-0.4259687
-0.544068	- f ?
-0.1760913	-= f )
-0.30103	/ f ?
-0.1760913	; f =
-0.1760913	<< f ;
-0.39794	<s> f )
-0.3245111	= f (	-0.2082759
-0.9777236	= f ;
-0.6766936	= f L	0.3010299
-0.1760913	_ f }
-0.39794	w f ,	-0.4045706
-0.03778856	) for (	-0.146128
-0.05999793	; for (	-0.0511525
-0.8893017	; for </s>
-0.02632894	<s> for (	-0.6746107
-0.04575749	{ for (	-0.1078265
-0.1249387	} for (
0	<s> free (	-0.09691003
0	<s> fseek (
0	w fw )
-0.69897	( g )
-0.8750613	( g +
-0.69897	( g ,
-0.5740313	( g =	-0.2498775
-0.1091445	* g ;	-0.1434221
-0.05115252	*= g ;	-0.1945747
-0.30103	+ g ++	0.1249388
-0.30103	+= g ;	0.2825466
-0.4771213	, g ,
-0.30103	, g =
-0.1760913	- g ;
-0.1249387	-= g *	-0.3802113
-0.2218488	; g <
-0.9700368	<s> g *=
-1.146128	<s> g +=
-0.9700368	<s> g -=
-0.1918855	<s> g =	-0.1001152
-0.1249387	= g *	-0.4471581
-0.39794	[ g *	-0.3802113
-0.39794	[ g +
-0.1760913	] g 9
-0.1249387	= getchar (	0
-0.1760913	!= gln )	-0.1760913
-0.1760913	, gln )	-0.30103
-0.1249387	: gln ;	0.3521825
-0.09691001	= gln ;	0.2552725
-0.1760913	& glu )	-0.1760913
-0.1760913	, glu )	-0.30103
-0.1249387	? glu :	0
0	<s> gly (	-0.3309932
0	void gly (	-0.3309932
-0.154902	( h <<	0
-0.1760913	, h ,
-0.3521825	<s> h =	-0.2138798
-0.4771213	= h (	-0.30103
-0.6532125	= h .
-0.6532125	= h ;
-0.1249387	[ h *	0
-0.1760913	} h =
-0.1760913	and his )
-0.1760913	const his [	0
-1.041393	( i )	-0.3174204
-0.916454	( i ,	-0.243038
-0.916454	( i -
-1.217484	( i <
-0.4771213	( i =	0.04534172
-0.6368221	+ i &&
-0.6368221	+ i *
-0.8129134	+ i +
-0.8129134	+ i /
-0.1249387	++ i <
-0.09691001	+= i (
-0.7781513	, i )	-0.3174204
-0.4101745	, i ,	-0.05595142
-0.6532125	, i =	-0.1173856
-0.5228788	- i )
-0.69897	- i ;
-0.69897	- i ]
-0.8750613	; i +=
-0.3309932	; i <	-0.1180993
-0.5740313	; i =
-0.4771213	< i ;
-0.07572071	<s> i (	-0.2277983
-1.09691	<s> i =
-0.69897	= i *
-0.5228788	= i ;
-0.1760913	? i :
-0.6532125	[ i %	0.1249388
-0.4771213	[ i S	0
-0.4771213	[ i ]
-0.4259687	int i ;	-0.4101745
-0.30103	int i =	-0.5153256
-0.1249387	| i >>
-0.06694679	) if (	-0.1434221
-0.03476211	; if (	-0.2014141
-0.01046543	<s> if (	-0.1207223
-0.07918125	{ if (
-0.07918125	} if (
-0.6368221	( int )
-0.8129134	( int c
-0.544068	, int l
-0.8129134	; int *
-0.8129134	; int </s>
-0.8129134	; int i	-0.1760913
-1.041393	<s> int </s>
-1.041393	<s> int I
-0.8653014	<s> int i	-0.39794
-1.041393	<s> int k
-0.8653014	<s> int main	0.243038
-0.1760913	U int i	-0.1760913
-0.6532125	{ int X
-0.3679768	} int main	0.3679768
-0.1760913	( j ,	-0.1306159
-0.7201593	( j =
-0.1760913	+ j %
-0.5118834	, j )	-0.30103
-0.5118834	, j ,	-0.5274264
-0.8129134	, j =
-0.39794	- j %	0.1249388
-0.845098	-> j &&
-0.845098	-> j )
-0.447158	-> j +	-0.3309932
-0.845098	-> j =
-0.3521825	; j <
-0.4771213	; j =
-0.39794	<s> j *=
-0.39794	<s> j +=
-0.5228788	= j ;	-0.2218488
-0.5228788	= j =
-0.1760913	R j <
-0.1760913	U j =	-0.2340832
-0.4771213	[ j -
-0.30103	[ j S	-0.30103
-0.1760913	int j =
-0.5563025	( k )	-0.2839966
-0.6532125	( k ,
-0.9542425	( k -	-0.1760913
-0.5563025	( k =	-0.1171134
-0.30103	* k ,
-0.1760913	+ k ,
-0.2218488	, k ,
-0.4771213	- k ;
-0.6690068	; k ++	0
-0.845098	; k <
-0.6690068	; k =
-0.845098	; k [
-0.30103	[ k ]	0
-0.845098	( l )
-0.544068	( l ,
-0.845098	( l =
-0.1760913	) l (
-0.2218488	+= l ;	-0.4101745
-0.6532125	, l )	-0.39794
-0.2552725	, l ,
-0.09691001	-= l ;	-0.3309932
-0.2218488	; l =
-0.1760913	<< l -	-0.2552725
-0.4771213	<s> l +=
-0.7781513	<s> l =
-0.09691001	T l )	-0.39794
-0.30103	int l ,
-0.1760913	{ l =
-0.1760913	[ leu ]
-0.30103	; long long
-0.30103	unsigned long long
-0.4771213	unsigned long z	0
-0.5642715	( m (	0.30103
-0.4393327	( m ,	-0.20412
-0.7403627	( m >
-0.5228788	, m ,	-0.4471581
-0.5228788	, m =
-0.69897	, m [
-0.3679768	; m =
-0.544068	= m ;
-0.1760913	[ m *	0
-0.1760913	; main (
-0.09691001	<s> main (	-0.3290587
-0.06694679	int main (	-0.146128
-0.1760913	met main (	-0.4149733
0	= malloc (
-0.30103	( met )	0
-0.4771213	( met val	0
-0.1760913	<s> met main	0
-0.7596679	( n )
-0.4074853	( n ,	-0.06694677
-1.060698	( n =
-0.4771213	* n )
-0.30103	* n ;	-0.2340832
-0.39794	+ n +
-0.6232493	, n )	-0.4259687
-0.6232493	, n ,	-0.3187588
-1.021189	, n -
-1.021189	, n ;
-1.021189	, n =
-0.243038	- n )	-0.3881802
-0.60206	-> n )	-0.39794
-0.4259687	-> n ;	-0.359022
-0.60206	-> n =
-0.7403627	; n +=
-0.2632414	; n =	-0.1217336
-0.4771213	< n ;	-0.4101745
-0.4771213	= n ,
-0.30103	= n ;
-0.30103	[ n ]
-0.1760913	_ n =
0	<s> ndif </s>
-0.1249387	& not ,	-0.30103
-1.021189	( not )	0.4259687
-1.021189	( not ->
-0.1180993	( not .	-0.6948141
-0.09691001	* not .	-0.1896641
-0.1760913	++ not .	0.03218463
-1.079181	. not )	0.30103
-1.079181	. not =
-0.1583625	. not [	-0.4436975
-0.06694679	< not .	-0.69897
-0.69897	<s> not ->	-0.1760913
-0.154902	<s> not .	-0.3357921
-0.1249387	= not .	-0.3309932
-0.1760913	ala not )
-0.1760913	const not ,	-0.30103
-0.1760913	&& o [
-0.8750613	( o +	-0.3802113
-0.2730013	( o ,	-0.1497623
-0.8750613	( o X
-0.7923917	* o )
-0.6462637	* o +
-0.5882717	* o -
-0.8893017	* o ;	0.06069785
-0.8893017	* o =
-0.04139268	*= o ;	-0.2817248
-0.1760913	+= o *
-0.6368221	, o )	-0.3679768
-0.5118834	, o ,
-0.4149733	, o [	-0.1726307
-0.1760913	- o *
-0.4771213	; o =
-0.30103	; o [	-0.09066106
-1.021189	<s> o +=
-1.021189	<s> o -=	0
-0.1760913	<s> o =	-0.3010301
-0.544068	= o ;	0.4586379
-0.845098	= o >>	0
-0.544068	= o [	-0.2688453
-0.1249387	? o [	-0.3916911
-0.1249387	{ o =
-0.1760913	| o &
-0.30103	-> op &&	0
-0.1760913	<s> op =
-0.39794	[ optind +	0
-0.39794	[ optind ]	0
-0.8750613	( p +	0
-0.4771213	( p =
-0.8750613	( p [
-0.544068	* p ++	-0.3521828
-0.9700368	* p ,
-0.748188	* p ;	-0.09691003
-0.9700368	* p =
-1.146128	* p ]	0
-1.146128	* p ^
-0.845098	, p )	-0.1760913
-0.6690068	, p ,
-0.845098	, p =
-0.845098	, p [
-0.39794	- p /
-0.39794	. p </s>
-0.8129134	; p ++
-0.6368221	; p <	0
-0.4149733	; p =	-0.1804561
-0.1760913	<s> p =
-0.1249387	= p ;	-0.1180993
-0.1760913	[ p S	0
-0.1249387	^ p [	-0.2662679
-0.1760913	|| p (
0	<s> phe (	-0.2552725
0	void phe (	-0.2552725
0	= pow (	0
0	<s> printf (
-0.1249387	const pro *	0
-0.1760913	( puts (
-0.1760913	<s> puts (
-0.30103	( q </s>
-0.5740313	* q ++	0
-0.69897	* q ;
-0.69897	* q =
-0.39794	. q ;	-0.1091445
-0.39794	. q =	-0.4045706
-0.30103	; q [
-0.1249387	= q +
-0.1249387	{ q =
-0.1760913	) r =
-0.1760913	* r ++	0
-0.4771213	, r (
-0.6532125	, r )
-0.6532125	, r ,
-0.1760913	: r L
-0.4771213	; r =
-0.30103	= r ;
-0.4771213	{ r (
-0.4771213	{ r =
0	= realloc (
-0.60206	; return d	-0.1760913
-0.7781513	; return s	0.1249388
-0.7781513	; return u	0
-0.7403627	<s> return 0
0	<s> rewind (	0
-0.30103	&& s <	0
-0.39794	( s X	-0.1549019
-0.39794	) s =
-0.7403627	* s ,
-0.7403627	* s =
-0.1760913	*= s ;	-0.3388186
-0.07918125	+ s [
-0.1760913	++ s =
-0.1760913	+= s *
-0.544068	, s )	-0.2730013
-0.3679768	, s ,
-0.4149733	; s =
-0.8129134	; s L
-0.8129134	; s W
-0.09691001	< s W	-0.2730013
-0.544068	<s> s *=	0
-0.845098	<s> s +=
-0.6690068	<s> s -=
-0.6690068	<s> s =
-0.4771213	= s L
-0.4771213	_ s )	-0.39794
-0.6532125	_ s ,
-0.4771213	_ s =	-0.4357286
-0.1249387	return s ;	-0.4057654
-0.4771213	~ s )
-0.4771213	~ s ]	0
-0.1760913	( sec )	-0.2552725
-0.09691001	<s> sec =
-0.05115252	( ser )	0
-0.1760913	( sizeof (
-0.30103	* sizeof (
-0.09691001	, sizeof (	-0.1760913
-0.1249387	= sizeof (
-0.09691001	<s> static void	0
-0.1760913	typedef struct {	0
0	<s> switch (
-0.09691001	( sym_ ,	0
-0.7781513	( t )	-0.3679768
-0.7781513	( t +
-0.60206	( t =
-0.5642715	, t ,
-0.7403627	, t ;
-0.7403627	, t [
-0.243038	; t =
-0.1760913	< t ?
-0.60206	<s> t )
-0.60206	<s> t +=
-0.60206	<s> t =
-0.1760913	= t ;
-0.4771213	L t <	0.09691
-0.39794	<s> thr xor
-0.1760913	++ tla ;	0
-0.05799195	= trp ;	0
-0.3424227	<s> typedef struct	-0.2218488
-0.1760913	& tyr [
-0.1760913	<s> tyr =	-0.1760913
-0.09691001	! u R
-0.544068	( u /	0
-0.544068	( u =
-0.1760913	) u [
-0.4393327	* u )	-0.2218487
-0.7403627	* u ]	-0.1760913
-0.30103	+ u )
-0.4771213	+ u ,
-0.7269987	, u )	-0.3357921
-0.90309	, u +
-0.3590219	, u ,	-0.07357737
-0.7269987	, u [	-0.39794
-0.1249387	- u )	-0.39794
-0.1760913	-= u <<
-0.1760913	: u =	-0.3424227
-0.7269987	; u <	-0.1760913
-0.60206	; u =
-0.30103	; u [	-0.06279083
-0.1760913	<< u ;
-0.6532125	<s> u )
-0.6532125	<s> u =
-0.4771213	<s> u [
-0.5228788	= u <<	-0.1249388
-0.2218488	= u [	-0.30103
-0.1760913	[ u ]
-0.1760913	return u ;
-0.3679768	{ u =
-0.3679768	{ u [
-0.4771213	- unk )	-0.30103
-0.30103	- unk ]
-0.1760913	= unk ;	0
-0.1760913	>> unk )	-0.30103
-0.146128	<s> unsigned long	0.07918119
-0.1760913	&& v <
-0.8750613	( v -	-0.2552725
-0.5740313	( v -=	-0.07918122
-0.69897	( v =
-0.4771213	, v =
-0.4771213	- v )
-0.4771213	- v .
-0.30103	: v -
-0.30103	; v =
-0.8129134	= v +
-0.6368221	= v .
-0.6368221	= v ;
-0.8129134	= v =
-0.3679768	? v -
-0.544068	? v ?
-0.60206	[ v -	-0.3802113
-0.4259687	[ v ]	-0.2552725
-0.60206	[ v |	0.2218488
-0.90309	. val )	0
-0.30103	. val ;	0.1249386
-0.90309	. val =
-0.1760913	met val ,	0
-0.1249387	; void *
-0.2218488	<s> void </s>
-0.39794	static void gly	0
-0.39794	static void phe	0
-0.4771213	} void </s>
-0.4771213	( w )	-0.3521825
-0.9542425	( w ,
-0.9542425	( w Z	0
-0.7781513	( w f	-0.2552725
-0.1249387	) w (
-0.1249387	+= w ;	-0.1760913
-0.60206	, w (
-0.60206	, w =
-0.1760913	-= w ;	-0.05115253
-0.2730013	; w (	-0.1362197
-0.8750613	; w .
-0.39794	<s> w +=
-0.69897	<s> w =
-0.30103	{ w *
-0.30103	} w f
0	; while (	-0.6118199
0	<s> while (	-0.1221094
0	{ while (
0	} while (	-0.2596373
0	Q write (
-0.69897	( x ,
-0.4771213	( x .	-0.39794
-0.30103	+ x ,
-0.69897	, x )
-0.2730013	, x ,	-0.08493357
-0.1760913	- x )
-0.7403627	-> x )
-0.3424227	-> x ,	-0.6232493
-0.7403627	-> x =
-0.1249387	; x =
-0.7781513	= x .	-0.3521825
-0.4771213	= x ;	0
-0.1760913	int x ,
-0.1760913	w x ,	-0.4409091
-0.1760913	{ x =
-0.1249387	( xor =	0
-0.06694679	++ xor )	0
-0.06694679	; xor <	0
-1.060698	[ xor -	0
-0.06069784	[ xor ]	0
-0.1760913	&& y <
-0.8750613	( y )
-0.8750613	( y .	0
-0.69897	( y [	0.2218488
-0.8750613	( y ^
-0.2218488	* y )
-0.3521825	, y ,
-0.6532125	, y [	0.2218488
-0.2632414	-> y )	-0.39794
-0.7403627	-> y =
-0.69897	. y +	0.2218488
-0.5228788	. y =
-0.544068	; y (
-0.243038	; y =
-0.4771213	<s> y ->	-0.20412
-0.4771213	<s> y =	-0.2466723
-0.39794	= y ;	-0.1249388
-0.69897	= y =	-0.3928004
-0.1760913	int y ;
-0.1760913	& z )
-0.07918125	( z (	-0.1829307
-0.1249387	+ z *
-0.1326256	; z (	-0.1249387
-0.9777236	; z [	0.2218488
-0.544068	<s> z *=
-0.544068	<s> z +=
-0.544068	<s> z =
-0.4771213	= z .
-0.4771213	= z [	0.2218488
-0.1760913	>> z (	-0.3309932
-0.1760913	V z (	-0.4515672
-0.1760913	long z ;	0
-1.647383	) { *	0.07918122
-1.647383	) { .	-0.19382
-2.045323	) { ;
-0.6220771	) { </s>
-2.045323	) { H	0
-2.045323	) { J
-1.869232	) { L	-0.1760913
-1.869232	) { O	0
-1.568202	) { R	-0.1091444
-2.045323	) { T
-1.647383	) { U	0
-1.501255	) { V	0
-2.045323	) { W	0
-1.30496	) { _	0
-2.045323	) { a	0
-1.346353	) { b	-0.02996323
-2.045323	) { bc	0
-1.869232	) { c	0
-1.869232	) { case
-2.045323	) { char
-1.647383	) { d	-0.0457575
-2.045323	) { float
-1.39211	) { for	0
-1.647383	) { if	0.07918125
-1.443263	) { int	-0.01579425
-2.045323	) { l
-1.869232	) { o	0
-1.744293	) { q	0
-1.647383	) { r	-0.0457575
-1.744293	) { return
-1.568202	) { u	0.0669468
-1.744293	) { w	0
-2.045323	) { while	0
-2.045323	) { x	0
-1.647383	) { }
-0.09017663	<s> { </s>
-0.09691001	do { </s>
-0.447158	else { </s>
-0.845098	else { b
-0.09691001	struct { </s>
-0.3679768	) | (
-0.1760913	1023 | i	0.1249388
-0.1760913	8 | o	0
-0.1760913	f | b
-0.09691001	v | a
-0.1249387	) || (	-0.30103
-0.1760913	1 } )
-0.8515801	; } </s>
-1.829304	; } L
-1.829304	; } O
-1.528274	; } P
-1.130334	; } V
-1.829304	; } Z
-1.431364	; } _
-1.227244	; } else	0.30103
-1.829304	; } f
-1.829304	; } for	0.1249388
-1.829304	; } h	0
-1.528274	; } if	0.07918125
-1.285236	; } int	0
-1.653213	; } return
-1.528274	; } void	-0.1249387
-1.653213	; } w	-0.1760913
-0.7323937	; } }	-0.09151495
-0.1503859	<s> } </s>
-1.135663	<s> } else	-0.1180993
-1.311754	<s> } while	0
-1.612784	<s> } }
-0.8573325	} } </s>
-0.8573325	} } b	0.02118929
-1.255273	} } else	0.2498775
-1.255273	} } void
-0.6532125	} } }	-0.01579425
-0.1760913	& ~ -
-0.6368221	- ~ s
-0.8129134	- ~ u

\4-grams:
-0.05799195	! ! ! !	0.05799198
-0.30103	if ( ! (
-0.1760913	) * ! (
-0.1249387	0 ; ! u	0.09691
-0.39794	; b ! O
-0.1760913	) ) != EOF	0
-0.1760913	; K != b	0
-0.1760913	xor ] != gln	0
-0.1760913	, "> " ,	0
0	z ( "#" )	0
0	u , "$" ,
-0.1249387	2 , "%s" ,	0
0	1 , "> "	0
0	z ( "Q" )
-0.1760913	] , "r" )
-0.1760913	[ i % 5
-0.1760913	- j % 4
-0.1249387	gly ( & not	0
-0.1760913	- 1 & 15	0
-0.1760913	c = & _	0
-0.1760913	tyr = & tyr	0
-0.1760913	= __ & 15	0
-0.1249387	( ) && v	0
-0.1760913	b bf && s
-0.1760913	-> op && a	0
-0.544068	) && ( *
-0.544068	) && ( O	0.2218488
-0.60206	( ( ( and	0.2218488
-0.4771213	) ( ( (	-0.3521825
-0.4771213	) ( ( and	0.2218488
-0.30103	= ( ( (
-0.1760913	abs ( ( H
-0.30103	if ( ( i
-0.1249387	while ( ( i	-0.2340832
-0.30103	R ) ( L	0.243038
-0.4771213	R ) ( R	0
-0.4393327	and ) ( (	-0.2218488
-0.3424227	and ) ( not	0
-0.1760913	k ) ( )
-0.1760913	ser ) ( (
-0.90309	) * ( (
-0.1760913	F * ( 1	0.3679768
-0.7403627	) + ( C
-0.3424227	) + ( h	0
-0.1760913	Y + ( (
-0.1760913	] += ( i
-0.1760913	L , ( ,	0
-0.1760913	) - ( _O
-0.39794	) : ( a
-0.39794	0 : ( p	0
-0.146128	] = ( and	0.3010299
-0.39794	) B ( D	-0.2552725
-0.30103	; B ( D
-0.39794	, C ( *	0
-0.2218488	= C ( H	0
-0.1760913	= E ( N	0
-0.1760913	) E3 ( X	0
-0.1760913	) F ( L	0
-0.30103	= F ( )
-0.30103	V F ( w	0
-0.09691001	( G ( L	0
-0.4393327	) G ( sym_	0
-0.1760913	? G ( )	0.1249388
-0.1249387	* I ( o	0.09691
-0.1760913	<s> K ( k	0
-0.09691001	= M ( b	0
-0.30103	( N ( L	0.1249388
-0.60206	= N ( x	0.1249388
-0.60206	= N ( y
-0.1760913	( O ( *
-0.544068	= O ( -
-0.544068	= O ( y	0
-0.1249387	) O_ ( %
-0.544068	; P ( a	0
-0.30103	*= Q ( C
-0.1760913	) QR ( L	0
-0.1760913	= Q_ ( O_o	0
-0.90309	; W ( ++
-0.7269987	; W ( T	-0.2552725
-0.90309	; W ( m	0.1249388
-0.1760913	} W ( X	0.30103
-0.1760913	; Y ( )	0.1249388
-0.02482358	, _ ( )	-0.08432096
-0.60206	= _ ( j	0
-0.60206	= _ ( o	0
-0.1760913	; a ( X	0.1249388
-0.09691001	<s> err ( 2	0.07918125
-0.1760913	) exit ( 0	0
-0.1760913	<s> exit ( puts	0
-0.1760913	= exp ( -
-0.1760913	= f ( n	0
-0.5642715	) for ( ;
-0.5642715	) for ( i	0.30103
-0.6532125	; for ( ;	-0.09177037
-1.130334	; for ( O	0
-1.130334	; for ( i	0.4259687
-0.9542425	; for ( p	0.1249388
-1.130334	; for ( z	0.1249388
-0.50515	<s> for ( ;	-0.5477023
-0.7269987	<s> for ( k	0.09691
-0.4259687	<s> for ( xor	0
-0.6532125	{ for ( ;
-0.6532125	{ for ( g	0
-0.2218488	<s> free ( not	0
-0.1249387	= getchar ( )	0
-0.09691001	<s> gly ( &	0
-0.1760913	void gly ( ala	0
-0.1760913	= h ( p	0
-0.845098	<s> i ( 0	0.09691
-0.845098	<s> i ( 1	0.09691
-0.845098	<s> i ( 2	0.09691
-0.845098	<s> i ( 3	0.09691
-0.845098	<s> i ( 4	0
-0.845098	<s> i ( 5	0
-0.4771213	) if ( *
-0.60206	; if ( L	0
-0.7781513	; if ( p
-0.7096938	<s> if ( !	-0.1249388
-1.311754	<s> if ( (
-1.135663	<s> if ( *	-0.2552725
-1.135663	<s> if ( K	0
-0.9138138	<s> if ( not	0
-1.311754	<s> if ( sec	0
-0.1249387	( m ( )	-0.30103
-0.1249387	<s> main ( )	0.3679768
-0.3679768	int main ( )	0.243038
-0.3679768	int main ( int
-0.1760913	met main ( met	0
-0.1760913	<s> phe ( not	0
-0.1760913	void phe ( const	0
-0.1760913	= pow ( 2	0
-0.1760913	<s> rewind ( Q	0
-0.30103	, sizeof ( *
-0.60206	; w ( *
-0.60206	; w ( y
-0.39794	; while ( H
-0.39794	; while ( X
-0.60206	<s> while ( (	0
-0.7781513	<s> while ( 0	0
-0.30103	} while ( b	0
-0.39794	( z ( </s>
-0.6690068	; z ( "#"	0
-0.845098	; z ( (
-0.1760913	>> z ( )
-0.1760913	V z ( P	0
-0.1760913	) || ( O	0
-0.1249387	( "#" ) )	0
-0.1760913	, "r" ) )
-0.30103	) ( ) ;
-0.1249387	G ( ) :
-0.1249387	Y ( ) ;
-0.3679768	_ ( ) )	-0.7367585
-0.3679768	_ ( ) ,	-0.03778857
-0.1760913	getchar ( ) )
-0.30103	m ( ) &&	0
-0.4259687	m ( ) ==
-0.06694679	main ( ) {
-0.1760913	rand ( ) %
-0.39794	y ( ) :
-0.5642715	z ( ) )	-0.4357286
-0.4393327	z ( ) :
-0.5642715	z ( ) ;
-0.1249387	"#" ) ) ;	-0.4582359
-0.7403627	( ) ) )
-1.041393	( ) ) *
-0.5642715	( ) ) ,	0
-1.041393	( ) ) :	0.1249388
-1.041393	( ) ) ;	-0.4484761
-1.041393	( ) ) {
-0.6434527	) ) ) )	-0.2859662
-0.7403627	) ) ) ,	-0.30103
-1.041393	) ) ) ;
-0.6434527	) ) ) </s>
-0.8653014	) ) ) {	-0.4771213
-0.1760913	++ ) ) ;
-0.1760913	, ) ) </s>
-0.6532125	1 ) ) *
-0.1760913	1 ) ) ;	-0.1167772
-0.39794	2 ) ) ;
-0.60206	<s> ) ) )
-0.60206	<s> ) ) :
-0.1760913	Q ) ) )
-0.4771213	R ) ) )
-0.30103	R ) ) </s>
-0.30103	] ) ) ?	0
-0.09691001	c ) ) ;	-0.2723848
-0.1760913	n ) ) {
-0.1760913	T ++ ) )
-0.1760913	( , ) )	0
-0.1760913	, ... ) {
-0.2108534	( 0 ) ;	-0.07169321
-0.9542425	, 0 ) ,
-0.1413292	, 0 ) ;	-0.04575749
-1.079181	, 0 ) {	-0.4471581
-0.2218488	: 0 ) ;
-0.30103	< 0 ) {
-0.39794	= 0 ) {
-0.544068	+ 1 ) )
-0.7781513	, 1 ) )	0
-0.4771213	, 1 ) ;	-0.1091445
-0.4771213	- 1 ) )	-0.1249388
-0.3802112	- 1 ) ;	-0.02996324
-0.1760913	P 1 ) ;
-0.1760913	& 15 ) <	0
-0.1249387	, 16 ) ;	0
-0.4771213	( 2 ) ,
-0.4771213	, 2 ) ;
-0.4771213	, 2 ) </s>
-0.1760913	/ 2. ) /	0
-0.1760913	% 3 ) )
-0.4771213	( 4 ) +=	0
-0.1760913	<< 4 ) +
-0.1760913	( 41 ) ;
-0.39794	( 5 ) +=	0
-0.39794	( 5 ) ,
-0.1760913	, 6 ) ;	0
-0.1760913	& 63 ) -	0
-0.6532125	) ; ) ;
-0.6532125	) ; ) {
-0.1249387	; ; ) {
-0.05115252	W ; ) {	-0.2138798
-0.1760913	n ; ) {
-0.1760913	( B ) ,
-0.1760913	* C ) ;	0
-0.1760913	( K ) ;
-0.30103	* K ) </s>
-0.1760913	, L ) G	0
-0.1760913	== NULL ) {	0.1249388
-0.2218488	! O ) {	0
-0.1383027	( P ) {	0
-0.1760913	( Q ) ;	0.1249388
-0.1760913	* Q ) </s>
-0.8239087	, R ) (	0
-1.124939	, R ) )	-0.1760913
-0.6478175	, R ) </s>
-1.30103	, R ) F	0
-1.30103	, R ) G	0
-0.90309	, R ) J	0
-1.30103	, R ) L	0
-1.30103	, R ) QR	0
-0.30103	B R ) ,
-0.1760913	, SEEK_SET ) ;	0
-0.1760913	( W ) </s>
-0.1760913	p W ) ;
-0.5642715	( X ) ;
-0.7403627	( X ) </s>
-0.7403627	( X ) E3	0
-0.1760913	s X ) ;
-0.2218488	1 ] ) ;	-0.2730013
-0.1760913	i ] ) ;
-0.1760913	optind ] ) ;	-0.2730013
-0.1760913	xor ] ) )	-0.1760913
-0.243038	, _ ) ,	0
-0.544068	, _ ) </s>
-0.1760913	+ a ) *
-0.1760913	| a ) -
-0.30103	( and ) (	0
-1.041393	( and ) 16u	0
-0.1760913	_ b ) {
-0.1760913	, bf ) {	0
-0.1249387	, c ) ;	-0.1091445
-0.243038	. c ) )	0
-0.544068	. c ) ;
-0.06694679	, d ) ;	-0.1047353
-0.1760913	, dstr ) (
-0.1760913	( e ) {
-0.544068	( f ) )
-0.3679768	( f ) ,
-0.1760913	- f ) *
-0.1760913	!= gln ) {	0.1249388
-0.1760913	, gln ) ;	0
-0.1760913	& glu ) {	0.1249388
-0.1760913	, glu ) ;	0
-0.1760913	( i ) ;
-0.1760913	, i ) ;
-0.09691001	, j ) ;	0.07918125
-0.2218488	( k ) ;	0
-0.1760913	, l ) ;
-0.09691001	T l ) {	-0.2218488
-0.1760913	( met ) tyr
-0.4771213	, n ) )	0
-0.30103	, n ) ;	0.243038
-0.1249387	- n ) ;	0.243038
-0.1760913	-> n ) {	0
-0.1760913	( not ) ;	0.4259687
-0.1249387	. not ) ;	0.30103
-0.1760913	, o ) )
-0.1760913	, p ) ;
-0.1760913	, s ) ;
-0.1249387	_ s ) {	0
-0.1760913	( sec ) {	0
-0.60206	( ser ) (	0
-0.60206	( ser ) asx
-0.1760913	( t ) ;	0
-0.30103	* u ) {
-0.1760913	, u ) ;
-0.1760913	- u ) *
-0.1760913	- unk ) )
-0.1760913	>> unk ) ;	0
-0.1760913	. val ) {	0
-0.07918125	( w ) {	0
-0.06694679	++ xor ) {	0
-0.07918125	-> y ) ;	0.1249387
-0.1760913	C ( * a
-0.39794	if ( * not	0.1249388
-0.1760913	6 ) * (
-0.544068	char * * y	0
-0.1760913	2 , * Q3
-0.1760913	a , * b	0.1249388
-0.1760913	( 2 * o	0
-0.1760913	<< 6 * n
-0.1249387	T : * T	0
-0.1760913	d ; * s
-0.4771213	++ = * ++	0
-0.1760913	O = * p	0.3679768
-0.1760913	* C * C	0
-0.1760913	( E * K	0
-0.4771213	<s> E * a	0
-0.4771213	<s> E * e
-0.1760913	+= F * (	0
-0.1760913	( FILE * Q	0
-0.39794	<s> H * </s>
-0.544068	( L * )
-0.544068	( L * T	0
-0.1760913	[ W * p	0
-0.2218488	A [ * T	0.1249388
-0.1760913	( ala * const	0
-0.2552725	( char * )
-0.6532125	( char * d	0
-0.05799195	, char * *	0
-0.1760913	-= g * 16	0
-0.1249387	= g * Y	0
-0.1760913	[ g * 80	0
-0.1249387	[ h * 80	0
-0.1760913	[ m * 80	0
-0.1760913	const pro * const	0
-0.39794	) { * o	0
-0.1760913	4 ] *= -	0
-0.30103	<s> s *= s	0
-0.1760913	] ) + s	0
-0.1760913	_O ) + (	-0.3899711
-0.1760913	* 10 + s	0
-0.1760913	, 3 + x
-0.1249387	/ 4 + 1	0
-0.6532125	* 80 + g
-0.4771213	* 80 + m
-0.4771213	* 80 + n
-0.30103	= B + e
-0.1760913	, Q2 + 1
-0.1760913	* Y + (	0
-0.1760913	= d + i
-0.39794	-> j + 3
-0.39794	-> j + B	0
-0.1760913	( o + k	0
-0.1760913	[ optind + 1	0
-0.1760913	( p + 5	0
-0.1760913	. y + 1
-0.1760913	( * ++ s	0
-0.1760913	= * ++ T	0
-0.06694679	val ; ++ xor	0
-0.7403627	* T ++ )	0
-0.3424227	* T ++ =
-0.5642715	* T ++ ]
-0.1760913	; a ++ )
-0.1760913	+ g ++ ]	0.1249388
-0.1760913	; k ++ )
-0.6532125	* p ++ )
-0.6532125	* p ++ ,
-0.6532125	* p ++ -
-0.6532125	* p ++ =	0
-0.30103	* q ++ ,
-0.1760913	* r ++ =
-0.1760913	4 ) += o	0.2218488
-0.1760913	5 ) += o	0.2218488
-0.30103	, O0 += O1
-0.30103	; d += H	0
-0.39794	<s> d += g
-0.1760913	"> " , 2	0
-0.1760913	, "%s" , y	0
-0.1760913	, ( , )	0
-0.5642715	( ) , O	0.1760913
-0.7781513	) ) , O	0.30103
-0.30103	) ) , Q
-0.1249387	_ ) , B	0
-0.3424227	, 0 , 0	0
-1.041393	, 0 , W	0
-0.1760913	: 0 , n
-0.3832167	= 0 , </s>
-1.161368	= 0 , j
-0.30103	( 1 , ">	0
-0.30103	, 1 , 0	0
-0.30103	= 1 , </s>
-0.4771213	( 2 , "%s"	0
-0.6532125	( 2 , 0	0
-0.1760913	/ 2 , *	0
-0.1760913	= 3 , _	0
-0.1760913	= 6 , _	0.1249388
-0.1760913	>> 8 , x	0
-0.1760913	* A , *
-0.1760913	, E , F	0
-0.30103	, F , i
-0.1249387	( H , 0	0
-1.30103	( L , (	0
-0.8239087	( L , N	0.1760913
-0.1706962	( L , R	0
-1	( L , _	0
-0.1760913	) L , N	0.4771213
-0.05115252	, N , R	0.04575735
-0.1760913	* Q3 , Q2
-0.39794	( R , L	0
-0.39794	( R , _	0
-0.39794	-- T , a
-0.1249387	, W , p	-0.1760913
-0.4259687	( X , 0	0
-0.1760913	w Z , n	0
-0.4771213	* a , *	0
-0.30103	( b , u	0
-0.30103	, c , d
-0.1760913	* d , int	0
-0.4771213	, d , t
-0.09691001	T d , T	0
-0.30103	, e , k	0
-0.1760913	L e , r
-0.30103	( f , </s>
-0.1760913	w f , w
-0.30103	( i , 0
-0.544068	, i , j	0
-0.845098	( j , 0	0
-0.845098	( j , 6	0
-0.544068	( j , u	0
-0.1249387	, j , k	0
-0.30103	( m , e	0
-0.1249387	, m , n	0
-0.4771213	( n , d	0
-0.2218488	, n , o	0
-0.1760913	& not , glu	0
-0.1760913	const not , const	0
-0.60206	( o , 0	0.1249388
-0.60206	( o , 16	0
-0.09691001	( sym_ , R	0
-0.544068	, u , 1
-0.1760913	met val , const	0
-0.4259687	, x , y	0
-0.09691001	-> x , K	0
-0.1760913	w x , ...	0
-0.1760913	63 ) - 32	0
-0.1760913	] *= - 1
-0.3521825	( 1 - n	0
-0.1760913	m = - ~
-0.1760913	p = - 1
-0.1760913	y = - 1	0.06694677
-0.1760913	( F - 1
-0.1760913	( I - x	0
-0.30103	* O0 - OO	0
-0.1760913	T [ - b	0
-0.544068	p [ - 1	0.30103
-0.1249387	u [ - 1	0.1760913
-0.1760913	( asp - asn	0
-0.1760913	* f - c
-0.1760913	( k - v	0
-0.1760913	<< l - 1	0
-0.1760913	( v - f	-0.2552725
-0.1760913	[ v - D
-0.1760913	[ xor - unk	0
-0.1249387	; R -- T	0
-0.1760913	* T -- =
-0.1760913	<s> d -= g
-0.1760913	{ d -= l	0
-0.1760913	<s> o -= g	0
-0.30103	( v -= u	0
-0.1760913	( A -> j
-0.1760913	< A -> j
-0.1760913	+ B -> j	-0.30103
-0.39794	, K -> x	0
-0.39794	, K -> y	-0.20412
-0.1249387	= K -> n	-0.1760913
-0.1760913	= b -> n	0
-0.69897	<s> e -> a	0
-0.69897	<s> e -> b	0
-0.69897	<s> e -> x	0
-0.69897	<s> e -> y	0
-0.1760913	<s> not -> not
-0.1249387	<s> y -> b	0
-0.1760913	} ) . _
-0.1760913	1 ] . y
-0.1760913	L ] . q	-0.2552725
-0.1760913	k ] . y	-0.1760913
-0.39794	( asn . not
-0.39794	( asn . val
-0.1760913	- asn . not	-0.1091445
-0.1760913	<s> asn . not
-0.02802872	( not . not	-0.4918445
-0.09691001	* not . not
-0.1760913	++ not . not	0.08218673
-0.06694679	< not . val	-0.39794
-0.06694679	<s> not . not	-0.2188433
-0.1760913	= not . val	-0.09691003
-0.09691001	( x . c	-0.1249388
-0.1760913	= x . _
-0.1760913	( y . c	0
-0.2218488	) { . _	0
-0.1760913	x , ... )	0
-0.1760913	2. ) / p
-0.1760913	( C / 4
-0.1760913	( u / 5	0
-0.1760913	exit ( 0 )	-0.06214792
-0.09691001	i ( 0 )
-0.1760913	while ( 0 <
-0.1249387	) , 0 )
-0.39794	0 , 0 )	-0.1426675
-0.30103	0 , 0 ,	-0.3565474
-0.09691001	1 , 0 ,
-0.1760913	2 , 0 )	0.07918122
-0.1249387	H , 0 )	0.07918122
-0.1760913	X , 0 )	-0.4393327
-0.1760913	] , 0 )	0.07918122
-0.1760913	j , 0 )	-0.4259687
-0.1760913	k , 0 )	0.07918122
-0.1249387	o , 0 )	-0.04575753
-0.1760913	s < 0 )
-0.30103	t < 0 ;
-0.4771213	O = 0 ,
-0.30103	O = 0 ;	-0.4593925
-0.1760913	Q0 = 0 ,
-0.69897	] = 0 )
-0.69897	] = 0 :	0
-0.30103	] = 0 ;	-0.1563472
-0.1760913	_0 = 0 ,
-0.1760913	a = 0 ;	-0.4502491
-0.4771213	c = 0 )
-0.30103	c = 0 ;	-0.4116197
-0.1760913	g = 0 ;	-0.4593925
-0.5642715	i = 0 ,	-0.446087
-0.1962947	i = 0 ;	-0.7895807
-0.69897	j = 0 ,
-0.154902	j = 0 ;	-0.7259117
-0.1760913	k = 0 ;	-0.4593925
-0.1249387	l = 0 ;
-0.1760913	o = 0 ;
-0.1249387	0 ? 0 :
-0.1760913	by ? 0 :	-0.30103
-0.07918125	u [ 0 ]	-0.1249387
-0.06694679	* ( 1 -	-0.2218488
-0.09691001	i ( 1 )
-0.1760913	write ( 1 ,	-0.1760913
-0.1760913	4 + 1 ,
-0.1760913	optind + 1 ]	-0.30103
-0.1760913	) , 1 )
-0.1249387	, - 1 )	-0.4259688
-0.146128	= - 1 ;	0.07918122
-0.1760913	W - 1 ]	0.1760912
-0.07918125	[ - 1 ]	-0.1249388
-0.1760913	l - 1 )	-0.2430381
-0.1760913	n - 1 )
-0.1760913	o = 1 -
-0.1760913	e [ 1 ]
-0.1760913	k [ 1 ]
-0.1760913	p [ 1 ]
-0.09691001	u [ 1 ]
-0.1760913	] * 10 +	0
-0.1760913	] = 10 ;
-0.1760913	) < 14 &
0	h = 14695981039346656037ULL ;	0
-0.1760913	1 & 15 )	0
-0.1760913	__ & 15 ,
-0.1760913	g * 16 ;	0
-0.1760913	o , 16 )	0.1249388
0	and ) 16u )
-0.1760913	R % 2 *
-0.1760913	( ( 2 *	0
-0.07918125	err ( 2 ,	-0.4259687
-0.09691001	i ( 2 )
-0.1760913	pow ( 2 ,
-0.1760913	" , 2 )
-0.1760913	) / 2 )
-0.1760913	cys >> 2 )
-0.1249387	u [ 2 ]
-0.1760913	) % 3 *
-0.09691001	i ( 3 )
-0.1760913	) - 3 )
-0.1760913	n - 3 ]	0
-0.1760913	O = 3 ,	0
-0.1249387	o [ 3 ]
-0.1249387	u [ 3 ]	-0.30103
-0.1760913	) - 32 )
-0.1760913	o >> 32 <<	0
-0.1760913	+ ( 4 -
-0.1249387	i ( 4 )	-0.30103
-0.1249387	o [ 4 ]
-0.07918125	u [ 4 ]	-0.3565474
-0.1760913	8 >> 40 )
0	w ( 41 )	0
-0.1760913	w ( 42 )
-0.1249387	i ( 5 )	-0.2552725
-0.1760913	p + 5 ,
-0.1760913	u / 5 )
-0.1249387	u [ 5 ]
-0.1760913	b << 56 ;	0
-0.1760913	j , 6 )	0
-0.1760913	O = 6 ,	0
-0.1760913	O = 7 ,
-0.1760913	32 << 8 |	0
-0.1760913	O = 8 ,
-0.1760913	g * 80 +
-0.1249387	h * 80 +	-0.4259688
-0.1760913	m * 80 +	-0.30103
-0.7403627	( ) : (
-0.7403627	( ) : </s>
-0.7403627	( ) : v	0
-0.1249387	) ) : (	-0.3802113
-0.1760913	= 0 : 0
-0.4771213	? 0 : (	-0.2552725
-0.1760913	? 1 : 0
-0.1249387	? glu : gln	0
-0.9294189	for ( ; (
-0.9294189	for ( ; *
-0.7533277	for ( ; ;	0
-0.9294189	for ( ; K	0
-0.9294189	for ( ; g
-0.7533277	for ( ; n
-0.39794	" ) ; </s>
-0.39794	" ) ; for	0.2762064
-0.1760913	"Q" ) ; o	0
-0.4771213	( ) ; </s>
-0.9542425	( ) ; for	0.2762064
-0.6532125	( ) ; }
-0.5581545	) ) ; </s>
-1.194977	) ) ; R	0.1249388
-1.194977	) ) ; U	-0.1760913
-1.371068	) ) ; s
-1.371068	) ) ; z
-0.8939466	) ) ; }	-0.1362197
-0.5118834	0 ) ; </s>
-1.290035	0 ) ; U	-0.3521825
-1.290035	0 ) ; b
-1.290035	0 ) ; for	0.2762064
-0.9890046	0 ) ; }
-0.447158	1 ) ; </s>
-0.845098	1 ) ; b	-0.3174204
-0.1249387	16 ) ; </s>
-0.2218488	2 ) ; </s>
-0.1760913	3 ) ; </s>
-0.1760913	32 ) ; </s>
-0.1760913	6 ) ; </s>
-0.4259687	<s> ) ; }
-0.1760913	C ) ; </s>
-0.1760913	L ) ; }
-0.1249387	Q ) ; </s>
-0.1760913	SEEK_SET ) ; </s>
-0.1760913	W ) ; }
-0.4771213	X ) ; )
-0.4771213	X ) ; }
-0.1760913	Y ) ; </s>
-0.50515	] ) ; )	-0.1127043
-0.4259687	] ) ; </s>
-0.544068	c ) ; break	0.1249388
-0.243038	c ) ; }	-0.1983676
-0.4393327	d ) ; </s>
-0.1760913	e ) ; </s>
-0.1760913	fw ) ; }
-0.1760913	gln ) ; </s>
-0.1760913	glu ) ; </s>
-0.1760913	his ) ; </s>
-0.30103	i ) ; </s>
-0.07918125	j ) ; </s>
-0.1760913	k ) ; </s>
-0.06694679	n ) ; </s>
-0.05799195	not ) ; </s>
-0.1760913	r ) ; }
-0.1760913	sec ) ; </s>
-0.1760913	t ) ; }	-0.4536402
-0.1760913	unk ) ; </s>
-0.05799195	y ) ; </s>
-0.1760913	W -- ; )
-0.30103	: 0 ; }
-0.1760913	<s> 0 ; }
-1.221849	= 0 ; !	0
-0.9208187	= 0 ; </s>
-1.39794	= 0 ; O
-1.39794	= 0 ; U	0
-1.221849	= 0 ; a	0
-1.39794	= 0 ; for	0
-1.39794	= 0 ; g	0
-0.9208187	= 0 ; i	0
-1.221849	= 0 ; j
-1.39794	= 0 ; k
-0.8538719	= 0 ; }
-0.39794	+ 1 ; </s>
-0.30103	- 1 ; </s>
-0.2552725	= 1 ; </s>
-0.1760913	= 14695981039346656037ULL ; </s>
-0.1760913	* 16 ; </s>
-0.1760913	<< 56 ; }
-0.1760913	>> 8 ; G	0
-0.1249387	( ; ; )	0
-0.845098	= A ; D
-0.845098	= A ; f
-0.6690068	= A ; s
-0.30103	+= H ; </s>
-0.1760913	-= H ; </s>
-0.1760913	= K ; </s>
-0.1760913	goto O ; }
-0.1760913	++ T ; *
-0.7781513	; U ; d	0
-0.60206	; U ; p	0
-0.09691001	d W ; )	0.2552725
-0.1760913	s W ; )	0.4771213
-0.1760913	*= Y ; </s>
-0.09691001	1 ] ; </s>
-0.1249387	EOF ] ; </s>
-0.09691001	S ] ; V	0
-0.1249387	xor ] ; </s>
-0.1760913	= a ; </s>
-0.1760913	!= b ; K	0
-0.09691001	* b ; </s>
-0.1249387	= b ; </s>
-0.1760913	-= bf ; b
-0.30103	; break ; }
-0.06694679	<s> break ; </s>
-0.1760913	<s> c ; c
-0.1760913	+= d ; </s>
-0.1760913	- d ; }
-0.1760913	-= d ; </s>
-0.1760913	+= e ; </s>
-0.1760913	. e ; </s>
-0.544068	= e ; </s>
-0.243038	= e ; }
-0.05799195	* g ; </s>
-0.05115252	*= g ; </s>
-0.1760913	+= g ; </s>
-0.1249387	: gln ; </s>
-0.09691001	= gln ; </s>
-0.1249387	int i ; </s>
-0.1760913	= j ; </s>
-0.1249387	+= l ; </s>
-0.39794	-= l ; </s>
-0.39794	-= l ; d
-0.1760913	* n ; </s>
-0.1249387	-> n ; </s>
-0.1760913	< n ; )	0
-0.09691001	* o ; </s>
-0.04139268	*= o ; </s>
-0.30103	= o ; </s>
-0.39794	* p ; </s>
-0.4771213	= p ; for	0
-0.1760913	. q ; </s>
-0.1760913	*= s ; </s>
-0.1249387	return s ; }	-0.1760913
-0.1760913	++ tla ; </s>
-0.4259687	= trp ; </s>
-0.30103	= trp ; xor	0
-0.1760913	= unk ; xor	0
-0.1760913	. val ; ++	0
-0.6532125	. val ; </s>
-0.1249387	+= w ; </s>
-0.1760913	-= w ; </s>
-0.09691001	= x ; </s>
-0.1249387	= y ; </s>
-0.1760913	long z ; </s>
-0.1760913	15 ) < 14	0
-0.3679768	; i < s	0
-0.1249387	; p < n	0
-0.1760913	&& s < 0	0
-0.1249387	L t < 0	-0.1760913
-0.1760913	; u < i
-0.07918125	; xor < not	0
-0.1760913	>> 32 << 8	0
-0.1760913	| b << 56	0
-0.544068	( h << 8
-0.1249387	= u << t
-0.1760913	p ++ = *
-0.39794	; E = T
-0.1760913	; K = K	0
-0.7403627	( O = *	0
-0.5642715	( O = 0	-0.1760913
-0.7403627	( O = 8	0
-0.4771213	, O = 3	0
-0.6532125	, O = 7	0
-0.1760913	= T = B	-0.2552725
-0.60206	<s> Y = f	0
-0.1760913	0 ] = x
-0.4393327	1 ] = 0	-0.39794
-0.7403627	1 ] = y
-0.1760913	<s> ] = j
-0.30103	L ] = o	-0.2552725
-0.30103	[ ] = {
-0.1760913	a ] = j	0.1249388
-0.1760913	v ] = A	0
-0.1249387	xor ] = (	-0.05799198
-0.1760913	. _ = x	0
-0.1760913	( a = 0	0
-0.30103	<s> a = b	0
-0.4771213	<s> b = K	0
-0.4771213	<s> b = b	0
-0.1760913	. c = &	0
-0.1760913	; c = 0
-0.39794	* d = P
-0.2218488	<s> d = f	0
-0.1760913	) e = d	0
-0.1760913	L e = A	0.1249388
-0.30103	( g = 0	0
-0.9542425	<s> g = (
-0.9542425	<s> g = _	0
-0.7781513	<s> g = g	0
-0.9542425	<s> g = pow	0
-0.30103	<s> h = 14695981039346656037ULL	0
-0.5642715	( i = 0	-0.1627273
-0.30103	, i = 0	-0.3388186
-0.09691001	int i = 0	-0.1627273
-0.1760913	U j = 0	0.04575744
-0.39794	( k = 0	0
-0.4771213	; n = (
-0.845098	<s> o = 0
-0.845098	<s> o = 1	0
-0.6690068	<s> o = Q	0
-0.6690068	<s> o = _	0
-0.39794	; p = T
-0.1760913	. q = o	0
-0.1760913	_ s = A	0
-0.1760913	<s> tyr = &	0
-0.1760913	: u = M	0.2218488
-0.243038	( xor = trp	0
-0.544068	( xor = unk	0
-0.30103	<s> y = N	0
-0.1760913	= y = -
-0.1760913	+ 1 == b	0
-0.1760913	v ] == T	0
-0.1760913	( cys >> 2	0
-0.1760913	= o >> 32	0
-0.1760913	) ) ? glu	0.1249388
-0.3679768	< 0 ? 0	0
-0.1760913	z , A ,
-0.1760913	<s> = A ;
-0.1760913	] = A [	0
-0.1760913	c = A ;
-0.1760913	d = A ;
-0.1249387	e = A ;
-0.1760913	s = A ;	-0.3723859
-0.1760913	p ( B )	0
-0.1760913	i ) B (
-0.1760913	j + B ->	0
-0.1249387	) , B R	0.09691
-0.39794	T = B ;
-0.1760913	; b B &
-0.1249387	} b B &
-0.30103	Q ( C ,
-0.1760913	C * C )	0
-0.39794	B ( D c	0
-0.1760913	w = D d	0
-0.1760913	d = E (	0
0	X ) E3 (	0
-0.1760913	) != EOF )
-0.1760913	tyr [ EOF ]	0
-0.1760913	if ( F <
-0.1760913	R ) F (	0
-0.1760913	E , F ,
-0.1760913	A = F (
-0.1249387	; V F (	-0.1760913
-0.09691001	J ( G (	0
-0.1760913	0 ) G (
-0.1760913	L ) G (	-0.2808266
-0.1760913	R ) G (	-0.2808266
-0.1760913	) ; G (
-0.1760913	8 ; G [
-0.1249387	C ( H ,	0
-0.1760913	d += H ;
-0.1760913	) { H =
-0.1760913	V * I (	0.1249388
-0.1760913	1 - I (
-0.09691001	; b I ==
-0.09691001	R ) J (
-0.1760913	) ; J (
-0.1760913	for ( K =
-0.1249387	if ( K ->
-0.1760913	E * K )	-0.1760913
-0.09691001	x , K ->	-0.4771213
-0.1760913	( ; K !=	0
-0.1760913	b ; K =	0
-0.1760913	K = K ->	0.1249388
-0.1760913	b = K ;	0
-0.1760913	W R K (
-0.06694679	) ( L ,	0.05799186
-0.1760913	F ( L ,	0.01099536
-0.1760913	F0 ( L ,	0.01099536
-0.1760913	F1 ( L ,	0.01099536
-0.09691001	G ( L ,	-0.6532125
-0.1760913	K ( L ,	0.01099536
-0.1760913	M ( L ,
-0.1249387	N ( L ,	-0.1139434
-0.1760913	QR ( L ,	0.01099536
-0.1760913	QS ( L ,	0.01099536
-0.1760913	if ( L ==
-0.1760913	R ) L ,	0
-0.1760913	R , L )	0
-0.1760913	b [ L ]	-0.30103
-0.30103	z [ L ]	-0.1760913
-0.1249387	( f L e	-0.30103
-0.39794	= f L e	-0.30103
-0.39794	= f L f
-0.1760913	) { L *
-0.09691001	u = M (	0
-0.1760913	E ( N (
-0.05115252	L , N ,	0
-0.1760913	y = N (
-0.1249387	&& ! O )	-0.07918125
-0.09691001	&& ( O =
-0.1760913	<s> ( O =	-0.3388186
-0.1760913	for ( O =	-0.3899711
-0.1760913	|| ( O =
-0.07918125	) , O =	-0.3467875
-0.1249387	] = O (	-0.3309932
-0.1760913	o [ O +
-0.1760913	) { O =
-0.1760913	( * O0 -
-0.1760913	) , O0 +=
-0.1760913	O0 - OO )
-0.1760913	Q_ ( O_o )
-0.1760913	z ( P )
-0.1249387	) ; P (
-0.1760913	rewind ( Q )	0
-0.1760913	FILE * Q )	0
-0.1249387	o = Q (
-0.1760913	) , Q0 +=
-0.1760913	+= ! QO *
0	R ) QR (	0
-0.1760913	) ( R ,	-0.2552725
-0.1760913	) , R )
-0.01579427	L , R )	-0.1566627
-0.154902	N , R )	-0.2283148
-0.69897	N , R </s>
-0.09691001	sym_ , R )	-0.6283889
-0.1249387	) ; R --	0
-0.09691001	, B R )	0
-0.4771213	) { R *
-0.4771213	) { R a
-0.1249387	[ i S ]	0
-0.1249387	[ j S ]	0
-0.1760913	[ p S ]
-0.1760913	<s> ( T [
-0.39794	W ( T <
-0.39794	W ( T </s>
-0.1249387	( * T ++
-0.1249387	) * T --	0
-0.1249387	: * T ==
-0.2218488	; * T ++	-0.3388186
-0.1760913	L * T )
-0.1249387	[ * T ++	-0.4637573
-0.1760913	* ++ T ;
-0.09691001	d , T l	0
-0.1760913	? -- T ,
-0.1249387	R -- T ,
-0.1760913	] == T ++
-0.30103	) ; U ;	-0.2218487
-0.60206	) ; U int
-0.1760913	0 ; U ;
-0.09691001	) { U ;
-0.1249387	] ; V F	0
-0.544068	) { V *
-0.1760913	O ( W )	0
-0.1760913	0 , W ,	0.1249388
-0.1760913	i - W /
-0.09691001	) ; W (
-0.1760913	; d W --
-0.1760913	D d W ;	0.2218488
-0.1760913	L d W ;	0.2218488
-0.39794	< s W ;	0
-0.39794	< s W R
-0.1760913	) { W (
-0.1760913	E3 ( X )	-0.3899711
-0.07918125	W ( X )	-0.2596373
-0.1249387	a ( X ,	-0.2730013
-0.1249387	bj ( X ,
-0.1760913	) ; X =
-0.30103	( s X [
-0.1760913	g * Y +	0
-0.1760913	) ; Y (	0
-0.1760913	D d Y [
-0.1760913	L d Y [
-0.1760913	D e Y [
-0.1760913	( w Z ,	0
-0.1760913	= A [ v	-0.30103
-0.1760913	= D [ (
-0.1760913	( Q [ d	0
-0.1760913	<s> Q [ k	-0.1760913
-0.1760913	= Q [ k
-0.1760913	b X [ u	0
-0.30103	d Y [ j	0.1249388
-0.4259687	-> b [ L	0
-0.60206	-> b [ x
-0.60206	-> b [ y
-0.30103	, e [ 1	0
-0.1760913	const his [ ]	0
-1.09691	. not [ leu	0
-0.05551733	. not [ xor	0
-0.39794	, o [ 3	0.1249388
-0.4771213	; o [ g
-0.30103	= o [ m	0
-0.1760913	? o [ g	-0.2552725
-0.1249387	^ p [ -
-0.1760913	, u [ 4	0.30103
-0.60206	; u [ 3	0.1249388
-0.4771213	= u [ 0	0.30103
-0.4771213	= u [ 1
-0.1760913	( y [ optind
-0.1760913	, y [ optind
-0.1760913	; z [ L	-0.1760913
-0.1760913	= z [ L
-0.1249387	g ++ ] =
-0.69897	[ 0 ] ;
-0.5228788	[ 0 ] =	0
-0.4771213	+ 1 ] )	-0.07918125
-0.4771213	+ 1 ] .	0
-0.1091445	- 1 ] =	-0.1716821
-0.7781513	[ 1 ] )
-0.7781513	[ 1 ] ,
-0.7781513	[ 1 ] ;	0.2218488
-0.6532125	[ 1 ] =	-0.2138798
-0.1760913	+ 2 ] =
-0.4259687	[ 2 ] ,
-0.60206	[ 2 ] =
-0.1760913	- 3 ] =
-0.6532125	[ 3 ] *
-0.6532125	[ 3 ] ,
-0.4771213	[ 3 ] =
-0.7403627	[ 4 ] *=	0
-0.4393327	[ 4 ] ,
-0.39794	[ 5 ] =
-0.1760913	[ 6 ] ,
-0.1760913	[ EOF ] ;	0.1249388
-0.1760913	[ H ] =
-0.4771213	[ L ] .	0
-0.30103	[ L ] =
-0.1760913	i S ] ;
-0.1760913	j S ] )
-0.1760913	his [ ] )
-0.1760913	[ d ] .
-0.1249387	[ k ] .	0
-0.1760913	[ optind ] )	0
-0.1760913	* p ] ,
-0.1760913	~ s ] =
-0.1760913	* u ] :
-0.1760913	[ v ] ==	0
-1	[ xor ] !=	0
-1	[ xor ] &
-0.8239087	[ xor ] )	0
-0.8239087	[ xor ] ;	0
-0.69897	[ xor ] =	0
-1	[ xor ] >>
-0.1760913	= & _ f	0
-0.09691001	) , _ (	0.5563025
-0.1760913	-- , _ (
-0.1760913	3 , _ (	0.7781513
-0.1249387	6 , _ (	0.6532125
-0.09691001	L , _ )	-0.3309932
-0.1760913	R , _ )	-0.3309932
-0.1249387	{ . _ =	0
-0.1760913	g = _ (	-0.3521825
-0.1249387	o = _ (	-0.3521825
-0.7403627	) { _ n	0
-0.7403627	) { _ s	0
-0.1760913	op && a ->
-0.1760913	P ( a ,
-0.1249387	for ( a =	0
-0.1760913	| ( a &
-0.1760913	( * a ,
-0.1760913	E * a ,	-0.30103
-0.1760913	] += a ;
-0.1760913	e -> a =
-0.1760913	0 ; a <
-0.1760913	e = a </s>
-0.1760913	n >> a </s>
-0.1760913	) { a =
-0.1760913	gly ( ala *	0
-0.1760913	( const ala not	0
-0.1760913	% ( and )	-0.4357286
-0.09691001	( ( and )	0
-0.03778856	= ( and )	-0.2632415
-0.1760913	sizeof ( and )
-0.1760913	, const and his	0
-0.1760913	] & arg )
-0.1760913	asp - asn .	0
-0.1760913	K != b ;	0
-0.09691001	M ( b ,	-0.30103
-0.1760913	while ( b &&
-0.1249387	, * b ;	0.09691
-0.1760913	[ - b ]
-0.1760913	A -> b [	-0.3521825
-0.1760913	B -> b [	-0.3521825
-0.1760913	e -> b =
-0.1249387	y -> b [	-0.39794
-0.6368221	) ; b !
-0.5118834	) ; b I	0.09691
-0.1760913	a = b ;	0.1249388
-0.1760913	b = b ->	0
-0.1760913	1 == b ->
-0.5228788	) { b bf	0
-0.39794	} } b B	0.1249388
0	) { bc (
-0.1760913	-- ) bd (
-0.1760913	be , bf )	0
-0.1760913	{ b bf &&	0
-0.1760913	) ) break ;
-0.1249387	) ; break ;
-0.1760913	x . c )	0.1461281
-0.1760913	y . c )	-0.1091445
-0.1760913	{ . c =	0
-0.1760913	( D c ,
-0.1760913	) { c =
-0.1760913	, ( char *	-0.1249388
-0.1760913	phe ( const ala	0
-0.1760913	ala * const not	0
-0.1760913	pro * const his	0
-0.1760913	not , const and	0
-0.1760913	val , const pro	0
-0.1760913	C ( d ,
-0.1760913	char * d ,	0
-0.1760913	c , d ,
-0.1249387	n , d )	0.243038
-0.1760913	U ; d W	0
-0.1760913	e = d +	0
-0.1760913	< D d W	0
-0.1760913	= D d Y	0
-0.1760913	a L d Y
-0.30103	s L d W
-0.09691001	( T d ,	0
-0.1760913	Q [ d ]	0
-0.1760913	; return d -
-0.39794	) { d -=	0
0	break ; default :
-0.1249387	] , e [
-0.1760913	m , e ,	-0.1760913
-0.30103	f L e ,	0
-0.4771213	f L e ;
-0.20412	; } else {	-0.1492981
-0.06694679	<s> } else {	-0.5672979
-0.1760913	} } else {
-0.1760913	B ( f L	0.1249388
-0.1760913	F ( f )
-0.1249387	W ( f )
-0.1760913	a * f -	0
-0.39794	v - f )	0
-0.39794	v - f ?
-0.1760913	Y = f (
-0.1249387	d = f (	-0.1249388
-0.1760913	& _ f }
-0.1760913	( w f ,	0
-0.09691001	) ) for (
-0.1760913	; ) for (	-0.3388186
-0.08432088	) ; for (	-0.09042789
-0.7533277	) ; for </s>
-0.1760913	++ ; for (
-0.1760913	0 ; for (
-0.1760913	p ; for (
-0.04575749	) { for (	0
-0.1760913	; } for (
-0.1760913	for ( g =	-0.1760913
-0.07918125	) * g ;	0.1249387
-0.06694679	) *= g ;	0.1091445
-0.1760913	80 + g ++	0
-0.1760913	) , g =
-0.1760913	o -= g *	0
-0.1760913	0 ; g <
-0.1249387	g = g *	0
-0.39794	o [ g *	0
-0.39794	o [ g +
-0.1760913	g = getchar (	0.1249388
-0.1760913	] != gln )	0
-0.1249387	glu : gln ;	0
-0.1760913	sec = gln ;	0.2218488
-0.1760913	not , glu )	0
-0.1249387	) ? glu :	0
0	static void gly (	0
-0.07918125	+ ( h <<
-0.1760913	] = h (	0
-0.1249387	o [ h *	0
-0.1760913	; } h =
-0.1760913	const and his )
-0.1760913	* const his [	0
-0.243038	( ( i =
-0.05799195	for ( i =	-0.1047354
-0.1249387	; ++ i <
-0.30103	) , i =
-0.1760913	<s> - i ;
-0.1760913	j - i )
-0.09691001	) ; i =
-0.07918125	0 ; i <
-0.1760913	U ; i <	-0.2340832
-0.1249387	Y [ i S	0
-0.1760913	; int i =	0.2218488
-0.1249387	<s> int i ;	0
-0.1760913	U int i =	0.2218488
-0.1760913	1023 | i >>
-0.1249387	) ; if (	-0.39794
-0.09691001	) { if (
-0.09691001	; } if (
-0.1760913	d , int l
-0.60206	) { int X
-0.3679768	; } int main	0
-0.1760913	&& ( j =
-0.1760913	_ ( j ,
-0.1760913	for ( j =
-0.1760913	i , j ,	0.1249388
-0.30103	A -> j +	-0.2552725
-0.4771213	B -> j )
-0.4771213	B -> j +	-0.2552725
-0.1249387	] = j ;	0
-0.1249387	Y [ j S	0
-0.1760913	K ( k )	-0.07918125
-0.09691001	for ( k =	-0.07918122
-0.1760913	o + k ,
-0.1760913	e , k ,
-0.1760913	j , k ,
-0.30103	Q [ k ]	0.1249388
-0.1760913	_ ( l ,
-0.1760913	k , l ,
-0.1760913	d -= l ;	-0.2552725
-0.09691001	, T l )	0
-0.1760913	not [ leu ]
-0.39794	<s> unsigned long long
-0.39794	<s> unsigned long z	0
-0.1760913	: ( m >
-0.1760913	P ( m ,
-0.1249387	W ( m (	0
-0.1760913	bh ( m ,	-0.1760913
-0.1760913	o [ m *	0
-0.1249387	<s> int main (	-0.2340832
-0.1760913	} int main (	-0.2340832
-0.1760913	<s> met main (	0
-0.1760913	main ( met val	0
-0.06694679	f ( n ,	-0.1249387
-0.1760913	h ( n )
-0.1760913	Z , n )	-0.30103
-0.1249387	m , n ,	-0.20412
-0.09691001	1 - n )	0
-0.30103	K -> n )	0
-0.1760913	b -> n ;	0.1249388
-0.1760913	p < n ;	0
-0.1760913	a [ n ]
-0.1760913	{ _ n =
-0.1249387	( & not ,	0
-0.07918125	) ( not .	0.4259688
-0.1760913	= ( not .	0.7269988
-0.1760913	free ( not .	0.7269988
-0.07918125	if ( not .	0.4259688
-0.1760913	phe ( not )	0
-0.1249387	( * not .	0.09691
-0.1760913	<s> ++ not .	0
-0.243038	asn . not [	0.2218487
-1.161368	not . not )	0.1249388
-1.161368	not . not =
-0.1401787	not . not [	0.07572079
-0.07918125	xor < not .	0.06694674
-0.1760913	const ala not )
-0.1760913	* const not ,	0
-0.1760913	C ( o +	0
-0.09691001	I ( o ,
-0.1760913	Q ( o ,
-0.1760913	_ ( o ,	-0.3521825
-0.3357921	) * o +
-0.6368221	) * o -
-0.6368221	) * o ;	0.09691
-0.30103	, * o )
-0.1760913	2 * o -
-0.1760913	{ * o =
-0.09691001	) += o *
-0.1249387	] , o [
-0.1760913	n , o )
-0.1760913	) ; o [
-0.39794	] = o >>	0
-0.39794	] = o [	-0.1760913
-0.1760913	q = o ;	-0.1760913
-0.1249387	) { o =
-0.1760913	8 | o &
-0.1760913	b -> op &&	0
-0.39794	y [ optind +	0
-0.39794	y [ optind ]	0
-0.1760913	: ( p =
-0.1249387	for ( p =
-0.1760913	h ( p [
-0.1760913	) * p ++	-0.3679768
-0.06694679	= * p ++	-0.3679768
-0.1760913	W * p ]	0
-0.30103	W , p ,
-0.1760913	F - p /
-0.1760913	) ; p =
-0.1249387	U ; p <	0
-0.1760913	q = p ;
0	static void phe (	0
0	g = pow (	0
-0.1760913	, const pro *	0
-0.1760913	exit ( puts (
-0.1760913	= * q ++
-0.39794	] . q ;	0
-0.39794	] . q =	0
-0.1249387	) { q =
-0.1760913	) , r (
-0.39794	) { r =
0	Y = realloc (
-0.1760913	H ; return d	0
-0.1760913	bf && s <	0
-0.1760913	K ( s X	-0.1760913
-0.1760913	s *= s ;	0
-0.1760913	) + s [
-0.1760913	10 + s [
-0.1760913	* ++ s =
-0.2218488	) ; s =
-0.1249387	i < s W	-0.2552725
-0.30103	( _ s )	0
-0.4771213	( _ s ,
-0.1760913	{ _ s =
-0.1760913	; return s ;	0.1249388
-0.1760913	if ( sec )	0
-0.1760913	+ ( ser )
-0.1760913	= ( ser )
-0.09691001	<s> typedef struct {	0
-0.09691001	G ( sym_ ,	0
-0.1760913	z ( t )	0
-0.1760913	v < t ?
-0.39794	s L t <	0.1249388
-0.1760913	<s> ++ tla ;	0
-0.1760913	lys = trp ;	-0.2730013
-0.09691001	xor = trp ;	-0.39794
-0.1760913	= & tyr [
-0.09691001	; ! u R
-0.30103	a * u ]	0
-0.1760913	g + u )
-0.1249387	b , u ,
-0.30103	j , u ,	-0.3309932
-0.1760913	v -= u <<
-0.1760913	) ; u [
-0.1760913	S ; u =
-0.1760913	U ; u <	0
-0.1760913	be ; u [
-0.1760913	v = u <<	0.1249388
-0.1760913	X [ u ]
-0.1760913	; return u ;
-0.4771213	) { u =
-0.30103	) { u [
-0.1760913	xor - unk ]
-0.1760913	xor = unk ;	0
-0.1760913	) && v <
-0.1760913	k - v )
-0.1760913	) : v -
-0.30103	A [ v ]	0
-0.4771213	A [ v |	0
-0.1760913	x [ v -	0
-0.7781513	not . val )	0
-0.2340832	not . val ;	0.05115265
-0.1760913	( met val ,	0
-0.39794	<s> static void gly	0
-0.39794	<s> static void phe	0
-0.30103	; } void </s>
-0.1760913	( ( w )	0.30103
-0.1760913	, ( w )	0.30103
-0.1760913	F ( w Z	0
-0.1760913	q ) w (
-0.1760913	) , w (
-0.146128	) ; w (	-0.09691003
-0.30103	) { w *
-0.1760913	; } w f
0	) { while (
0	<s> } while (	0
-0.1249387	N ( x .	0.09691
-0.1760913	8 , x ,
-0.1760913	I - x )
-0.09691001	K -> x ,	0.09691
-0.1760913	e -> x =
-0.1760913	_ = x .	0
-0.1760913	y = x ;	0.2218488
-0.1760913	) { x =
-0.06694679	for ( xor =	0
-0.06694679	; ++ xor )	0
-0.09691001	trp ; xor <	0.1760913
-0.1760913	unk ; xor <	0.30103
-1.060698	not [ xor -	0
-0.06069784	not [ xor ]	0
-0.1760913	N ( y .	0
-0.1760913	O ( y [	0
-0.30103	w ( y ^
-0.1760913	* * y )
-0.1760913	"%s" , y [	0
-0.1760913	x , y ,
-0.2218488	K -> y )	0.1760913
-0.1760913	a -> y )
-0.1760913	e -> y =
-0.30103	] . y =
-0.1760913	h . y +	0
-0.1760913	) ; y =
-0.30103	x = y =	0
-0.1760913	y = y ;	0.1249388
-0.1760913	, & z )
-0.1249387	for ( z (
-0.06694679	) ; z (
-0.1760913	16711935 ; z [	0
-0.1760913	unsigned long z ;	0
-0.8129134	( ) { }
-0.60206	) ) { </s>
-1	) ) { a	0
-0.1249387	-- ) { </s>
-0.69897	0 ) { </s>
-0.5228788	0 ) { b
-0.69897	0 ) { for	0.5228788
-0.1760913	1 ) { </s>
-1.041393	; ) { </s>
-0.7403627	; ) { _
-1.041393	; ) { for	0.5228788
-1.041393	; ) { int
-0.1760913	EOF ) { </s>
-0.1249387	NULL ) { </s>
-0.1760913	O ) { b
-0.4259687	P ) { V
-0.1249387	a ) { R	-0.30103
-0.1760913	bf ) { int
-0.1249387	gln ) { </s>
-0.1249387	glu ) { </s>
-0.1760913	l ) { d	-0.07918122
-0.1760913	n ) { </s>
-0.1249387	s ) { _
-0.1760913	sec ) { </s>
-0.1760913	val ) { </s>
-0.07918125	w ) { .	0
-0.06694679	xor ) { </s>
-0.09691001	<s> do { </s>
-0.4149733	} else { </s>
-0.8129134	} else { b
-0.09691001	typedef struct { </s>
-0.1760913	& 1023 | i	0
-0.1760913	<< 8 | o	0
-0.1760913	[ v | a
-0.8016323	) ; } </s>
-1.454845	) ; } L
-1.278754	) ; } V
-1.153815	) ; } else
-1.454845	) ; } f
-1.056905	) ; } int	-0.154902
-1.278754	) ; } void	-0.1760913
-1.278754	) ; } w	0
-0.6766936	) ; } }	-0.09141569
-0.8129134	0 ; } </s>
-0.1760913	2 ; } }
-0.30103	break ; } }
-0.1760913	p ; } _
-0.30103	s ; } _
-0.69897	; } } </s>
-0.79588	; } } b
-1.09691	; } } else	0
-0.69897	; } } }	-0.09691003
-0.60206	} } } }

\5-grams:
-0.06694679	! ! ! ! !	0.06694674
-0.20412	<s> if ( ! (
-0.1249387	= 0 ; ! u	0
-0.1760913	( ; K != b	0
-0.1760913	[ xor ] != gln	0
-0.1760913	1 , "> " ,	0
0	; z ( "#" )	0
-0.1249387	( 2 , "%s" ,	0
0	( 1 , "> "	0
-0.1249387	<s> gly ( & not	0
-0.1760913	. c = & _	0
-0.1760913	<s> tyr = & tyr	0
-0.1249387	m ( ) && v	0
-0.1760913	{ b bf && s
-0.1760913	b -> op && a	0
-0.1760913	) ( ( ( and	0
-0.39794	and ) ( ( (	0
-0.39794	and ) ( ( and	0
-0.1249387	<s> while ( ( i	0
-0.30103	, R ) ( L	0
-0.4771213	, R ) ( R	0
-0.4393327	( and ) ( (	0
-0.3424227	( and ) ( not	0
-0.1760913	( ser ) ( (
-0.1760913	+= F * ( 1	0
-0.1760913	_O ) + ( C
-0.1760913	* Y + ( (
-0.1760913	( L , ( ,	0
-0.1249387	) ) : ( a
-0.1760913	? 0 : ( p	0
-0.1249387	xor ] = ( and	0.1760913
-0.1760913	d = E ( N	0
-0.1760913	X ) E3 ( X	0
-0.1760913	R ) F ( L	0
-0.1760913	; V F ( w	0
-0.09691001	J ( G ( L	0
-0.1760913	L ) G ( sym_	0.2218488
-0.1760913	R ) G ( sym_	0.2218488
-0.1760913	V * I ( o	0.1249388
-0.09691001	u = M ( b	0
-0.1760913	] = O ( -
-0.1760913	R ) QR ( L	0
-0.1760913	) ; Y ( )	0
-0.09691001	) , _ ( )	0.02632895
-0.1760913	3 , _ ( )	-0.1497623
-0.1249387	6 , _ ( )	-0.288065
-0.1760913	g = _ ( o	0
-0.1760913	o = _ ( j	0
-0.1249387	d = f ( n	0.243038
-0.1760913	; ) for ( i	0.1249388
-0.544068	) ; for ( ;
-0.845098	) ; for ( i	0
-0.6532125	) { for ( ;
-0.6532125	) { for ( g	0
-0.1760913	g = getchar ( )
-0.1760913	static void gly ( ala	0
-0.1760913	] = h ( p	0
-0.1760913	) ; if ( p
-0.1249387	W ( m ( )	0
-0.1760913	<s> int main ( )	0.1249388
-0.1760913	} int main ( int
-0.1760913	<s> met main ( met	0
-0.1760913	static void phe ( const	0
-0.1760913	g = pow ( 2	0
-0.39794	) ; w ( y
-0.30103	<s> } while ( b	0
-0.1249387	z ( "#" ) )	0
-0.1760913	? G ( ) :
-0.1760913	; Y ( ) ;
-0.2762064	, _ ( ) )	0
-0.4522977	, _ ( ) ,	0
-0.1760913	= getchar ( ) )
-0.1249387	( m ( ) &&	0
-0.1760913	<s> main ( ) {
-0.1249387	int main ( ) {
-0.1249387	( "#" ) ) ;	0
-0.5228788	_ ( ) ) )
-0.2218488	_ ( ) ) ,	0
-0.1760913	z ( ) ) :	0
-0.2218488	) ) ) ) </s>
-0.1760913	( , ) ) </s>
-0.1760913	, 1 ) ) ;
-0.1249387	- 1 ) ) ;
-0.1760913	, R ) ) </s>
-0.1760913	xor ] ) ) ?	0
-0.09691001	. c ) ) ;	0
-0.1760913	, n ) ) {
-0.1760913	* T ++ ) )
-0.1760913	, ( , ) )	0
-0.1760913	x , ... ) {
-0.1760913	exit ( 0 ) ;
-0.09691001	0 , 0 ) ;
-0.1760913	2 , 0 ) ;	-0.2925968
-0.1760913	H , 0 ) ;	-0.4423591
-0.1760913	X , 0 ) {	0.1249388
-0.1760913	] , 0 ) ;
-0.1760913	j , 0 ) ,
-0.1760913	k , 0 ) ;
-0.1249387	o , 0 ) ;	-0.4175356
-0.1249387	, - 1 ) )	0
-0.1760913	l - 1 ) ;
-0.1760913	1 & 15 ) <	0
-0.1760913	o , 16 ) ;	0.1249388
-0.1760913	i ( 4 ) +=	0
-0.1760913	w ( 41 ) ;
-0.1760913	i ( 5 ) +=	0
-0.1760913	j , 6 ) ;	0
-0.39794	] ) ; ) ;
-0.1249387	( ; ; ) {
-0.09691001	d W ; ) {	0
-0.1760913	s W ; ) {
-0.1760913	< n ; ) {
-0.1760913	p ( B ) ,
-0.1760913	C * C ) ;	0
-0.1760913	E * K ) </s>
-0.1760913	R , L ) G	0
-0.1760913	&& ! O ) {
-0.1760913	rewind ( Q ) ;	0
-0.1760913	FILE * Q ) </s>
-0.9542425	L , R ) )	0
-0.6532125	L , R ) </s>
-1.130334	L , R ) F	0
-1.130334	L , R ) G	0
-0.8293038	L , R ) J	0.09691
-1.130334	L , R ) QR	0
-0.544068	N , R ) </s>
-0.544068	N , R ) L	0
-0.09691001	sym_ , R ) (	0.07918119
-0.30103	, B R ) ,
-0.1760913	O ( W ) </s>
-0.1760913	E3 ( X ) </s>
-0.2218488	W ( X ) ;
-0.1760913	+ 1 ] ) ;	0
-0.1760913	[ optind ] ) ;	0
-0.1760913	[ xor ] ) )	0
-0.09691001	L , _ ) ,	0
-0.1760913	R , _ ) </s>
-0.1760913	% ( and ) 16u	0
-0.30103	( ( and ) (	-0.2138799
-0.1383027	= ( and ) (	0.1383027
-0.1760913	be , bf ) {	0
-0.39794	x . c ) )	0.2218488
-0.39794	x . c ) ;
-0.1760913	y . c ) )	0.2218488
-0.1249387	n , d ) ;	-0.30103
-0.1760913	v - f ) *
-0.1760913	] != gln ) {	0
-0.1760913	not , glu ) ;	0
-0.1760913	K ( k ) ;	0
-0.09691001	, T l ) {	0
-0.1760913	Z , n ) )	0
-0.1249387	1 - n ) ;	0
-0.1760913	K -> n ) {	0
-0.1760913	phe ( not ) ;	0
-0.1760913	not . not ) ;	0.1249388
-0.1249387	( _ s ) {	0
-0.1760913	if ( sec ) {	0
-0.1760913	z ( t ) ;	0
-0.1760913	not . val ) {	0
-0.1760913	( ( w ) {	0.30103
-0.1760913	, ( w ) {	0.30103
-0.06694679	; ++ xor ) {	0
-0.1249387	K -> y ) ;	0.1760913
-0.1760913	, C ( * a
-0.1760913	<s> if ( * not	0
-0.544068	, char * * y	0
-0.1760913	/ 2 , * Q3
-0.1760913	* a , * b	0
-0.1760913	( ( 2 * o	0
-0.1760913	( O = * p	0
-0.1760913	gly ( ala * const	0
-0.1760913	, ( char * )
-0.1760913	o -= g * 16	0
-0.1249387	g = g * Y	0
-0.1760913	o [ g * 80	0
-0.1249387	o [ h * 80	0
-0.1760913	o [ m * 80	0
-0.1760913	, const pro * const	0
-0.1760913	[ 4 ] *= -	0
-0.1760913	] * 10 + s	0
-0.1249387	h * 80 + m
-0.1760913	m * 80 + n
-0.1760913	g * Y + (	0
-0.1760913	e = d + i
-0.1760913	A -> j + B	0
-0.1760913	B -> j + 3
-0.1760913	C ( o + k	0
-0.1760913	y [ optind + 1	0
-0.1760913	h . y + 1
-0.1760913	++ = * ++ T	0
-0.06694679	. val ; ++ xor	0
-0.1249387	; * T ++ =
-0.1249387	[ * T ++ ]
-0.1760913	80 + g ++ ]	0
-0.1760913	) * p ++ =	0
-0.544068	= * p ++ )
-0.544068	= * p ++ ,
-0.544068	= * p ++ -
-0.1760913	( 4 ) += o	0
-0.1760913	( 5 ) += o	0
-0.1760913	, "> " , 2	0
-0.1760913	2 , "%s" , y	0
-0.1760913	L , ( , )	0
-0.4771213	_ ( ) , O	0
-0.30103	( ) ) , Q
-0.1249387	) ) ) , Q
-0.1249387	, _ ) , B	0
-0.39794	0 , 0 , 0	-0.1760913
-0.39794	0 , 0 , W	0
-0.1760913	i = 0 , j
-0.1760913	write ( 1 , ">	0
-0.30103	err ( 2 , "%s"	0
-0.4771213	err ( 2 , 0	0
-0.1760913	O = 3 , _	0
-0.1760913	O = 6 , _	0
-0.1249387	C ( H , 0	0
-0.544068	) ( L , (	0
-0.544068	) ( L , N
-0.544068	) ( L , R	0.9700367
-0.1760913	F ( L , R	0.9700367
-0.1760913	F0 ( L , R	0.9700367
-0.1760913	F1 ( L , R	0.9700367
-0.09691001	G ( L , _	0
-0.1760913	K ( L , R	0.9700367
-0.1249387	N ( L , R	0.845098
-0.1760913	QR ( L , R	0.9700367
-0.1760913	QS ( L , R	0.9700367
-0.1760913	R ) L , N	0
-0.05115252	L , N , R	0
-0.1760913	) ( R , _	0
-0.1760913	0 , W , p
-0.1760913	a ( X , 0	0
-0.1760913	( w Z , n	0
-0.1760913	E * a , *	0
-0.1249387	M ( b , u	0
-0.1760913	char * d , int	0
-0.09691001	( T d , T	0
-0.1760913	m , e , k	0
-0.1760913	f L e , r
-0.1760913	( w f , w
-0.1760913	i , j , k	0
-0.1760913	bh ( m , e	0
-0.30103	f ( n , d	0
-0.1249387	m , n , o	0
-0.1760913	( & not , glu	0
-0.1760913	* const not , const	0
-0.1760913	_ ( o , 16	0
-0.09691001	G ( sym_ , R	0
-0.1760913	j , u , 1
-0.1760913	( met val , const	0
-0.1249387	K -> x , K	0.09691
-0.1760913	& 63 ) - 32	0
-0.1760913	4 ] *= - 1
-0.1760913	* ( 1 - n	0
-0.1760913	a * f - c
-0.1760913	x [ v - D
-0.1760913	not [ xor - unk	0
-0.1249387	) ; R -- T	0
-0.1760913	) * T -- =
-0.1760913	) { d -= l	0
-0.1760913	j + B -> j	0
-0.09691001	x , K -> y	0
-0.1760913	K = K -> n	0
-0.1760913	b = b -> n	0
-0.1760913	+ 1 ] . y
-0.1760913	[ L ] . q	0
-0.1760913	[ k ] . y	0
-0.1760913	asp - asn . not	0
-0.07918125	) ( not . not	-0.07918125
-0.1760913	= ( not . not	0.2218488
-0.1760913	free ( not . not	-0.4149733
-0.07918125	if ( not . not	0
-0.1249387	( * not . not
-0.1760913	<s> ++ not . not	0
-0.07918125	xor < not . val	0
-0.1249387	N ( x . c	0
-0.1760913	_ = x . _
-0.1760913	N ( y . c	0
-0.2218488	w ) { . _	0
-0.1760913	w x , ... )	0
-0.1760913	/ 2. ) / p
-0.1760913	) exit ( 0 )	0
-0.1249387	<s> i ( 0 )
-0.1760913	<s> while ( 0 <
-0.39794	, 0 , 0 )	0
-0.30103	, 0 , 0 ,	0
-0.09691001	, 1 , 0 ,
-0.1760913	( 2 , 0 )	0
-0.1249387	( H , 0 )	0
-0.1760913	( X , 0 )	0
-0.1760913	( j , 0 )	0
-0.1760913	( o , 0 )	0.1249388
-0.1760913	&& s < 0 )
-0.1760913	L t < 0 ;
-0.1760913	( O = 0 ;	0
-0.09691001	1 ] = 0 ;
-0.1760913	( a = 0 ;	0
-0.1760913	( g = 0 ;	0
-0.1249387	( i = 0 ;	0.243038
-0.1760913	, i = 0 ,
-0.1249387	int i = 0 ;	0.3679768
-0.1760913	U j = 0 ;	-0.3309932
-0.1760913	( k = 0 ;	0
-0.1249387	< 0 ? 0 :
-0.1760913	= u [ 0 ]	-0.2552725
-0.1760913	F * ( 1 -
-0.1249387	<s> i ( 1 )
-0.1760913	/ 4 + 1 ,
-0.1760913	[ optind + 1 ]	0
-0.1760913	y = - 1 ;
-0.1760913	p [ - 1 ]	0.30103
-0.1249387	u [ - 1 ]	0.1760913
-0.1760913	<< l - 1 )	0
-0.1760913	<s> o = 1 -
-0.1760913	, e [ 1 ]
-0.1760913	15 ) < 14 &
0	<s> h = 14695981039346656037ULL ;	0
-0.1760913	- 1 & 15 )	0
-0.1760913	= __ & 15 ,
-0.1760913	-= g * 16 ;	0
-0.1760913	( o , 16 )	0
0	( and ) 16u )
-0.09691001	<s> err ( 2 ,	0.07918119
-0.1249387	<s> i ( 2 )
-0.1760913	= pow ( 2 ,
-0.1760913	"> " , 2 )
-0.1760913	( cys >> 2 )
-0.1249387	<s> i ( 3 )
-0.1760913	, O = 3 ,	0
-0.1760913	, o [ 3 ]
-0.1760913	; u [ 3 ]	0
-0.1760913	63 ) - 32 )
-0.1760913	= o >> 32 <<	0
-0.1249387	<s> i ( 4 )	0
-0.1760913	, u [ 4 ]	-0.2552725
-0.1249387	<s> i ( 5 )	0
-0.1760913	( p + 5 ,
-0.1760913	( u / 5 )
-0.1760913	| b << 56 ;	0
-0.1760913	( j , 6 )	0
-0.1760913	, O = 7 ,
-0.1760913	>> 32 << 8 |	0
-0.1760913	( O = 8 ,
-0.1760913	[ g * 80 +
-0.1249387	[ h * 80 +	0
-0.1760913	[ m * 80 +	0
-0.1760913	( ) ) : (	0.1249388
-0.1760913	] = 0 : 0
-0.1760913	by ? 0 : (	0
-0.1249387	) ? glu : gln	0
-0.4771213	; for ( ; n
-0.39794	<s> for ( ; ;	0.1249388
-0.39794	<s> for ( ; K	0
-0.1760913	"#" ) ) ; z
-0.1760913	( ) ) ; R	0
-0.4771213	1 ) ) ; }
-0.30103	c ) ) ; U	0
-0.60206	( 0 ) ; </s>
-0.60206	( 0 ) ; }
-0.4607309	, 0 ) ; </s>
-1.113943	, 0 ) ; U	0
-0.30103	, 1 ) ; </s>
-0.39794	- 1 ) ; </s>
-0.1249387	, 16 ) ; </s>
-0.1760913	, 6 ) ; </s>
-0.1760913	* C ) ; </s>
-0.1760913	( Q ) ; </s>
-0.1760913	, SEEK_SET ) ; </s>
-0.1760913	1 ] ) ; </s>
-0.1760913	optind ] ) ; </s>
-0.1760913	, c ) ; }
-0.30103	, d ) ; </s>
-0.1760913	, gln ) ; </s>
-0.1760913	, glu ) ; </s>
-0.09691001	, j ) ; </s>
-0.1760913	( k ) ; </s>
-0.1249387	, n ) ; </s>
-0.1249387	- n ) ; </s>
-0.1760913	( not ) ; </s>
-0.1249387	. not ) ; </s>
-0.1760913	( t ) ; }	0
-0.1760913	>> unk ) ; </s>
-0.07918125	-> y ) ; </s>
-0.1760913	O = 0 ; O
-0.39794	] = 0 ; }
-0.1760913	a = 0 ; a	0
-0.1760913	c = 0 ; }
-0.1760913	g = 0 ; g	0
-0.06694679	i = 0 ; i	0
-0.544068	j = 0 ; !	0.1249388
-0.544068	j = 0 ; </s>
-0.544068	j = 0 ; j
-0.1760913	k = 0 ; k
-0.39794	= - 1 ; </s>
-0.1760913	h = 14695981039346656037ULL ; </s>
-0.1760913	g * 16 ; </s>
-0.1760913	b << 56 ; }
-0.1249387	for ( ; ; )	0
-0.1760913	s = A ; s
-0.1760913	b = K ; </s>
-0.30103	) ; U ; d	0
-0.1760913	D d W ; )	0.2218488
-0.1760913	L d W ; )	0.2218488
-0.1760913	< s W ; )	0
-0.1760913	[ 1 ] ; </s>
-0.1760913	[ EOF ] ; </s>
-0.1249387	[ xor ] ; </s>
-0.1760913	K != b ; K	0
-0.1249387	, * b ; </s>
-0.1760913	a = b ; </s>
-0.07918125	) * g ; </s>
-0.06694679	) *= g ; </s>
-0.1249387	glu : gln ; </s>
-0.1760913	sec = gln ; </s>
-0.1249387	<s> int i ; </s>
-0.1760913	] = j ; </s>
-0.1760913	d -= l ; d
-0.1760913	b -> n ; </s>
-0.1760913	p < n ; )	0
-0.1249387	) * o ; </s>
-0.1760913	q = o ; </s>
-0.1760913	] . q ; </s>
-0.1760913	s *= s ; </s>
-0.1760913	; return s ; }
-0.1760913	<s> ++ tla ; </s>
-0.1760913	lys = trp ; </s>
-0.09691001	xor = trp ; xor	0
-0.1760913	xor = unk ; xor	0
-0.20412	not . val ; ++	0.06694674
-0.60206	not . val ; </s>
-0.1760913	y = x ; </s>
-0.1760913	y = y ; </s>
-0.1760913	unsigned long z ; </s>
-0.1760913	& 15 ) < 14	0
-0.1760913	U ; i < s	0.1249388
-0.1249387	U ; p < n	0
-0.1760913	bf && s < 0	0
-0.1760913	s L t < 0	0
-0.1760913	U ; u < i
-0.1249387	trp ; xor < not	0.1760913
-0.1760913	unk ; xor < not	0.30103
-0.1760913	o >> 32 << 8	0
-0.1760913	v = u << t
-0.1760913	* p ++ = *
-0.1760913	b ; K = K	0
-0.1760913	<s> ( O = 0	0
-0.1760913	for ( O = *	0
-0.39794	) , O = 3	0
-0.39794	) , O = 7	0
-0.1760913	[ 0 ] = x
-0.243038	- 1 ] = 0	0
-0.30103	[ 1 ] = y
-0.1249387	[ xor ] = (	0
-0.1760913	{ . _ = x	0
-0.1760913	for ( a = 0	0
-0.1760913	{ . c = &	0
-0.1760913	for ( g = 0	0
-0.3679768	for ( i = 0	0
-0.1760913	; int i = 0
-0.1760913	U int i = 0	0.1249388
-0.30103	for ( k = 0	0
-0.1760913	] . q = o	0
-0.243038	for ( xor = trp	0
-0.544068	for ( xor = unk	0
-0.1760913	x = y = -
-0.1760913	[ v ] == T	0
-0.1760913	] = o >> 32	0
-0.1760913	] ) ) ? glu	0
-0.1760913	v ] = A [	0
-0.1760913	L e = A ;
-0.1760913	_ s = A ;	0
-0.1760913	-> j + B ->	0
-0.1249387	_ ) , B R	0
-0.1760913	= T = B ;
-0.1760913	} } b B &
-0.1760913	* C * C )	0
-0.1760913	) B ( D c	0
0	( X ) E3 (	0
-0.1760913	) ) != EOF )
-0.1760913	, R ) F (	0
-0.1760913	, E , F ,
-0.1249387	] ; V F (	0
-0.1760913	, L ) G (	0
-0.1760913	, R ) G (	0
-0.1760913	>> 8 ; G [
-0.1249387	= C ( H ,	0
-0.1760913	; d += H ;
-0.1249387	) ; b I ==
-0.09691001	, R ) J (
-0.1249387	<s> if ( K ->
-0.1760913	( E * K )	0
-0.09691001	-> x , K ->	0
-0.1760913	for ( ; K !=	0
-0.1760913	!= b ; K =	0
-0.1760913	; K = K ->	0
-0.1760913	<s> b = K ;	0
-0.1249387	R ) ( L ,	-0.3309932
-0.1760913	) F ( L ,	0
-0.09691001	( G ( L ,	0
-0.1760913	( N ( L ,	0.1249388
-0.1760913	) QR ( L ,	0
-0.1760913	; if ( L ==
-0.1760913	, R ) L ,	0
-0.1760913	( R , L )	0
-0.1760913	-> b [ L ]	0
-0.1760913	; z [ L ]	0
-0.1760913	B ( f L e	0.1249388
-0.1760913	: u = M (	0.2218488
-0.1760913	= E ( N (
-0.07918125	( L , N ,	0.1760913
-0.1760913	) L , N ,	0.4771213
-0.1760913	<s> y = N (
-0.1760913	) && ( O =
-0.1760913	; for ( O =	0
-0.1760913	) || ( O =
-0.1249387	( ) , O =
-0.1760913	) ) , O =
-0.1760913	* O0 - OO )
-0.1760913	= Q_ ( O_o )
-0.1760913	V z ( P )
-0.1760913	<s> rewind ( Q )	0
-0.1760913	( FILE * Q )	0
-0.1249387	<s> o = Q (
0	, R ) QR (	0
-0.1760913	R ) ( R ,	0
-0.01579427	( L , R )	0
-0.1760913	, N , R )	-0.02996321
-0.6532125	, N , R </s>
-0.09691001	( sym_ , R )	0
-0.1760913	) ) ; R --	0.1249388
-0.1249387	) , B R )	-0.1760913
-0.1760913	a ) { R a
-0.1249387	Y [ i S ]	0
-0.1249387	Y [ j S ]	0
-0.1760913	; W ( T <
-0.1249387	T : * T ==
-0.1760913	( L * T )
-0.1760913	A [ * T ++	0.1249388
-0.1760913	= * ++ T ;
-0.09691001	T d , T l	0
-0.1249387	; R -- T ,
-0.1760913	v ] == T ++
-0.1760913	) ) ; U ;	-0.1760913
-0.1760913	0 ) ; U int
-0.1760913	= 0 ; U ;
-0.1249387	S ] ; V F	0
-0.1760913	, 0 , W ,	0
-0.1760913	U ; d W --
-0.1760913	< D d W ;	0
-0.1760913	i < s W ;	0
-0.1760913	) E3 ( X )	0
-0.1760913	} W ( X )	-0.07918125
-0.1760913	; a ( X ,
-0.1760913	K ( s X [
-0.1760913	= g * Y +	0
-0.1760913	= D d Y [
-0.1760913	F ( w Z ,	0
-0.1760913	] = A [ v	0
-0.1760913	A -> b [ x
-0.1760913	B -> b [ y
-0.1249387	y -> b [ L	0
-0.1760913	* const his [ ]	0
-0.09691001	asn . not [ xor	0.1856366
-1.021189	not . not [ leu	0
-0.06694679	not . not [ xor	0.08297443
-0.1760913	] = o [ m	0
-0.1760913	O ( y [ optind
-0.1760913	"%s" , y [ optind
-0.1760913	16711935 ; z [ L	0
-0.1760913	+ g ++ ] =
-0.39794	u [ 0 ] ;
-0.1760913	optind + 1 ] )	0
-0.1760913	W - 1 ] =
-0.07918125	[ - 1 ] =	-0.3309932
-0.1760913	n - 3 ] =
-0.1760913	u [ 3 ] =
-0.39794	u [ 4 ] *=	0
-0.39794	u [ 4 ] ,
-0.1760913	tyr [ EOF ] ;	0
-0.1760913	b [ L ] .	0
-0.1760913	z [ L ] =
-0.1760913	[ i S ] ;
-0.1760913	[ j S ] )
-0.1760913	const his [ ] )
-0.1760913	Q [ d ] .
-0.1760913	Q [ k ] .
-0.1760913	y [ optind ] )	0
-0.1760913	W * p ] ,
-0.1760913	a * u ] :
-0.1760913	A [ v ] ==	0
-1	not [ xor ] !=	0
-1	not [ xor ] &
-0.8239087	not [ xor ] )	0
-0.8239087	not [ xor ] ;	0
-0.69897	not [ xor ] =	0
-1	not [ xor ] >>
-0.1760913	c = & _ f	0
-0.1760913	= 3 , _ (	0
-0.1760913	= 6 , _ (	0.1249388
-0.09691001	( L , _ )	0
-0.1760913	( R , _ )	0
-0.1249387	) { . _ =	0
-0.1760913	<s> g = _ (	0
-0.1249387	<s> o = _ (	0
-0.1760913	-> op && a ->
-0.1760913	; P ( a ,
-0.1760913	<s> E * a ,	0
-0.1760913	<s> e -> a =
-0.1760913	= 0 ; a <
-0.1760913	) ) { a =
-0.1760913	void gly ( ala *	0
-0.1760913	phe ( const ala not	0
-0.1760913	( ( ( and )
-0.1760913	) ( ( and )
-0.07918125	] = ( and )	-0.2138798
-0.1760913	not , const and his	0
-0.1760913	( asp - asn .	0
-0.1760913	; K != b ;	0
-0.09691001	= M ( b ,	0
-0.1760913	} while ( b &&
-0.1760913	a , * b ;	0.1249388
-0.1760913	T [ - b ]
-0.1760913	<s> e -> b =
-0.1249387	<s> y -> b [	0
-0.1760913	1 ) ; b I	0.1249388
-0.1760913	<s> a = b ;	0
-0.1760913	<s> b = b ->	0
-0.1760913	+ 1 == b ->
-0.1760913	) { b bf &&	0
-0.1760913	c ) ; break ;
-0.1249387	( x . c )	-0.2552725
-0.1760913	( y . c )	0
-0.1760913	B ( D c ,
-0.1760913	void phe ( const ala	0
-0.1760913	( ala * const not	0
-0.1760913	const pro * const his	0
-0.1760913	const not , const and	0
-0.1760913	met val , const pro	0
-0.1760913	( char * d ,	0
-0.1249387	( n , d )	0
-0.1760913	; U ; d W	0
-0.1760913	) e = d +	0
-0.1760913	w = D d Y	0
-0.1760913	( Q [ d ]	0
-0.1760913	H ; return d -
-0.30103	l ) { d -=	0
-0.1760913	( m , e ,	0
-0.1249387	( f L e ,	0
-0.1760913	= f L e ;
-0.1760913	; } } else {
-0.1760913	( v - f )	0
-0.1760913	<s> Y = f (
-0.1249387	<s> d = f (	0
-0.1760913	= & _ f }
-0.1760913	" ) ; for (	-0.4101745
-0.1760913	( ) ; for (
-0.1760913	0 ) ; for (
-0.1760913	= 0 ; for (
-0.1760913	= p ; for (
-0.1760913	0 ) { for (
-0.1760913	; ) { for (
-0.1760913	{ for ( g =	0
-0.1760913	<s> o -= g *	0
-0.1760913	= 0 ; g <
-0.1249387	<s> g = g *	0
-0.1760913	? o [ g *	0
-0.1760913	xor ] != gln )	0
-0.1249387	? glu : gln ;	0
-0.1760913	& not , glu )	0
-0.1760913	) ) ? glu :	0.1249388
0	<s> static void gly (	0
-0.07918125	) + ( h <<
-0.1760913	, const and his )
-0.1760913	pro * const his [	0
-0.1249387	while ( ( i =
-0.1249387	) for ( i =
-0.1760913	; for ( i =
-0.07918125	= 0 ; i <
-0.1760913	& 1023 | i >>
-0.1760913	* d , int l
-0.2218488	) ; } int main	0
-0.1760913	= _ ( j ,
-0.1760913	, i , j ,	0
-0.1760913	+ B -> j +	0
-0.1760913	a ] = j ;	0
-0.1760913	d Y [ j S	0.1249388
-0.1760913	<s> K ( k )	0
-0.1249387	<s> for ( k =
-0.1760913	( o + k ,
-0.1760913	, e , k ,
-0.1760913	, j , k ,
-0.1760913	<s> Q [ k ]	0
-0.1760913	{ d -= l ;	0
-0.09691001	d , T l )	0
-0.1760913	. not [ leu ]
-0.1760913	; W ( m (	0.1249388
-0.1760913	= o [ m *	0
-0.1760913	; } int main (	0
-0.1760913	met main ( met val	0
-0.06694679	= f ( n ,	0
-0.1760913	w Z , n )	0
-0.1249387	, m , n ,	0
-0.09691001	( 1 - n )	0
-0.1760913	= K -> n )	0
-0.1760913	= b -> n ;	0
-0.1760913	; p < n ;	0
-0.1760913	) { _ n =
-0.1249387	gly ( & not ,	0
-0.07918125	and ) ( not .	0
-0.1760913	<s> free ( not .	0
-0.07918125	<s> if ( not .	0
-0.1760913	<s> phe ( not )	0
-0.1760913	if ( * not .	0.1249388
-0.1760913	- asn . not [	0.2218488
-0.8750613	( not . not )	0
-0.09691001	( not . not [	-0.2340832
-0.1760913	++ not . not [	0.3679768
-0.07918125	<s> not . not [	0.146128
-0.07918125	; xor < not .	0
-0.1760913	( const ala not )
-0.1760913	ala * const not ,	0
-0.1249387	* I ( o ,
-0.1760913	= _ ( o ,	0
-0.1760913	( 2 * o -
-0.1760913	) { * o =
-0.1760913	4 ) += o *
-0.1760913	5 ) += o *
-0.1760913	, n , o )
-0.1760913	"Q" ) ; o [
-0.1760913	L ] = o >>	0
-0.1760913	. q = o ;	0
-0.1760913	<< 8 | o &
-0.1760913	0 : ( p =
-0.1760913	; for ( p =
-0.1760913	= h ( p [
-0.1760913	O = * p ++	-0.3309932
-0.1760913	[ W * p ]	0
-0.1760913	, W , p ,
-0.1249387	; U ; p <	0
0	<s> static void phe (	0
0	<s> g = pow (	0
-0.1760913	val , const pro *	0
-0.1760913	<s> exit ( puts (
-0.1760913	L ] . q =	0
-0.1760913	<s> s *= s ;	0
-0.1760913	] ) + s [
-0.1760913	* 10 + s [
-0.1760913	( * ++ s =
-0.1249387	; i < s W	0
-0.1760913	) { _ s =
-0.1760913	<s> if ( sec )	0
-0.09691001	) G ( sym_ ,	0
-0.09691001	( xor = trp ;	0
-0.1760913	tyr = & tyr [
-0.1249387	0 ; ! u R
-0.1249387	( b , u ,
-0.30103	( j , u ,	0
-0.1760913	( v -= u <<
-0.1760913	b X [ u ]
-0.1760913	[ xor - unk ]
-0.1760913	( xor = unk ;	0
-0.1760913	( ) && v <
-0.1760913	( k - v )
-0.1760913	( ) : v -
-0.1760913	= A [ v |	0
-0.07918125	< not . val ;	-0.3521825
-0.1760913	= not . val ;	-0.3521825
-0.1760913	main ( met val ,	0
-0.1760913	) ; } void </s>
-0.1760913	V F ( w Z	0
-0.1760913	) ; } w f
-0.1760913	= N ( x .	0.1249388
-0.1760913	>> 8 , x ,
-0.1760913	( I - x )
-0.09691001	, K -> x ,	0
-0.1760913	<s> e -> x =
-0.1760913	. _ = x .	0
-0.06694679	<s> for ( xor =	0
-0.06694679	val ; ++ xor )	0
-0.09691001	= trp ; xor <	0
-0.1760913	= unk ; xor <	0
-1.060698	. not [ xor -	0
-0.06069784	. not [ xor ]	0
-0.1760913	= O ( y [	0
-0.1760913	char * * y )
-0.1760913	, "%s" , y [	0
-0.1760913	, x , y ,
-0.1249387	, K -> y )	0
-0.1760913	<s> e -> y =
-0.1760913	k ] . y =
-0.1760913	; for ( z (
-0.1760913	<s> unsigned long z ;	0
-0.1249387	) ) ) { </s>
-0.1249387	, 0 ) { b
-0.30103	W ; ) { _
-0.1760913	== NULL ) { </s>
-0.1760913	! O ) { b
-0.4259687	( P ) { V
-0.1760913	, bf ) { int
-0.1760913	!= gln ) { </s>
-0.1760913	& glu ) { </s>
-0.09691001	T l ) { d	0
-0.1760913	-> n ) { </s>
-0.1249387	_ s ) { _
-0.1760913	( sec ) { </s>
-0.1760913	. val ) { </s>
-0.07918125	( w ) { .	0
-0.06694679	++ xor ) { </s>
-0.39794	; } else { b
-0.07918125	<s> } else { </s>
-0.09691001	<s> typedef struct { </s>
-0.1760913	32 << 8 | o	0
-0.1760913	A [ v | a
-0.4771213	) ) ; } int	-0.07918125
-0.30103	c ) ; } }
-0.1760913	t ) ; } w	0
-0.1760913	return s ; } _
-0.60206	) ; } } </s>
-0.7781513	) ; } } else	0
-0.39794	; } } } }

\6-grams:
-0.07918125	! ! ! ! ! !	0.07918125
-0.1760913	j = 0 ; ! u	0.1249388
-0.1760913	for ( ; K != b	0
-0.1760913	not [ xor ] != gln	0
-0.1760913	( 1 , "> " ,	0
-0.1249387	err ( 2 , "%s" ,	0
0	write ( 1 , "> "	0
-0.1760913	{ . c = & _	0
-0.1249387	( m ( ) && v	0
-0.1760913	) { b bf && s
-0.1760913	and ) ( ( ( and	0
-0.39794	( and ) ( ( (	0
-0.39794	( and ) ( ( and	0
-0.39794	sym_ , R ) ( L	0.1249388
-0.39794	sym_ , R ) ( R	0
-0.1760913	( ( and ) ( not	0.30103
-0.4259687	= ( and ) ( (	-0.2552725
-0.4259687	= ( and ) ( not	0.1760913
-0.1760913	g * Y + ( (
-0.1760913	) ( L , ( ,	0
-0.1760913	( ) ) : ( a
-0.1760913	by ? 0 : ( p	0
-0.1249387	[ xor ] = ( and	0
-0.1760913	( X ) E3 ( X	0
-0.1760913	, R ) F ( L	0
-0.1760913	] ; V F ( w	0
-0.1760913	, L ) G ( sym_	0
-0.1760913	, R ) G ( sym_	0
-0.1760913	: u = M ( b	0.2218488
-0.1760913	, R ) QR ( L	0
-0.1760913	= 3 , _ ( )	0
-0.1760913	= 6 , _ ( )	0
-0.1760913	<s> g = _ ( o	0
-0.1760913	<s> o = _ ( j	0
-0.1249387	<s> d = f ( n	0
-0.1760913	" ) ; for ( i	0
-0.1760913	<s> static void gly ( ala	0
-0.1760913	; W ( m ( )	0.1249388
-0.1760913	; } int main ( int
-0.1760913	<s> static void phe ( const	0
-0.1760913	<s> g = pow ( 2	0
-0.1249387	; z ( "#" ) )	0
-0.1760913	) ; Y ( ) ;
-0.30103	) , _ ( ) )	-0.07918125
-0.1760913	3 , _ ( ) )
-0.1760913	6 , _ ( ) ,
-0.1249387	W ( m ( ) &&	0
-0.1760913	<s> int main ( ) {
-0.1249387	z ( "#" ) ) ;	0
-0.5228788	, _ ( ) ) )
-0.2218488	, _ ( ) ) ,	0
-0.1760913	, ( , ) ) </s>
-0.1249387	, - 1 ) ) ;
-0.1760913	L , R ) ) </s>
-0.1760913	[ xor ] ) ) ?	0
-0.1760913	x . c ) ) ;
-0.1760913	y . c ) ) ;	-0.1760913
-0.1760913	Z , n ) ) {
-0.1760913	L , ( , ) )	0
-0.1760913	w x , ... ) {
-0.1760913	) exit ( 0 ) ;
-0.09691001	, 0 , 0 ) ;
-0.1760913	( 2 , 0 ) ;	0
-0.1760913	( H , 0 ) ;	0
-0.1760913	( X , 0 ) {	0
-0.1760913	( j , 0 ) ,
-0.1760913	( o , 0 ) ;	0.1249388
-0.1760913	<< l - 1 ) ;
-0.1760913	- 1 & 15 ) <	0
-0.1760913	( o , 16 ) ;	0
-0.1760913	<s> i ( 4 ) +=	0
-0.1760913	<s> i ( 5 ) +=	0
-0.1760913	( j , 6 ) ;	0
-0.1249387	for ( ; ; ) {
-0.1760913	D d W ; ) {
-0.1760913	L d W ; ) {
-0.1760913	< s W ; ) {
-0.1760913	p < n ; ) {
-0.1760913	* C * C ) ;	0
-0.1760913	( E * K ) </s>
-0.1760913	( R , L ) G	0
-0.1760913	<s> rewind ( Q ) ;	0
-0.1760913	( FILE * Q ) </s>
-0.9542425	( L , R ) )	0
-0.6532125	( L , R ) </s>
-1.130334	( L , R ) F	0
-1.130334	( L , R ) G	0
-0.8293038	( L , R ) J	0
-1.130334	( L , R ) QR	0
-0.4771213	, N , R ) L	0
-0.09691001	( sym_ , R ) (	0
-0.1760913	) , B R ) ,
-0.1760913	) E3 ( X ) </s>
-0.1760913	} W ( X ) ;
-0.1760913	optind + 1 ] ) ;	0
-0.1760913	y [ optind ] ) ;	0
-0.1760913	not [ xor ] ) )	0
-0.09691001	( L , _ ) ,	0
-0.1760913	( R , _ ) </s>
-0.07918125	] = ( and ) (	-0.1760913
-0.1760913	( x . c ) )	0
-0.1760913	( y . c ) )	0
-0.1249387	( n , d ) ;	0
-0.1760913	( v - f ) *
-0.1760913	xor ] != gln ) {	0
-0.1760913	& not , glu ) ;	0
-0.1760913	<s> K ( k ) ;	0
-0.09691001	d , T l ) {	0
-0.1760913	w Z , n ) )	0
-0.1249387	( 1 - n ) ;	0
-0.1760913	= K -> n ) {	0
-0.1760913	<s> phe ( not ) ;	0
-0.1760913	( not . not ) ;	0
-0.1760913	<s> if ( sec ) {	0
-0.06694679	val ; ++ xor ) {	0
-0.1249387	, K -> y ) ;	0
-0.1760913	E * a , * b	0
-0.1760913	for ( O = * p	0
-0.1760913	void gly ( ala * const	0
-0.1760913	<s> o -= g * 16	0
-0.1249387	<s> g = g * Y	0
-0.1760913	? o [ g * 80	0
-0.1760913	= o [ m * 80	0
-0.1760913	val , const pro * const	0
-0.1760913	u [ 4 ] *= -	0
-0.1249387	[ h * 80 + m
-0.1760913	[ m * 80 + n
-0.1760913	= g * Y + (	0
-0.1760913	) e = d + i
-0.1760913	+ B -> j + 3
-0.07918125	not . val ; ++ xor	0.06694674
-0.1760913	A [ * T ++ ]
-0.1760913	O = * p ++ -
-0.1760913	i ( 4 ) += o	0
-0.1760913	i ( 5 ) += o	0
-0.1760913	1 , "> " , 2	0
-0.1760913	( 2 , "%s" , y	0
-0.1760913	( L , ( , )	0
-0.4771213	, _ ( ) , O	0.1249388
-0.30103	_ ( ) ) , Q
-0.1249387	L , _ ) , B	0
-0.39794	, 0 , 0 , 0	0
-0.39794	, 0 , 0 , W	0
-0.39794	<s> err ( 2 , "%s"	0.1249388
-0.39794	<s> err ( 2 , 0	0
-0.1760913	, O = 3 , _	0
-0.1249387	= C ( H , 0	0
-0.1760913	R ) ( L , (	0
-0.1760913	) F ( L , R	0
-0.09691001	( G ( L , _	0
-0.1760913	( N ( L , R	0.1249388
-0.1760913	) QR ( L , R	0
-0.1760913	, R ) L , N	0
-0.07918125	( L , N , R	-0.30103
-0.1760913	) L , N , R	-0.3679768
-0.1760913	R ) ( R , _	0
-0.1760913	, 0 , W , p
-0.1760913	F ( w Z , n	0
-0.1760913	<s> E * a , *	0
-0.1249387	= M ( b , u	0
-0.1760913	( char * d , int	0
-0.1760913	( m , e , k	0
-0.1760913	( f L e , r
-0.1760913	, i , j , k	0
-0.30103	= f ( n , d	0
-0.1249387	, m , n , o	0
-0.1760913	gly ( & not , glu	0
-0.1760913	ala * const not , const	0
-0.1760913	= _ ( o , 16	0
-0.09691001	) G ( sym_ , R	0
-0.1760913	( j , u , 1
-0.1760913	main ( met val , const	0
-0.1249387	, K -> x , K	0
-0.1760913	[ 4 ] *= - 1
-0.1760913	. not [ xor - unk	0
-0.1760913	) ) ; R -- T	0.1249388
-0.1760913	l ) { d -= l	0
-0.1760913	-> j + B -> j	0
-0.09691001	-> x , K -> y	0
-0.1760913	; K = K -> n	0
-0.1760913	<s> b = b -> n	0
-0.1760913	b [ L ] . q	0
-0.1760913	( asp - asn . not	0
-0.07918125	and ) ( not . not	0
-0.1760913	<s> free ( not . not	0
-0.07918125	<s> if ( not . not	0
-0.1760913	if ( * not . not
-0.07918125	; xor < not . val	0
-0.1760913	= N ( x . c	0.1249388
-0.1760913	. _ = x . _
-0.2218488	( w ) { . _	0
-0.1760913	0 , 0 , 0 ,
-0.1760913	err ( 2 , 0 )	0
-0.1249387	C ( H , 0 )	0
-0.1760913	a ( X , 0 )	0
-0.1760913	bf && s < 0 )
-0.1760913	s L t < 0 ;
-0.1760913	<s> ( O = 0 ;	0
-0.09691001	- 1 ] = 0 ;
-0.1760913	for ( a = 0 ;	0
-0.1760913	for ( g = 0 ;	0
-0.1249387	for ( i = 0 ;	0
-0.1760913	U int i = 0 ;	0
-0.1760913	for ( k = 0 ;	0
-0.1760913	+= F * ( 1 -
-0.1760913	y [ optind + 1 ]	0
-0.1760913	& 15 ) < 14 &
-0.1760913	o -= g * 16 ;	0
-0.1760913	_ ( o , 16 )	0
0	% ( and ) 16u )
-0.1760913	g = pow ( 2 ,
-0.1760913	, "> " , 2 )
-0.1760913	) , O = 3 ,	0
-0.1760913	& 63 ) - 32 )
-0.1760913	] = o >> 32 <<	0
-0.1760913	) , O = 7 ,
-0.1760913	o >> 32 << 8 |	0
-0.1760913	o [ g * 80 +
-0.1249387	o [ h * 80 +	0
-0.1760913	o [ m * 80 +	0
-0.1760913	z ( ) ) : (	0
-0.1760913	) ) ? glu : gln	0.1249388
-0.1760913	( "#" ) ) ; z
-0.30103	. c ) ) ; U	0
-0.1760913	2 , 0 ) ; </s>
-0.1760913	H , 0 ) ; U	0
-0.1249387	o , 0 ) ; </s>
-0.1760913	o , 16 ) ; </s>
-0.1760913	j , 6 ) ; </s>
-0.1760913	C * C ) ; </s>
-0.1760913	rewind ( Q ) ; </s>
-0.1760913	+ 1 ] ) ; </s>
-0.1760913	[ optind ] ) ; </s>
-0.1249387	n , d ) ; </s>
-0.1760913	not , glu ) ; </s>
-0.1760913	K ( k ) ; </s>
-0.1249387	1 - n ) ; </s>
-0.1760913	phe ( not ) ; </s>
-0.1760913	not . not ) ; </s>
-0.1760913	z ( t ) ; }	0
-0.1249387	K -> y ) ; </s>
-0.1760913	( O = 0 ; O
-0.1760913	( a = 0 ; a	0
-0.1760913	( g = 0 ; g	0
-0.1249387	( i = 0 ; i	0.30103
-0.1760913	int i = 0 ; i	0.30103
-0.1760913	U j = 0 ; !	0
-0.1760913	( k = 0 ; k
-0.1760913	<s> h = 14695981039346656037ULL ; </s>
-0.1760913	-= g * 16 ; </s>
-0.1760913	| b << 56 ; }
-0.1760913	<s> for ( ; ; )	0.1249388
-0.1760913	_ s = A ; s
-0.1760913	<s> b = K ; </s>
-0.1760913	) ) ; U ; d	0
-0.1760913	< D d W ; )	0
-0.1760913	i < s W ; )	0
-0.1760913	tyr [ EOF ] ; </s>
-0.1249387	not [ xor ] ; </s>
-0.1760913	; K != b ; K	0
-0.1760913	a , * b ; </s>
-0.1760913	<s> a = b ; </s>
-0.1249387	? glu : gln ; </s>
-0.1760913	a ] = j ; </s>
-0.1760913	{ d -= l ; d
-0.1760913	= b -> n ; </s>
-0.1760913	; p < n ; )	0
-0.1760913	. q = o ; </s>
-0.1760913	<s> s *= s ; </s>
-0.09691001	( xor = trp ; xor	0
-0.1760913	( xor = unk ; xor	0
-0.07918125	< not . val ; ++	0
-0.1760913	= not . val ; </s>
-0.1760913	<s> unsigned long z ; </s>
-0.1760913	1 & 15 ) < 14	0
-0.1249387	; U ; p < n	0
-0.1249387	= trp ; xor < not	0
-0.1760913	= unk ; xor < not	0
-0.1760913	= o >> 32 << 8	0
-0.1760913	) * p ++ = *
-0.1760913	!= b ; K = K	0
-0.1760913	; for ( O = *	0
-0.09691001	[ - 1 ] = 0	0
-0.1249387	not [ xor ] = (	0
-0.1760913	) { . _ = x	0
-0.1760913	{ for ( g = 0	0
-0.1760913	L ] . q = o	0
-0.243038	<s> for ( xor = trp	0
-0.544068	<s> for ( xor = unk	0
-0.1760913	A [ v ] == T	0
-0.1760913	L ] = o >> 32	0
-0.1760913	xor ] ) ) ? glu	0
-0.1760913	A -> j + B ->	0
-0.1249387	, _ ) , B R	0
-0.1760913	L , R ) F (	0
-0.1249387	S ] ; V F (	0
-0.1760913	R , L ) G (	0
-0.1760913	L , R ) G (	0
-0.1760913	1 ) ; b I ==
-0.1249387	L , R ) J (
-0.1249387	K -> x , K ->	0.09691
-0.1760913	<s> for ( ; K !=	0
-0.1760913	K != b ; K =	0
-0.1760913	b ; K = K ->	0
-0.1249387	, R ) ( L ,	0
-0.1760913	R ) F ( L ,	0
-0.09691001	J ( G ( L ,	0
-0.1760913	R ) QR ( L ,	0
-0.1760913	N , R ) L ,	0
-0.1760913	y -> b [ L ]	0
-0.1760913	16711935 ; z [ L ]	0
-0.1760913	d = E ( N (
-0.1760913	R ) L , N ,	0
-0.1249387	_ ( ) , O =
0	L , R ) QR (	0
-0.1760913	, R ) ( R ,	0
-0.1760913	) ( L , R )
-0.1760913	F ( L , R )	-0.3679768
-0.1760913	F0 ( L , R )
-0.1760913	F1 ( L , R )
-0.1760913	K ( L , R )
-0.1249387	N ( L , R )
-0.1760913	QR ( L , R )	-0.3679768
-0.1760913	QS ( L , R )
-0.1760913	L , N , R )	0
-0.6532125	L , N , R </s>
-0.09691001	G ( sym_ , R )	0
-0.1760913	( ) ) ; R --	0
-0.1249387	_ ) , B R )	0
-0.1760913	d Y [ j S ]
-0.1760913	++ = * ++ T ;
-0.09691001	( T d , T l	0
-0.1249387	) ; R -- T ,
-0.1760913	[ v ] == T ++
-0.1760913	c ) ) ; U ;	0
-0.1760913	, 0 ) ; U int
-0.1760913	0 , 0 , W ,	0
-0.1760913	; U ; d W --
-0.1760913	; i < s W ;	0
-0.1760913	X ) E3 ( X )	0
-0.1760913	g = g * Y +	0
-0.1760913	w = D d Y [
-0.1760913	V F ( w Z ,	0
-0.1760913	v ] = A [ v	0
-0.1249387	<s> y -> b [ L	0
-0.1760913	pro * const his [ ]	0
-0.1760913	- asn . not [ xor	0.2218488
-0.03778856	( not . not [ xor	-0.2397603
-0.1760913	++ not . not [ xor	0.3245111
-0.09691001	<s> not . not [ xor	0.1995723
-0.1760913	= O ( y [ optind
-0.1760913	, "%s" , y [ optind
-0.1760913	80 + g ++ ] =
-0.1760913	= u [ 0 ] ;
-0.1760913	[ optind + 1 ] )	0
-0.1760913	p [ - 1 ] =
-0.1249387	u [ - 1 ] =	0.09691
-0.1760913	; u [ 3 ] =
-0.1760913	, u [ 4 ] ,
-0.1760913	-> b [ L ] .	0
-0.1760913	; z [ L ] =
-0.1760913	Y [ i S ] ;
-0.1760913	Y [ j S ] )
-0.1760913	* const his [ ] )
-0.1760913	( Q [ d ] .
-0.1760913	<s> Q [ k ] .
-0.1760913	[ W * p ] ,
-1	. not [ xor ] !=	0
-1	. not [ xor ] &
-0.8239087	. not [ xor ] )	0
-0.8239087	. not [ xor ] ;	0
-0.69897	. not [ xor ] =	0
-1	. not [ xor ] >>
-0.1760913	. c = & _ f	0
-0.1760913	O = 3 , _ (	0
-0.1760913	O = 6 , _ (	0
-0.09691001	G ( L , _ )	0
-0.1760913	) ( R , _ )	0
-0.1249387	w ) { . _ =	0
-0.1760913	b -> op && a ->
-0.1760913	a = 0 ; a <
-0.1760913	static void gly ( ala *	0
-0.1760913	void phe ( const ala not	0
-0.1760913	) ( ( ( and )
-0.1760913	and ) ( ( and )
-0.1249387	xor ] = ( and )	0.1760913
-0.1760913	const not , const and his	0
-0.1760913	( ; K != b ;	0
-0.09691001	u = M ( b ,	0
-0.1760913	<s> } while ( b &&
-0.1760913	* a , * b ;	0
-0.1249387	N ( x . c )	0
-0.1760913	N ( y . c )	0
-0.1760913	) B ( D c ,
-0.1760913	static void phe ( const ala	0
-0.1760913	gly ( ala * const not	0
-0.1760913	, const pro * const his	0
-0.1760913	* const not , const and	0
-0.1760913	( met val , const pro	0
-0.1249387	f ( n , d )	0
-0.1760913	) ; U ; d W	0
-0.30103	T l ) { d -=	0
-0.1760913	bh ( m , e ,	0
-0.1760913	B ( f L e ,	0
-0.1760913	) ; } } else {
-0.1760913	c = & _ f }
-0.1760913	) { for ( g =	0
-0.1760913	g = 0 ; g <
-0.1760913	[ xor ] != gln )	0
-0.1249387	) ? glu : gln ;	0
-0.1760913	( & not , glu )	0
-0.1760913	] ) ) ? glu :	0
-0.1760913	not , const and his )
-0.1760913	const pro * const his [	0
-0.1249387	<s> while ( ( i =
-0.1760913	; ) for ( i =
-0.1760913	) ; for ( i =
-0.07918125	i = 0 ; i <
-0.1760913	char * d , int l
-0.1760913	) ) ; } int main
-0.1760913	o = _ ( j ,
-0.1760913	j + B -> j +	0
-0.1760913	C ( o + k ,
-0.1760913	m , e , k ,
-0.1760913	i , j , k ,
-0.1760913	) { d -= l ;	0
-0.09691001	T d , T l )	0
-0.1760913	not . not [ leu ]
-0.1760913	] = o [ m *	0
-0.1760913	) ; } int main (	0
-0.1760913	<s> met main ( met val	0
-0.1249387	d = f ( n ,	-0.30103
-0.1760913	( w Z , n )	0
-0.09691001	* ( 1 - n )	0
-0.1760913	K = K -> n )	0
-0.1760913	b = b -> n ;	0
-0.1760913	U ; p < n ;	0
-0.1249387	<s> gly ( & not ,	0
-0.07918125	( and ) ( not .	0
-0.1760913	<s> if ( * not .	0
-0.1760913	asp - asn . not [	0
-0.07918125	) ( not . not [	0.3010299
-0.1760913	= ( not . not [	0.60206
-0.1760913	free ( not . not )	0
-0.09691001	if ( not . not [	0.4771212
-0.1760913	<s> ++ not . not [	0
-0.1249387	trp ; xor < not .	0.1760913
-0.1760913	unk ; xor < not .	0.30103
-0.1760913	phe ( const ala not )
-0.1760913	( ala * const not ,	0
-0.1760913	V * I ( o ,
-0.1760913	g = _ ( o ,	0
-0.1760913	( ( 2 * o -
-0.1760913	( 4 ) += o *
-0.1760913	( 5 ) += o *
-0.1760913	m , n , o )
-0.1760913	] . q = o ;	0
-0.1760913	32 << 8 | o &
-0.1760913	? 0 : ( p =
-0.1760913	] = h ( p [
-0.1760913	( O = * p ++	0
-0.1760913	met val , const pro *	0
-0.1760913	[ L ] . q =	0
-0.1760913	] * 10 + s [
-0.1760913	U ; i < s W
-0.1760913	L ) G ( sym_ ,	0.2218488
-0.1760913	R ) G ( sym_ ,	0.2218488
-0.09691001	for ( xor = trp ;	0
-0.1760913	<s> tyr = & tyr [
-0.1249387	= 0 ; ! u R
-0.1249387	M ( b , u ,
-0.1760913	not [ xor - unk ]
-0.1760913	for ( xor = unk ;	0
-0.1760913	m ( ) && v <
-0.1760913	] = A [ v |	0
-0.07918125	xor < not . val ;	0
-0.1760913	met main ( met val ,	0
-0.1760913	; V F ( w Z	0
-0.1760913	t ) ; } w f
-0.1760913	{ . _ = x .	0
-0.06694679	. val ; ++ xor )	0
-0.09691001	xor = trp ; xor <	0
-0.1760913	xor = unk ; xor <	0
-0.09691001	asn . not [ xor ]	-0.5314789
-0.9777236	not . not [ xor -	0
-0.07463362	not . not [ xor ]	-0.146128
-0.1760913	, char * * y )
-0.1760913	2 , "%s" , y [	0
-0.1249387	x , K -> y )	0
-0.1760913	[ k ] . y =
-0.1760913	X , 0 ) { b
-0.30103	d W ; ) { _
-0.1760913	be , bf ) { int
-0.1760913	] != gln ) { </s>
-0.09691001	, T l ) { d	0
-0.1760913	K -> n ) { </s>
-0.1249387	( _ s ) { _
-0.1760913	if ( sec ) { </s>
-0.1760913	not . val ) { </s>
-0.1760913	( ( w ) { .
-0.1760913	, ( w ) { .	-0.07918125
-0.06694679	; ++ xor ) { </s>
-0.1760913	>> 32 << 8 | o	0
-0.1760913	= A [ v | a
-0.1760913	( t ) ; } w	0

\7-grams:
-0.09691001	! ! ! ! ! ! !	0.09691
-0.1760913	U j = 0 ; ! u	0
-0.1760913	<s> for ( ; K != b	0
-0.1760913	. not [ xor ] != gln	0
-0.1760913	write ( 1 , "> " ,	0
-0.1760913	<s> err ( 2 , "%s" ,	0
-0.1249387	W ( m ( ) && v	0
-0.1760913	( and ) ( ( ( and	0
-0.1760913	= ( and ) ( ( and	0
-0.39794	( sym_ , R ) ( L	0
-0.39794	( sym_ , R ) ( R	0
-0.4771213	] = ( and ) ( (	0
-0.30103	] = ( and ) ( not	0
-0.1760913	= g * Y + ( (
-0.1760913	R ) ( L , ( ,	0
-0.1760913	z ( ) ) : ( a
-0.1249387	not [ xor ] = ( and	0
-0.1760913	L , R ) F ( L	0
-0.1760913	S ] ; V F ( w	0
-0.1760913	R , L ) G ( sym_	0
-0.1760913	L , R ) G ( sym_	0
-0.1760913	L , R ) QR ( L	0
-0.1760913	O = 3 , _ ( )	0
-0.1760913	O = 6 , _ ( )	0
-0.1760913	) ; } int main ( int
-0.1760913	= 3 , _ ( ) )
-0.1760913	= 6 , _ ( ) ,
-0.1760913	; W ( m ( ) &&	0.1249388
-0.1249387	; z ( "#" ) ) ;	0
-0.1760913	) , _ ( ) ) ,
-0.1760913	L , ( , ) ) </s>
-0.1760913	( L , R ) ) </s>
-0.1760913	not [ xor ] ) ) ?	0
-0.1760913	( x . c ) ) ;
-0.1760913	( y . c ) ) ;	0
-0.1760913	w Z , n ) ) {
-0.1760913	( L , ( , ) )	0
-0.1760913	err ( 2 , 0 ) ;	0
-0.1760913	C ( H , 0 ) ;	0
-0.1760913	a ( X , 0 ) {	0
-0.1760913	_ ( o , 16 ) ;	0
-0.1760913	<s> for ( ; ; ) {
-0.1760913	< D d W ; ) {
-0.1760913	i < s W ; ) {
-0.1760913	; p < n ; ) {
-0.1760913	F ( L , R ) </s>
-0.1760913	QR ( L , R ) </s>
-0.4771213	L , N , R ) L	0
-0.09691001	G ( sym_ , R ) (	0
-0.1760913	_ ) , B R ) ,
-0.1760913	X ) E3 ( X ) </s>
-0.1760913	[ optind + 1 ] ) ;	0
-0.1760913	. not [ xor ] ) )	0
-0.09691001	G ( L , _ ) ,	0
-0.1760913	) ( R , _ ) </s>
-0.1249387	xor ] = ( and ) (	-0.1760913
-0.1760913	N ( x . c ) )	0
-0.1760913	N ( y . c ) )	0
-0.1249387	f ( n , d ) ;	0
-0.1760913	[ xor ] != gln ) {	0
-0.1760913	( & not , glu ) ;	0
-0.09691001	T d , T l ) {	0
-0.1760913	( w Z , n ) )	0
-0.1249387	* ( 1 - n ) ;	0
-0.1760913	K = K -> n ) {	0
-0.1760913	free ( not . not ) ;	0
-0.06694679	. val ; ++ xor ) {	0
-0.1249387	x , K -> y ) ;	0
-0.1760913	<s> E * a , * b	0
-0.1760913	; for ( O = * p	0
-0.1760913	static void gly ( ala * const	0
-0.1760913	] = o [ m * 80	0
-0.1760913	met val , const pro * const	0
-0.1249387	o [ h * 80 + m
-0.1760913	o [ m * 80 + n
-0.1760913	g = g * Y + (	0
-0.1760913	j + B -> j + 3
-0.07918125	< not . val ; ++ xor	0
-0.1760913	( O = * p ++ -
-0.1760913	<s> i ( 4 ) += o	0
-0.1760913	<s> i ( 5 ) += o	0
-0.1760913	( 1 , "> " , 2	0
-0.1760913	err ( 2 , "%s" , y	0
-0.1760913	) ( L , ( , )	0
-0.30103	, _ ( ) ) , Q
-0.1249387	( L , _ ) , B	0
-0.1760913	) , O = 3 , _	0
-0.1760913	, R ) ( L , (	0
-0.1760913	R ) F ( L , R	0
-0.09691001	J ( G ( L , _	0
-0.1760913	R ) QR ( L , R	0
-0.1760913	N , R ) L , N	0
-0.1760913	R ) L , N , R	0
-0.1760913	, R ) ( R , _	0
-0.1760913	0 , 0 , W , p
-0.1760913	V F ( w Z , n	0
-0.1249387	u = M ( b , u	0
-0.1760913	bh ( m , e , k	0
-0.1760913	B ( f L e , r
-0.1249387	d = f ( n , d	0
-0.1760913	<s> gly ( & not , glu	0
-0.1760913	( ala * const not , const	0
-0.1760913	g = _ ( o , 16	0
-0.1760913	L ) G ( sym_ , R	0.2218488
-0.1760913	R ) G ( sym_ , R	0.2218488
-0.1760913	met main ( met val , const	0
-0.1760913	u [ 4 ] *= - 1
-0.1760913	not . not [ xor - unk	0
-0.1760913	( ) ) ; R -- T	0
-0.1760913	T l ) { d -= l	0
-0.1760913	A -> j + B -> j	0
-0.1249387	K -> x , K -> y	0.1249388
-0.1760913	b ; K = K -> n	0
-0.1760913	-> b [ L ] . q	0
-0.07918125	( and ) ( not . not	0
-0.1760913	<s> if ( * not . not
-0.1249387	trp ; xor < not . val	0.1760913
-0.1760913	unk ; xor < not . val	0.30103
-0.1760913	{ . _ = x . _
-0.1760913	, ( w ) { . _	0.1249388
-0.1760913	, 0 , 0 , 0 ,
-0.1760913	<s> err ( 2 , 0 )	0
-0.1249387	= C ( H , 0 )	0
-0.09691001	[ - 1 ] = 0 ;
-0.1760913	{ for ( g = 0 ;	0
-0.1760913	1 & 15 ) < 14 &
-0.1760913	<s> o -= g * 16 ;	0
-0.1760913	= _ ( o , 16 )	0
-0.1760913	<s> g = pow ( 2 ,
-0.1760913	1 , "> " , 2 )
-0.1760913	L ] = o >> 32 <<	0
-0.1760913	= o >> 32 << 8 |	0
-0.1760913	? o [ g * 80 +
-0.1760913	= o [ m * 80 +	0
-0.1760913	] ) ) ? glu : gln	0
-0.1760913	z ( "#" ) ) ; z
-0.1760913	y . c ) ) ; U	0
-0.1760913	( 2 , 0 ) ; </s>
-0.1760913	( H , 0 ) ; U	0
-0.1760913	( o , 0 ) ; </s>
-0.1760913	( o , 16 ) ; </s>
-0.1760913	( j , 6 ) ; </s>
-0.1760913	* C * C ) ; </s>
-0.1760913	<s> rewind ( Q ) ; </s>
-0.1760913	optind + 1 ] ) ; </s>
-0.1760913	y [ optind ] ) ; </s>
-0.1249387	( n , d ) ; </s>
-0.1760913	& not , glu ) ; </s>
-0.1760913	<s> K ( k ) ; </s>
-0.1249387	( 1 - n ) ; </s>
-0.1760913	<s> phe ( not ) ; </s>
-0.1760913	( not . not ) ; </s>
-0.1249387	, K -> y ) ; </s>
-0.1760913	<s> ( O = 0 ; O
-0.1760913	for ( a = 0 ; a	0
-0.1760913	for ( g = 0 ; g	0
-0.1249387	for ( i = 0 ; i	0
-0.1760913	U int i = 0 ; i	0
-0.1760913	for ( k = 0 ; k
-0.1760913	o -= g * 16 ; </s>
-0.1760913	c ) ) ; U ; d	0
-0.1760913	; i < s W ; )	0
-0.1249387	. not [ xor ] ; </s>
-0.1760913	( ; K != b ; K	0
-0.1760913	* a , * b ; </s>
-0.1249387	) ? glu : gln ; </s>
-0.1760913	) { d -= l ; d
-0.1760913	b = b -> n ; </s>
-0.1760913	U ; p < n ; )	0
-0.1760913	] . q = o ; </s>
-0.09691001	for ( xor = trp ; xor	0
-0.1760913	for ( xor = unk ; xor	0
-0.07918125	xor < not . val ; ++	0
-0.1760913	- 1 & 15 ) < 14	0
-0.1249387	xor = trp ; xor < not	0
-0.1760913	xor = unk ; xor < not	0
-0.1760913	] = o >> 32 << 8	0
-0.1760913	K != b ; K = K	0
-0.1249387	u [ - 1 ] = 0	0.09691
-0.1249387	. not [ xor ] = (	0
-0.1760913	w ) { . _ = x	0
-0.1760913	) { for ( g = 0	0
-0.1760913	[ L ] . q = o	0
-0.1760913	[ xor ] ) ) ? glu	0
-0.1249387	L , _ ) , B R	0
-0.1760913	( L , R ) F (	0
-0.1760913	( R , L ) G (	0
-0.1760913	( L , R ) G (	0
-0.1249387	( L , R ) J (
-0.1249387	, K -> x , K ->	0
-0.1760913	; K != b ; K =	0
-0.1760913	!= b ; K = K ->	0
-0.1760913	sym_ , R ) ( L ,	0
-0.1760913	, R ) F ( L ,	0
-0.1760913	, R ) QR ( L ,	0
-0.1760913	, N , R ) L ,	0
-0.1760913	<s> y -> b [ L ]	0
-0.1760913	, R ) L , N ,	0
-0.1760913	, _ ( ) , O =
0	( L , R ) QR (	0
-0.1760913	sym_ , R ) ( R ,	0
-0.1760913	) F ( L , R )	0
-0.1760913	( N ( L , R )
-0.1760913	) QR ( L , R )	0
-0.07918125	( L , N , R )	-0.0457575
-0.1760913	) L , N , R </s>
-0.09691001	) G ( sym_ , R )	0
-0.1249387	, _ ) , B R )	0
-0.1760913	) ) ; R -- T ,
-0.1760913	A [ v ] == T ++
-0.1760913	. c ) ) ; U ;	0
-0.1760913	H , 0 ) ; U int
-0.1760913	, 0 , 0 , W ,	0
-0.1760913	) ; U ; d W --
-0.1760913	( X ) E3 ( X )	0
-0.1760913	<s> g = g * Y +	0
-0.1760913	; V F ( w Z ,	0
-0.1760913	const pro * const his [ ]	0
-0.1760913	asp - asn . not [ xor	0
-0.07918125	) ( not . not [ xor	0.3424227
-0.1760913	= ( not . not [ xor	0.5642715
-0.1249387	if ( not . not [ xor	0.4393327
-0.1760913	<s> ++ not . not [ xor	0
-0.1760913	2 , "%s" , y [ optind
-0.1760913	y [ optind + 1 ] )	0
-0.1760913	y -> b [ L ] .	0
-0.1760913	16711935 ; z [ L ] =
-0.1760913	pro * const his [ ] )
-0.1249387	asn . not [ xor ] )	0
-0.90309	not . not [ xor ] !=	0
-0.90309	not . not [ xor ] &
-0.7269987	not . not [ xor ] ;	0
-0.7269987	not . not [ xor ] =	0
-0.90309	not . not [ xor ] >>
-0.1760913	{ . c = & _ f	0
-0.1760913	, O = 3 , _ (	0
-0.09691001	( G ( L , _ )	0
-0.1760913	R ) ( R , _ )	0
-0.1249387	( w ) { . _ =	0
-0.1760913	( a = 0 ; a <
-0.1760913	<s> static void gly ( ala *	0
-0.1760913	static void phe ( const ala not	0
-0.1760913	and ) ( ( ( and )
-0.1760913	( and ) ( ( and )
-0.1249387	[ xor ] = ( and )	0
-0.1760913	* const not , const and his	0
-0.1760913	for ( ; K != b ;	0
-0.1760913	: u = M ( b ,	0.1249388
-0.1760913	E * a , * b ;	0
-0.1760913	= N ( x . c )
-0.1760913	<s> static void phe ( const ala	0
-0.1760913	void gly ( ala * const not	0
-0.1760913	val , const pro * const his	0
-0.1760913	ala * const not , const and	0
-0.1760913	main ( met val , const pro	0
-0.1249387	= f ( n , d )	0
-0.1760913	) ) ; U ; d W	0
-0.30103	, T l ) { d -=	0
-0.1760913	. c = & _ f }
-0.1760913	( g = 0 ; g <
-0.1760913	not [ xor ] != gln )	0
-0.1760913	) ) ? glu : gln ;	0.1249388
-0.1760913	gly ( & not , glu )	0
-0.1760913	xor ] ) ) ? glu :	0
-0.1760913	const not , const and his )
-0.1760913	, const pro * const his [	0
-0.1760913	" ) ; for ( i =
-0.1760913	( i = 0 ; i <
-0.1760913	int i = 0 ; i <
-0.1760913	( char * d , int l
-0.1760913	<s> o = _ ( j ,
-0.1760913	-> j + B -> j +	0
-0.1760913	( m , e , k ,
-0.1760913	, i , j , k ,
-0.1760913	l ) { d -= l ;	0
-0.09691001	( T d , T l )	0
-0.1249387	<s> d = f ( n ,	0
-0.1760913	F ( w Z , n )	0
-0.1760913	; K = K -> n )	0
-0.1760913	<s> b = b -> n ;	0
-0.1760913	; U ; p < n ;	0
-0.1760913	( ( and ) ( not .	0.30103
-0.1249387	= ( and ) ( not .	0.1760913
-0.1760913	( asp - asn . not [	0
-0.07918125	and ) ( not . not [	0
-0.1760913	<s> free ( not . not )	0
-0.09691001	<s> if ( not . not [	0
-0.1249387	= trp ; xor < not .	0
-0.1760913	= unk ; xor < not .	0
-0.1760913	void phe ( const ala not )
-0.1760913	gly ( ala * const not ,	0
-0.1760913	<s> g = _ ( o ,	0
-0.1760913	i ( 4 ) += o *
-0.1760913	i ( 5 ) += o *
-0.1760913	, m , n , o )
-0.1760913	L ] . q = o ;	0
-0.1760913	>> 32 << 8 | o &
-0.1760913	by ? 0 : ( p =
-0.1760913	for ( O = * p ++	0
-0.1760913	( met val , const pro *	0
-0.1760913	b [ L ] . q =	0
-0.1760913	, L ) G ( sym_ ,	0
-0.1760913	, R ) G ( sym_ ,	0
-0.09691001	<s> for ( xor = trp ;	0
-0.1760913	j = 0 ; ! u R
-0.1249387	= M ( b , u ,
-0.1760913	. not [ xor - unk ]
-0.1760913	<s> for ( xor = unk ;	0
-0.1760913	( m ( ) && v <
-0.1760913	v ] = A [ v |	0
-0.07918125	; xor < not . val ;	0
-0.1760913	<s> met main ( met val ,	0
-0.1760913	] ; V F ( w Z	0
-0.1760913	( t ) ; } w f
-0.1760913	) { . _ = x .	0
-0.07918125	not . val ; ++ xor )	0.06694674
-0.09691001	( xor = trp ; xor <	0
-0.1760913	( xor = unk ; xor <	0
-0.1760913	- asn . not [ xor ]	0.1249388
-0.04139268	( not . not [ xor ]	-0.19382
-0.1760913	++ not . not [ xor ]	-0.3869447
-0.1249387	<s> not . not [ xor ]	-0.5118834
-0.1760913	( 2 , "%s" , y [	0
-0.1249387	-> x , K -> y )	0
-0.1760913	( X , 0 ) { b
-0.1760913	xor ] != gln ) { </s>
-0.09691001	d , T l ) { d	0
-0.1760913	= K -> n ) { </s>
-0.1760913	<s> if ( sec ) { </s>
-0.06694679	val ; ++ xor ) { </s>
-0.1760913	o >> 32 << 8 | o	0
-0.1760913	] = A [ v | a
-0.1760913	z ( t ) ; } w	0

\8-grams:
-0.1249387	! ! ! ! ! ! ! !	0.1249388
-0.1760913	not . not [ xor ] != gln	0
-0.1760913	; W ( m ( ) && v
-0.1760913	] = ( and ) ( ( and	0
-0.39794	G ( sym_ , R ) ( L	0
-0.39794	G ( sym_ , R ) ( R	0
-0.1760913	xor ] = ( and ) ( not	0.1249388
-0.1760913	g = g * Y + ( (
-0.1760913	, R ) ( L , ( ,	0
-0.1249387	. not [ xor ] = ( and	0
-0.1760913	( L , R ) F ( L	0
-0.1760913	( R , L ) G ( sym_	0
-0.1760913	( L , R ) G ( sym_	0
-0.1760913	( L , R ) QR ( L	0
-0.1760913	, O = 3 , _ ( )	0
-0.1760913	O = 3 , _ ( ) )
-0.1760913	O = 6 , _ ( ) ,
-0.1760913	( L , ( , ) ) </s>
-0.1760913	. not [ xor ] ) ) ?	0
-0.1760913	N ( x . c ) ) ;
-0.1760913	N ( y . c ) ) ;	0
-0.1760913	( w Z , n ) ) {
-0.1760913	) ( L , ( , ) )	0
-0.1760913	<s> err ( 2 , 0 ) ;	0
-0.1760913	= C ( H , 0 ) ;	0
-0.1760913	= _ ( o , 16 ) ;	0
-0.1760913	; i < s W ; ) {
-0.1760913	U ; p < n ; ) {
-0.1760913	) F ( L , R ) </s>
-0.1760913	) QR ( L , R ) </s>
-0.39794	( L , N , R ) L	0
-0.09691001	) G ( sym_ , R ) (	0
-0.1760913	, _ ) , B R ) ,
-0.1760913	( X ) E3 ( X ) </s>
-0.1760913	y [ optind + 1 ] ) ;	0
-0.1760913	asn . not [ xor ] ) )	0
-0.09691001	( G ( L , _ ) ,	0
-0.1760913	R ) ( R , _ ) </s>
-0.1249387	[ xor ] = ( and ) (	0
-0.1249387	= f ( n , d ) ;	0
-0.1760913	not [ xor ] != gln ) {	0
-0.1760913	gly ( & not , glu ) ;	0
-0.09691001	( T d , T l ) {	0
-0.1760913	F ( w Z , n ) )	0
-0.1760913	; K = K -> n ) {	0
-0.1760913	<s> free ( not . not ) ;	0
-0.07918125	not . val ; ++ xor ) {	0.06694674
-0.1249387	-> x , K -> y ) ;	0
-0.1760913	<s> static void gly ( ala * const	0
-0.1760913	( met val , const pro * const	0
-0.1760913	= o [ m * 80 + n
-0.1760913	<s> g = g * Y + (	0
-0.1760913	-> j + B -> j + 3
-0.07918125	xor < not . val ; ++ xor	0
-0.1760913	for ( O = * p ++ -
-0.1760913	write ( 1 , "> " , 2	0
-0.1760913	<s> err ( 2 , "%s" , y	0
-0.1760913	R ) ( L , ( , )	0
-0.1249387	G ( L , _ ) , B	0
-0.1760913	sym_ , R ) ( L , (	0
-0.1760913	, R ) F ( L , R	0
-0.1760913	, R ) QR ( L , R	0
-0.1760913	, N , R ) L , N	0
-0.1760913	, R ) L , N , R	0
-0.1760913	sym_ , R ) ( R , _	0
-0.1760913	, 0 , 0 , W , p
-0.1760913	; V F ( w Z , n	0
-0.1760913	: u = M ( b , u	0.1249388
-0.1249387	<s> d = f ( n , d	0
-0.1760913	gly ( ala * const not , const	0
-0.1760913	<s> g = _ ( o , 16	0
-0.1760913	, L ) G ( sym_ , R	0
-0.1760913	, R ) G ( sym_ , R	0
-0.1760913	<s> met main ( met val , const	0
-0.1760913	, T l ) { d -= l	0
-0.1249387	, K -> x , K -> y	0
-0.1760913	!= b ; K = K -> n	0
-0.1760913	y -> b [ L ] . q	0
-0.1760913	( ( and ) ( not . not	0.30103
-0.1249387	= ( and ) ( not . not	0.1760913
-0.1249387	= trp ; xor < not . val	0
-0.1760913	= unk ; xor < not . val	0
-0.1760913	) { . _ = x . _
-0.1249387	u [ - 1 ] = 0 ;
-0.1760913	) { for ( g = 0 ;	0
-0.1760913	- 1 & 15 ) < 14 &
-0.1760913	g = _ ( o , 16 )	0
-0.1760913	( 1 , "> " , 2 )
-0.1760913	] = o >> 32 << 8 |	0
-0.1760913	] = o [ m * 80 +	0
-0.1760913	xor ] ) ) ? glu : gln	0
-0.1760913	; z ( "#" ) ) ; z
-0.1760913	( y . c ) ) ; U	0
-0.1760913	err ( 2 , 0 ) ; </s>
-0.1760913	C ( H , 0 ) ; U	0
-0.1760913	_ ( o , 16 ) ; </s>
-0.1760913	[ optind + 1 ] ) ; </s>
-0.1249387	f ( n , d ) ; </s>
-0.1760913	( & not , glu ) ; </s>
-0.1249387	* ( 1 - n ) ; </s>
-0.1760913	free ( not . not ) ; </s>
-0.1249387	x , K -> y ) ; </s>
-0.1760913	{ for ( g = 0 ; g	0
-0.1760913	<s> o -= g * 16 ; </s>
-0.1760913	. c ) ) ; U ; d	0
-0.1249387	not . not [ xor ] ; </s>
-0.1760913	for ( ; K != b ; K	0
-0.1760913	E * a , * b ; </s>
-0.1760913	) ) ? glu : gln ; </s>
-0.1760913	l ) { d -= l ; d
-0.1760913	<s> b = b -> n ; </s>
-0.1760913	; U ; p < n ; )	0
-0.1760913	L ] . q = o ; </s>
-0.09691001	<s> for ( xor = trp ; xor	0
-0.1760913	<s> for ( xor = unk ; xor	0
-0.07918125	; xor < not . val ; ++	0
-0.1249387	( xor = trp ; xor < not	0
-0.1760913	( xor = unk ; xor < not	0
-0.1760913	L ] = o >> 32 << 8	0
-0.1760913	; K != b ; K = K	0
-0.1249387	not . not [ xor ] = (	0
-0.1760913	( w ) { . _ = x	0
-0.1760913	b [ L ] . q = o	0
-0.1760913	not [ xor ] ) ) ? glu	0
-0.1249387	( L , _ ) , B R	0
-0.1760913	( ; K != b ; K =	0
-0.1760913	K != b ; K = K ->	0
-0.1760913	( sym_ , R ) ( L ,	0
-0.1760913	L , R ) F ( L ,	0
-0.1760913	L , R ) QR ( L ,	0
-0.1760913	L , N , R ) L ,	0
-0.1760913	N , R ) L , N ,	0
-0.1760913	( sym_ , R ) ( R ,	0
-0.1760913	R ) F ( L , R )	0
-0.1760913	R ) QR ( L , R )	0
-0.1760913	R ) L , N , R </s>
-0.1760913	L ) G ( sym_ , R )	0.2218488
-0.1760913	R ) G ( sym_ , R )	0.2218488
-0.1249387	L , _ ) , B R )	0
-0.1760913	( ) ) ; R -- T ,
-0.1760913	y . c ) ) ; U ;	0
-0.1760913	( H , 0 ) ; U int
-0.1760913	) ) ; U ; d W --
-0.1760913	] ; V F ( w Z ,	0
-0.1760913	, const pro * const his [ ]	0
-0.1760913	( asp - asn . not [ xor	0
-0.07918125	and ) ( not . not [ xor	0
-0.1249387	<s> if ( not . not [ xor	0
-0.1760913	( 2 , "%s" , y [ optind
-0.1760913	<s> y -> b [ L ] .	0
-0.1760913	const pro * const his [ ] )
-0.1760913	- asn . not [ xor ] )	0
-0.69897	( not . not [ xor ] !=	0
-0.69897	( not . not [ xor ] &
-0.69897	( not . not [ xor ] >>
-0.1760913	++ not . not [ xor ] ;	0.1249388
-0.1249387	<s> not . not [ xor ] =	0
-0.1760913	) , O = 3 , _ (	0
-0.09691001	J ( G ( L , _ )	0
-0.1760913	, R ) ( R , _ )	0
-0.1760913	, ( w ) { . _ =
-0.1760913	for ( a = 0 ; a <
-0.1760913	<s> static void phe ( const ala not	0
-0.1760913	( and ) ( ( ( and )
-0.1760913	= ( and ) ( ( and )
-0.1249387	not [ xor ] = ( and )	0
-0.1760913	ala * const not , const and his	0
-0.1760913	<s> for ( ; K != b ;	0
-0.1760913	<s> E * a , * b ;	0
-0.1760913	static void gly ( ala * const not	0
-0.1760913	met val , const pro * const his	0
-0.1760913	( ala * const not , const and	0
-0.1760913	met main ( met val , const pro	0
-0.1249387	d = f ( n , d )	0
-0.1760913	c ) ) ; U ; d W	0
-0.30103	d , T l ) { d -=	0
-0.1760913	{ . c = & _ f }
-0.1760913	for ( g = 0 ; g <
-0.1760913	. not [ xor ] != gln )	0
-0.1760913	] ) ) ? glu : gln ;	0
-0.1760913	<s> gly ( & not , glu )	0
-0.1760913	[ xor ] ) ) ? glu :	0
-0.1760913	* const not , const and his )
-0.1760913	val , const pro * const his [	0
-0.1760913	for ( i = 0 ; i <
-0.1760913	U int i = 0 ; i <
-0.1760913	A -> j + B -> j +	0
-0.1760913	bh ( m , e , k ,
-0.1760913	T l ) { d -= l ;	0
-0.1760913	V F ( w Z , n )	0
-0.1760913	b ; K = K -> n )	0
-0.1249387	] = ( and ) ( not .	0
-0.07918125	( and ) ( not . not [	0
-0.1249387	xor = trp ; xor < not .	0
-0.1760913	xor = unk ; xor < not .	0
-0.1760913	static void phe ( const ala not )
-0.1760913	void gly ( ala * const not ,	0
-0.1760913	<s> i ( 4 ) += o *
-0.1760913	<s> i ( 5 ) += o *
-0.1760913	[ L ] . q = o ;	0
-0.1760913	o >> 32 << 8 | o &
-0.1760913	; for ( O = * p ++	0
-0.1760913	main ( met val , const pro *	0
-0.1760913	-> b [ L ] . q =	0
-0.1760913	R , L ) G ( sym_ ,	0
-0.1760913	L , R ) G ( sym_ ,	0
-0.1760913	U j = 0 ; ! u R
-0.1249387	u = M ( b , u ,
-0.1760913	not . not [ xor - unk ]
-0.1760913	W ( m ( ) && v <
-0.1249387	trp ; xor < not . val ;	0.1760913
-0.1760913	unk ; xor < not . val ;	0.30103
-0.1760913	S ] ; V F ( w Z	0
-0.1760913	z ( t ) ; } w f
-0.1760913	w ) { . _ = x .	0
-0.07918125	< not . val ; ++ xor )	0
-0.09691001	for ( xor = trp ; xor <	0
-0.1760913	for ( xor = unk ; xor <	0
-0.1760913	asp - asn . not [ xor ]	0
-0.09691001	) ( not . not [ xor ]	-0.20412
-0.1760913	= ( not . not [ xor ]
-0.1249387	if ( not . not [ xor ]	-0.3802113
-0.1760913	<s> ++ not . not [ xor ]	0
-0.1760913	err ( 2 , "%s" , y [	0
-0.1760913	K -> x , K -> y )	0.1249388
-0.1760913	a ( X , 0 ) { b
-0.1760913	[ xor ] != gln ) { </s>
-0.09691001	T d , T l ) { d	0
-0.1760913	K = K -> n ) { </s>
-0.06694679	. val ; ++ xor ) { </s>
-0.1760913	= o >> 32 << 8 | o	0
-0.1760913	v ] = A [ v | a

\9-grams:
-0.1760913	! ! ! ! ! ! ! ! !
-0.1760913	( not . not [ xor ] != gln
-0.39794	) G ( sym_ , R ) ( L
-0.39794	) G ( sym_ , R ) ( R
-0.1760913	[ xor ] = ( and ) ( not
-0.1760913	<s> g = g * Y + ( (
-0.1760913	sym_ , R ) ( L , ( ,
-0.1249387	not . not [ xor ] = ( and
-0.1760913	) , O = 3 , _ ( )
-0.1760913	, O = 3 , _ ( ) )
-0.1760913	) ( L , ( , ) ) </s>
-0.1760913	asn . not [ xor ] ) ) ?
-0.1760913	F ( w Z , n ) ) {
-0.1760913	R ) ( L , ( , ) )
-0.1760913	g = _ ( o , 16 ) ;
-0.1760913	; U ; p < n ; ) {
-0.1760913	R ) F ( L , R ) </s>
-0.1760913	R ) QR ( L , R ) </s>
-0.1760913	L ) G ( sym_ , R ) (
-0.1760913	R ) G ( sym_ , R ) (
-0.1760913	L , _ ) , B R ) ,
-0.1760913	- asn . not [ xor ] ) )
-0.09691001	J ( G ( L , _ ) ,
-0.1760913	, R ) ( R , _ ) </s>
-0.1249387	not [ xor ] = ( and ) (
-0.1249387	d = f ( n , d ) ;
-0.1760913	. not [ xor ] != gln ) {
-0.1760913	<s> gly ( & not , glu ) ;
-0.1760913	V F ( w Z , n ) )
-0.1760913	b ; K = K -> n ) {
-0.07918125	< not . val ; ++ xor ) {
-0.1760913	K -> x , K -> y ) ;
-0.1760913	main ( met val , const pro * const
-0.1760913	] = o [ m * 80 + n
-0.1760913	A -> j + B -> j + 3
-0.07918125	; xor < not . val ; ++ xor
-0.1760913	; for ( O = * p ++ -
-0.1760913	, R ) ( L , ( , )
-0.1249387	( G ( L , _ ) , B
-0.1760913	( sym_ , R ) ( L , (
-0.1760913	L , R ) F ( L , R
-0.1760913	L , R ) QR ( L , R
-0.1760913	L , N , R ) L , N
-0.1760913	N , R ) L , N , R
-0.1760913	( sym_ , R ) ( R , _
-0.1760913	] ; V F ( w Z , n
-0.1760913	void gly ( ala * const not , const
-0.1760913	R , L ) G ( sym_ , R
-0.1760913	L , R ) G ( sym_ , R
-0.1760913	d , T l ) { d -= l
-0.1760913	K != b ; K = K -> n
-0.1760913	<s> y -> b [ L ] . q
-0.1249387	] = ( and ) ( not . not
-0.1249387	xor = trp ; xor < not . val
-0.1760913	xor = unk ; xor < not . val
-0.1760913	w ) { . _ = x . _
-0.1760913	<s> g = _ ( o , 16 )
-0.1760913	write ( 1 , "> " , 2 )
-0.1760913	L ] = o >> 32 << 8 |
-0.1760913	[ xor ] ) ) ? glu : gln
-0.1760913	N ( y . c ) ) ; U
-0.1760913	<s> err ( 2 , 0 ) ; </s>
-0.1760913	= C ( H , 0 ) ; U
-0.1760913	= _ ( o , 16 ) ; </s>
-0.1760913	y [ optind + 1 ] ) ; </s>
-0.1249387	= f ( n , d ) ; </s>
-0.1760913	gly ( & not , glu ) ; </s>
-0.1760913	<s> free ( not . not ) ; </s>
-0.1249387	-> x , K -> y ) ; </s>
-0.1760913	) { for ( g = 0 ; g
-0.1760913	y . c ) ) ; U ; d
-0.1760913	++ not . not [ xor ] ; </s>
-0.1760913	<s> for ( ; K != b ; K
-0.1760913	<s> E * a , * b ; </s>
-0.1760913	] ) ) ? glu : gln ; </s>
-0.1760913	T l ) { d -= l ; d
-0.1760913	[ L ] . q = o ; </s>
-0.1249387	trp ; xor < not . val ; ++
-0.1760913	unk ; xor < not . val ; ++
-0.1249387	for ( xor = trp ; xor < not
-0.1760913	for ( xor = unk ; xor < not
-0.1760913	( ; K != b ; K = K
-0.1249387	<s> not . not [ xor ] = (
-0.1760913	-> b [ L ] . q = o
-0.1760913	. not [ xor ] ) ) ? glu
-0.1249387	G ( L , _ ) , B R
-0.1760913	for ( ; K != b ; K =
-0.1760913	; K != b ; K = K ->
-0.1760913	G ( sym_ , R ) ( L ,
-0.1760913	( L , R ) F ( L ,
-0.1760913	( L , R ) QR ( L ,
-0.1760913	( L , N , R ) L ,
-0.1760913	, N , R ) L , N ,
-0.1760913	G ( sym_ , R ) ( R ,
-0.1760913	, R ) F ( L , R )
-0.1760913	, R ) QR ( L , R )
-0.1760913	, R ) L , N , R </s>
-0.1760913	, L ) G ( sym_ , R )
-0.1760913	, R ) G ( sym_ , R )
-0.1249387	( L , _ ) , B R )
-0.1760913	( y . c ) ) ; U ;
-0.1760913	C ( H , 0 ) ; U int
-0.1760913	c ) ) ; U ; d W --
-0.1760913	S ] ; V F ( w Z ,
-0.1760913	val , const pro * const his [ ]
-0.07918125	( and ) ( not . not [ xor
-0.1760913	err ( 2 , "%s" , y [ optind
-0.1760913	, const pro * const his [ ] )
-0.1760913	asp - asn . not [ xor ] )
-0.30103	) ( not . not [ xor ] >>
-0.1760913	if ( not . not [ xor ] !=
-0.1760913	<s> ++ not . not [ xor ] ;
-0.1760913	sym_ , R ) ( R , _ )
-0.1760913	] = ( and ) ( ( and )
-0.1249387	. not [ xor ] = ( and )
-0.1760913	( ala * const not , const and his
-0.1760913	<s> static void gly ( ala * const not
-0.1760913	( met val , const pro * const his
-0.1760913	gly ( ala * const not , const and
-0.1760913	<s> met main ( met val , const pro
-0.1249387	<s> d = f ( n , d )
-0.1760913	. c ) ) ; U ; d W
-0.30103	T d , T l ) { d -=
-0.1760913	{ for ( g = 0 ; g <
-0.1760913	not . not [ xor ] != gln )
-0.1760913	xor ] ) ) ? glu : gln ;
-0.1760913	not [ xor ] ) ) ? glu :
-0.1760913	ala * const not , const and his )
-0.1760913	met val , const pro * const his [
-0.1760913	, T l ) { d -= l ;
-0.1760913	; V F ( w Z , n )
-0.1760913	!= b ; K = K -> n )
-0.1760913	xor ] = ( and ) ( not .
-0.1760913	( ( and ) ( not . not [
-0.1249387	= ( and ) ( not . not [
-0.1249387	( xor = trp ; xor < not .
-0.1760913	( xor = unk ; xor < not .
-0.1760913	<s> static void phe ( const ala not )
-0.1760913	static void gly ( ala * const not ,
-0.1760913	b [ L ] . q = o ;
-0.1760913	= o >> 32 << 8 | o &
-0.1760913	met main ( met val , const pro *
-0.1760913	y -> b [ L ] . q =
-0.1760913	( R , L ) G ( sym_ ,
-0.1760913	( L , R ) G ( sym_ ,
-0.1760913	: u = M ( b , u ,
-0.1249387	= trp ; xor < not . val ;
-0.1760913	= unk ; xor < not . val ;
-0.1760913	( w ) { . _ = x .
-0.07918125	xor < not . val ; ++ xor )
-0.09691001	<s> for ( xor = trp ; xor <
-0.1760913	<s> for ( xor = unk ; xor <
-0.1760913	( asp - asn . not [ xor ]
-0.09691001	and ) ( not . not [ xor ]
-0.1249387	<s> if ( not . not [ xor ]
-0.1760913	<s> err ( 2 , "%s" , y [
-0.1760913	, K -> x , K -> y )
-0.1760913	not [ xor ] != gln ) { </s>
-0.09691001	( T d , T l ) { d
-0.1760913	; K = K -> n ) { </s>
-0.07918125	not . val ; ++ xor ) { </s>
-0.1760913	] = o >> 32 << 8 | o

\end\
